[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alain Quartier-la-Tente. Author, maintainer. Anna Michalek. Author. Jean Palate. Author. Raf Baeyens. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Quartier-la-Tente , Michalek , Palate J, Baeyens R (2024). RJDemetra: Interface 'JDemetra+' Seasonal Adjustment Software. R package version 0.2.9, https://github.com/rjdverse/rjdemetra, https://rjdverse.github.io/rjdemetra/.","code":"@Manual{,   title = {RJDemetra: Interface to 'JDemetra+' Seasonal Adjustment Software},   author = {Alain Quartier-la-Tente and Anna Michalek and Jean Palate and Raf Baeyens},   year = {2024},   note = {R package version 0.2.9, https://github.com/rjdverse/rjdemetra},   url = {https://rjdverse.github.io/rjdemetra/}, }"},{"path":"/index.html","id":"rjdemetra-","dir":"","previous_headings":"","what":"Interface to JDemetra+ Seasonal Adjustment Software","title":"Interface to JDemetra+ Seasonal Adjustment Software","text":"RJDemetra R interface JDemetra+, seasonal adjustment software officially recommended members European Statistical System (ESS) European System Central Banks. JDemetra+ implements two leading seasonal adjustment methods TRAMO/SEATS+ X-12ARIMA/X-13ARIMA-SEATS. Besides seasonal adjustment, JDemetra+ bundles time series models useful production analysis economic statistics, including instance outlier detection, nowcasting, temporal disaggregation benchmarking. details JDemetra+ software see https://github.com/jdemetra/jdemetra-app. RJDemetra offers full access options outputs JDemetra+.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface to JDemetra+ Seasonal Adjustment Software","text":"RJDemetra relies rJava package Java SE version 8 higher required. install developpment version: r-universe: GitHub: troubles installation, check installation manual.","code":"# Install release version from CRAN install.packages(\"RJDemetra\") install.packages(\"RJDemetra\", repos = c(\"https://rjdverse.r-universe.dev\", \"https://cloud.r-project.org\")) # install.packages(\"remotes\") remotes::install_github(\"rjdverse/rjdemetra\")"},{"path":"/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic example","title":"Interface to JDemetra+ Seasonal Adjustment Software","text":"seasonally adjust time series pre-defined specification can either use x13() function X-13ARIMA method tramoseats() function TRAMO-SEATS method.","code":"library(RJDemetra) myseries <- ipi_c_eu[, \"FR\"] x13_model <- x13(myseries) # X-13ARIMA method ts_model <- tramoseats(myseries) # TRAMO-SEATS method  # Basic plot with the original series, the trend and the SA series plot(x13_model, type_chart = \"sa-trend\") # S-I ratio plot(x13_model$decomposition)"},{"path":"/reference/add_sa_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a seasonally adjusted series to a multi-processing — add_sa_item","title":"Add a seasonally adjusted series to a multi-processing — add_sa_item","text":"Function add new seasonally adjusted object (class \"SA\" \"jSA\") workspace object.","code":""},{"path":"/reference/add_sa_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a seasonally adjusted series to a multi-processing — add_sa_item","text":"","code":"add_sa_item(workspace, multiprocessing, sa_obj, name)"},{"path":"/reference/add_sa_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a seasonally adjusted series to a multi-processing — add_sa_item","text":"workspace workspace add seasonally adjusted series . multiprocessing name index multiprocessing add seasonally adjusted series . sa_obj seasonally adjusted object add. name name seasonally adjusted series multiprocessing. default name sa_obj used.","code":""},{"path":[]},{"path":"/reference/add_sa_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a seasonally adjusted series to a multi-processing — add_sa_item","text":"","code":"# \\donttest{ dir <- tempdir() # Adjustment of a series with the x13 and Tramo-Seats methods spec_x13 <- x13_spec(spec = \"RSA5c\", easter.enabled = FALSE) sa_x13 <- x13(ipi_c_eu[, \"FR\"], spec = spec_x13) spec_ts <- tramoseats_spec(spec = \"RSA5\") sa_ts <- jtramoseats(ipi_c_eu[, \"FR\"], spec = spec_ts)  # Creation of a new workspace.. wk <- new_workspace() # and of the multiprocessing \"sa1\" that will contain the series new_multiprocessing(wk, \"sa1\") # Addition of the adjusted series to the workspace via the sa1 multiprocessing add_sa_item(wk, \"sa1\", sa_x13, \"X13\") add_sa_item(wk, \"sa1\", sa_ts, \"TramoSeats\")  # Export of the new filled workspace save_workspace(wk, file.path(dir, \"workspace.xml\")) # }"},{"path":"/reference/compute.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a workspace multi-processing(s) — compute","title":"Compute a workspace multi-processing(s) — compute","text":"Function compute multiprocessings given one workspace. default, workspace contains definitions: computation needed recalculate access adjusted model (get_model).","code":""},{"path":"/reference/compute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a workspace multi-processing(s) — compute","text":"","code":"compute(workspace, i)"},{"path":"/reference/compute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a workspace multi-processing(s) — compute","text":"workspace workspace compute. character numeric indicating name index multiprocessing compute. default, multiprocessings computed.","code":""},{"path":[]},{"path":"/reference/compute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a workspace multi-processing(s) — compute","text":"","code":"# \\donttest{ spec_x13 <- x13_spec(spec = \"RSA5c\", easter.enabled = FALSE) sa_x13 <- x13(ipi_c_eu[, \"FR\"], spec = spec_x13)  wk <- new_workspace() mp <- new_multiprocessing(wk, \"sap1\") add_sa_item(wk, \"sap1\", sa_x13, \"X13\") sa_item1 <- get_object(mp, 1)  get_model(sa_item1, wk) # Returns NULL #> Warning: The result of the object is NULL: have you computed the workspace after importing it? #> See ?compute for more information. #> NULL  compute(wk)  get_model(sa_item1, wk) # Returns the SA model sa_x13 #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.02043      0.107 #> Phi(2)     0.11093      0.077 #> Theta(1)  -0.58663      0.098 #> BTheta(1) -0.69921      0.041 #>  #>              Estimate Std. Error #> Monday         0.6788      0.244 #> Tuesday        0.9500      0.245 #> Wednesday      1.0053      0.246 #> Thursday      -0.0656      0.245 #> Friday         1.0304      0.245 #> Saturday      -1.5721      0.245 #> Leap year      2.1513      0.753 #> TC (4-2020)  -36.1532      2.193 #> AO (3-2020)  -20.2213      2.255 #> AO (5-2011)   13.2210      1.970 #> LS (11-2008) -12.7459      1.663 #>  #>  #> Residual standard error: 2.294 on 343 degrees of freedom #> Log likelihood = -811.8, aic =  1656 aicc =  1657, bic(corrected for length) = 1.907 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.127 #> M(2)    0.076 #> M(3)    1.139 #> M(4)    0.080 #> M(5)    1.072 #> M(6)    0.030 #> M(7)    0.084 #> M(8)    0.244 #> M(9)    0.063 #> M(10)   0.254 #> M(11)   0.239 #> Q       0.319 #> Q-M2    0.349 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t           s           i #> Jan 2020 101.0 102.92412 102.8147  -1.9241199   0.1094395 #> Feb 2020 100.1 103.50547 102.8976  -3.4054722   0.6078825 #> Mar 2020  91.8  83.00218 103.1831   8.7978221 -20.1809275 #> Apr 2020  66.7  65.83747 103.6570   0.8625259 -37.8194996 #> May 2020  73.7  78.73548 104.1282  -5.0354792 -25.3926864 #> Jun 2020  98.2  87.26580 104.5188  10.9342001 -17.2529628 #> Jul 2020  97.4  92.53528 104.7033   4.8647224 -12.1679796 #> Aug 2020  71.7  97.64618 104.5690 -25.9461813  -6.9227978 #> Sep 2020 104.7  97.34380 104.1405   7.3562012  -6.7967236 #> Oct 2020 106.7  98.78451 103.5511   7.9154948  -4.7665946 #> Nov 2020 101.6 100.50933 103.0298   1.0906693  -2.5204281 #> Dec 2020  96.6  99.74645 102.7263  -3.1464483  -2.9798265 #>  #> Forecasts: #>                y_f     sa_f      t_f         s_f         i_f #> Jan 2021  94.82712 101.3420 102.6158  -6.5148928 -1.27380795 #> Feb 2021  98.00197 101.8372 102.5826  -3.8352640 -0.74540432 #> Mar 2021 113.62540 101.9088 102.5235  11.7165747 -0.61463800 #> Apr 2021 103.28588 102.3855 102.3987   0.9004327 -0.01326784 #> May 2021  96.23640 101.5938 102.2898  -5.3574428 -0.69592946 #> Jun 2021 113.04727 101.6902 102.2365  11.3570720 -0.54632230 #> Jul 2021 104.27161 101.8281 102.2910   2.4435091 -0.46291753 #> Aug 2021  79.29357 102.6462 102.4831 -23.3526340  0.16311885 #> Sep 2021 109.23197 102.7863 102.7326   6.4456639  0.05371199 #> Oct 2021 108.79200 102.9386 102.9781   5.8533505 -0.03947210 #> Nov 2021 106.90616 102.9549 103.2017   3.9512094 -0.24675320 #> Dec 2021 100.22813 103.5456 103.3775  -3.3174206  0.16802658 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         2.238 #>  Seasonal     59.768 #>  Irregular     1.203 #>  TD & Hol.     2.436 #>  Others       34.383 #>  Total       100.028 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.059 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           0.985 #>  f-test on sa (seasonal dummies)        0.916 #>  f-test on i (seasonal dummies)         0.812 #>  Residual seasonality (entire series)   0.902 #>  Residual seasonality (last 3 years)    0.966 #>  f-test on sa (td)                      0.983 #>  f-test on i (td)                       0.998 #>  #>  #> Additional output variables # }"},{"path":"/reference/count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of objects inside a workspace or multiprocessing — count","title":"Count the number of objects inside a workspace or multiprocessing — count","text":"Generic functions count number multiprocessing (respectively sa_item) inside workspace (respectively multiprocessing).","code":""},{"path":"/reference/count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of objects inside a workspace or multiprocessing — count","text":"","code":"count(x)"},{"path":"/reference/count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of objects inside a workspace or multiprocessing — count","text":"x workspace multiprocessing.","code":""},{"path":[]},{"path":"/reference/count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of objects inside a workspace or multiprocessing — count","text":"","code":"wk <- new_workspace() mp <- new_multiprocessing(wk, \"sap1\") count(wk) # 1 multiprocessing inside the workspace wk #> [1] 1 count(mp) # 0 sa_item inside the multiprocessing mp #> [1] 0"},{"path":"/reference/get_all_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Java name of all the contained object — get_all_names","title":"Get the Java name of all the contained object — get_all_names","text":"Generic functions retrieve Java name contained multiprocessings contained  sa_items.","code":""},{"path":"/reference/get_all_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Java name of all the contained object — get_all_names","text":"","code":"get_all_names(x)"},{"path":"/reference/get_all_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Java name of all the contained object — get_all_names","text":"x object containing objects whose names want know","code":""},{"path":"/reference/get_all_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Java name of all the contained object — get_all_names","text":"character vector containing names.","code":""},{"path":[]},{"path":"/reference/get_all_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Java name of all the contained object — get_all_names","text":"","code":"# \\donttest{ spec_x13 <- x13_spec(spec = \"RSA5c\", easter.enabled = FALSE) sa_x13 <- x13(ipi_c_eu[, \"FR\"], spec = spec_x13) spec_ts <- tramoseats_spec(spec = \"RSA5\") sa_ts <- tramoseats(ipi_c_eu[, \"FR\"], spec = spec_ts)  wk <- new_workspace() mp <- new_multiprocessing(wk, \"sap1\") mp2 <- new_multiprocessing(wk, \"sap2\")  get_all_names(wk) #> [1] \"sap1\" \"sap2\"  add_sa_item(wk, \"sap1\", sa_x13, \"X13\") add_sa_item(wk, \"sap1\", sa_ts, \"TramoSeats\")  get_all_names(mp) #> [1] \"X13\"        \"TramoSeats\" # }"},{"path":"/reference/get_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the seasonally adjusted model from a workspace — get_model","title":"Get the seasonally adjusted model from a workspace — get_model","text":"Generic functions retrieve seasonally adjusted model(s) workspace, multiprocessing sa_item object. get_model returns \"SA\" object get_jmodel returns Java objects models.","code":""},{"path":"/reference/get_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the seasonally adjusted model from a workspace — get_model","text":"","code":"get_jmodel(   x,   workspace,   userdefined = NULL,   progress_bar = TRUE,   type = c(\"Domain\", \"Estimation\", \"Point\") )  get_model(   x,   workspace,   userdefined = NULL,   progress_bar = TRUE,   type = c(\"Domain\", \"Estimation\", \"Point\") )"},{"path":"/reference/get_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the seasonally adjusted model from a workspace — get_model","text":"x object retrieve seasonally adjusted model. workspace workspace object models stored. x workspace object, parameter used. userdefined vector containing names additional output variables. (see x13 tramoseats). progress_bar Boolean: TRUE, progress bar printed. type character indicating type model retrieve: `\"Domain\"` (initial specification), `\"Estimation\"` (specification used current estimation) \"Point\" (specification corresponding results current estimation: fully identified model).","code":""},{"path":"/reference/get_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the seasonally adjusted model from a workspace — get_model","text":"get_model() returns seasonally adjusted object (class c(\"SA\", \"X13\") c(\"SA\", \"TRAMO_SEATS\") list seasonally adjusted objects: x sa_item object, get_model(x) returns \"SA\" object (jSA object get_jmodel(x)); x multiprocessing object, get_ts(x) returns list length number  sa_items, element containing \"SA\" object (jSA object get_jmodel(x)); x workspace object, get_ts(x) returns list length number multiprocessings,  element containing list \"SA\" object(s) (jSA object's) get_jmodel(x)).","code":""},{"path":[]},{"path":"/reference/get_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the seasonally adjusted model from a workspace — get_model","text":"","code":"# \\donttest{ spec_x13 <- x13_spec(spec = \"RSA5c\", easter.enabled = FALSE) sa_x13 <- x13(ipi_c_eu[, \"FR\"], spec = spec_x13) spec_ts <- tramoseats_spec(spec = \"RSA5\") sa_ts <- tramoseats(ipi_c_eu[, \"FR\"], spec = spec_ts)  wk <- new_workspace() mp <- new_multiprocessing(wk, \"sap1\") add_sa_item(wk, \"sap1\", sa_x13, \"X13\") add_sa_item(wk, \"sap1\", sa_ts, \"TramoSeats\")  compute(wk) # It's important to compute the workspace before retrieving the SA model sa_item1 <- get_object(mp, 1)  get_model(sa_item1, wk) # To extract the model of the sa_item1: its the object sa_x13 #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.02043      0.107 #> Phi(2)     0.11093      0.077 #> Theta(1)  -0.58663      0.098 #> BTheta(1) -0.69921      0.041 #>  #>              Estimate Std. Error #> Monday         0.6788      0.244 #> Tuesday        0.9500      0.245 #> Wednesday      1.0053      0.246 #> Thursday      -0.0656      0.245 #> Friday         1.0304      0.245 #> Saturday      -1.5721      0.245 #> Leap year      2.1513      0.753 #> TC (4-2020)  -36.1532      2.193 #> AO (3-2020)  -20.2213      2.255 #> AO (5-2011)   13.2210      1.970 #> LS (11-2008) -12.7459      1.663 #>  #>  #> Residual standard error: 2.294 on 343 degrees of freedom #> Log likelihood = -811.8, aic =  1656 aicc =  1657, bic(corrected for length) = 1.907 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.127 #> M(2)    0.076 #> M(3)    1.139 #> M(4)    0.080 #> M(5)    1.072 #> M(6)    0.030 #> M(7)    0.084 #> M(8)    0.244 #> M(9)    0.063 #> M(10)   0.254 #> M(11)   0.239 #> Q       0.319 #> Q-M2    0.349 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t           s           i #> Jan 2020 101.0 102.92412 102.8147  -1.9241199   0.1094395 #> Feb 2020 100.1 103.50547 102.8976  -3.4054722   0.6078825 #> Mar 2020  91.8  83.00218 103.1831   8.7978221 -20.1809275 #> Apr 2020  66.7  65.83747 103.6570   0.8625259 -37.8194996 #> May 2020  73.7  78.73548 104.1282  -5.0354792 -25.3926864 #> Jun 2020  98.2  87.26580 104.5188  10.9342001 -17.2529628 #> Jul 2020  97.4  92.53528 104.7033   4.8647224 -12.1679796 #> Aug 2020  71.7  97.64618 104.5690 -25.9461813  -6.9227978 #> Sep 2020 104.7  97.34380 104.1405   7.3562012  -6.7967236 #> Oct 2020 106.7  98.78451 103.5511   7.9154948  -4.7665946 #> Nov 2020 101.6 100.50933 103.0298   1.0906693  -2.5204281 #> Dec 2020  96.6  99.74645 102.7263  -3.1464483  -2.9798265 #>  #> Forecasts: #>                y_f     sa_f      t_f         s_f         i_f #> Jan 2021  94.82712 101.3420 102.6158  -6.5148928 -1.27380795 #> Feb 2021  98.00197 101.8372 102.5826  -3.8352640 -0.74540432 #> Mar 2021 113.62540 101.9088 102.5235  11.7165747 -0.61463800 #> Apr 2021 103.28588 102.3855 102.3987   0.9004327 -0.01326784 #> May 2021  96.23640 101.5938 102.2898  -5.3574428 -0.69592946 #> Jun 2021 113.04727 101.6902 102.2365  11.3570720 -0.54632230 #> Jul 2021 104.27161 101.8281 102.2910   2.4435091 -0.46291753 #> Aug 2021  79.29357 102.6462 102.4831 -23.3526340  0.16311885 #> Sep 2021 109.23197 102.7863 102.7326   6.4456639  0.05371199 #> Oct 2021 108.79200 102.9386 102.9781   5.8533505 -0.03947210 #> Nov 2021 106.90616 102.9549 103.2017   3.9512094 -0.24675320 #> Dec 2021 100.22813 103.5456 103.3775  -3.3174206  0.16802658 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         2.238 #>  Seasonal     59.768 #>  Irregular     1.203 #>  TD & Hol.     2.436 #>  Others       34.383 #>  Total       100.028 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.059 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           0.985 #>  f-test on sa (seasonal dummies)        0.916 #>  f-test on i (seasonal dummies)         0.812 #>  Residual seasonality (entire series)   0.902 #>  Residual seasonality (last 3 years)    0.966 #>  f-test on sa (td)                      0.983 #>  f-test on i (td)                       0.998 #>  #>  #> Additional output variables  # To get all models from the multiprocessing mp: get_model(mp, wk) #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> $X13 #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.02043      0.107 #> Phi(2)     0.11093      0.077 #> Theta(1)  -0.58663      0.098 #> BTheta(1) -0.69921      0.041 #>  #>              Estimate Std. Error #> Monday         0.6788      0.244 #> Tuesday        0.9500      0.245 #> Wednesday      1.0053      0.246 #> Thursday      -0.0656      0.245 #> Friday         1.0304      0.245 #> Saturday      -1.5721      0.245 #> Leap year      2.1513      0.753 #> TC (4-2020)  -36.1532      2.193 #> AO (3-2020)  -20.2213      2.255 #> AO (5-2011)   13.2210      1.970 #> LS (11-2008) -12.7459      1.663 #>  #>  #> Residual standard error: 2.294 on 343 degrees of freedom #> Log likelihood = -811.8, aic =  1656 aicc =  1657, bic(corrected for length) = 1.907 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.127 #> M(2)    0.076 #> M(3)    1.139 #> M(4)    0.080 #> M(5)    1.072 #> M(6)    0.030 #> M(7)    0.084 #> M(8)    0.244 #> M(9)    0.063 #> M(10)   0.254 #> M(11)   0.239 #> Q       0.319 #> Q-M2    0.349 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t           s           i #> Jan 2020 101.0 102.92412 102.8147  -1.9241199   0.1094395 #> Feb 2020 100.1 103.50547 102.8976  -3.4054722   0.6078825 #> Mar 2020  91.8  83.00218 103.1831   8.7978221 -20.1809275 #> Apr 2020  66.7  65.83747 103.6570   0.8625259 -37.8194996 #> May 2020  73.7  78.73548 104.1282  -5.0354792 -25.3926864 #> Jun 2020  98.2  87.26580 104.5188  10.9342001 -17.2529628 #> Jul 2020  97.4  92.53528 104.7033   4.8647224 -12.1679796 #> Aug 2020  71.7  97.64618 104.5690 -25.9461813  -6.9227978 #> Sep 2020 104.7  97.34380 104.1405   7.3562012  -6.7967236 #> Oct 2020 106.7  98.78451 103.5511   7.9154948  -4.7665946 #> Nov 2020 101.6 100.50933 103.0298   1.0906693  -2.5204281 #> Dec 2020  96.6  99.74645 102.7263  -3.1464483  -2.9798265 #>  #> Forecasts: #>                y_f     sa_f      t_f         s_f         i_f #> Jan 2021  94.82712 101.3420 102.6158  -6.5148928 -1.27380795 #> Feb 2021  98.00197 101.8372 102.5826  -3.8352640 -0.74540432 #> Mar 2021 113.62540 101.9088 102.5235  11.7165747 -0.61463800 #> Apr 2021 103.28588 102.3855 102.3987   0.9004327 -0.01326784 #> May 2021  96.23640 101.5938 102.2898  -5.3574428 -0.69592946 #> Jun 2021 113.04727 101.6902 102.2365  11.3570720 -0.54632230 #> Jul 2021 104.27161 101.8281 102.2910   2.4435091 -0.46291753 #> Aug 2021  79.29357 102.6462 102.4831 -23.3526340  0.16311885 #> Sep 2021 109.23197 102.7863 102.7326   6.4456639  0.05371199 #> Oct 2021 108.79200 102.9386 102.9781   5.8533505 -0.03947210 #> Nov 2021 106.90616 102.9549 103.2017   3.9512094 -0.24675320 #> Dec 2021 100.22813 103.5456 103.3775  -3.3174206  0.16802658 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         2.238 #>  Seasonal     59.768 #>  Irregular     1.203 #>  TD & Hol.     2.436 #>  Others       34.383 #>  Total       100.028 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.059 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           0.985 #>  f-test on sa (seasonal dummies)        0.916 #>  f-test on i (seasonal dummies)         0.812 #>  Residual seasonality (entire series)   0.902 #>  Residual seasonality (last 3 years)    0.966 #>  f-test on sa (td)                      0.983 #>  f-test on i (td)                       0.998 #>  #>  #> Additional output variables #>  #> $TramoSeats #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.02572      0.108 #> Phi(2)     0.16988      0.075 #> Theta(1)  -0.53992      0.102 #> BTheta(1) -0.67459      0.042 #>  #>               Estimate Std. Error #> Monday         0.56114      0.231 #> Tuesday        0.89966      0.231 #> Wednesday      1.06703      0.232 #> Thursday       0.02403      0.232 #> Friday         0.86378      0.234 #> Saturday      -1.55222      0.231 #> Leap year      2.19751      0.712 #> Easter [6]    -2.31734      0.461 #> TC (4-2020)  -20.83317      2.183 #> TC (3-2020)  -20.98304      2.183 #> AO (5-2011)   13.28128      1.872 #> LS (11-2008) -12.57486      1.631 #>  #>  #> Residual standard error: 2.221 on 342 degrees of freedom #> Log likelihood = -799.8, aic =  1634 aicc =  1635, bic(corrected for length) = 1.858 #>  #>  #>  #> Decomposition #> Model #> AR :  1 + 0.025720 B + 0.169879 B^2  #> D :  1 - B - B^12 + B^13  #> MA :  1 - 0.539919 B - 0.674594 B^12 + 0.364227 B^13  #>  #>  #> SA #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 1.531766 B + 0.545834 B^2  #> Innovation variance:  0.5502022  #>  #> Trend #> D :  1 - 2.000000 B + B^2  #> MA :  1 + 0.032214 B - 0.967786 B^2  #> Innovation variance:  0.02623268  #>  #> Seasonal #> AR :  1 + 0.025720 B + 0.169879 B^2  #> D :  1 + B + B^2 + B^3 + B^4 + B^5 + B^6 + B^7 + B^8 + B^9 + B^10 + B^11  #> MA :  1 + 1.245052 B + 0.658623 B^2 + 0.593270 B^3 + 0.481574 B^4 + 0.366624 B^5 + 0.304938 B^6 + 0.184553 B^7 + 0.190108 B^8 + 0.095090 B^9 + 0.221559 B^10 + 0.186281 B^11 - 0.207005 B^12 - 0.348481 B^13  #> Innovation variance:  0.1464012  #>  #> Irregular #> Innovation variance:  0.3257068  #>  #>  #>  #> Final #> Last observed values #>              y        sa        t           s           i #> Jan 2020 101.0 102.72726 103.1221  -1.7272634  -0.3948220 #> Feb 2020 100.1 102.95124 103.1797  -2.8512352  -0.2284534 #> Mar 2020  91.8  82.31999 103.3030   9.4800115 -20.9830366 #> Apr 2020  66.7  66.85029 103.5340  -0.1502858 -36.6836970 #> May 2020  73.7  79.46771 103.9124  -5.7677083 -24.4446419 #> Jun 2020  98.2  87.82311 104.2371  10.3768872 -16.4139594 #> Jul 2020  97.4  92.74114 104.3260   4.6588650 -11.5848433 #> Aug 2020  71.7  97.04194 104.1300 -25.3419376  -7.0880934 #> Sep 2020 104.7  97.32774 103.6918   7.3722629  -6.3640867 #> Oct 2020 106.7  98.66536 103.2317   8.0346351  -4.5663227 #> Nov 2020 101.6 100.05441 102.8519   1.5455901  -2.7974884 #> Dec 2020  96.6  99.35191 102.5735  -2.7519144  -3.2215659 #>  #> Forecasts: #>                y_f     sa_f      t_f        s_f         i_f #> Jan 2021  94.55690 101.0346 102.4680  -6.477689 -1.43341231 #> Feb 2021  97.86506 101.4506 102.4540  -3.585540 -1.00338862 #> Mar 2021 113.01303 101.7376 102.4400  11.275402 -0.70237203 #> Apr 2021 103.19842 101.9344 102.4260   1.264068 -0.49166042 #> May 2021  96.00309 102.0679 102.4120  -6.064764 -0.34416230 #> Jun 2021 112.77599 102.1571 102.3980  10.618882 -0.24091361 #> Jul 2021 104.03135 102.2154 102.3840   1.815959 -0.16863953 #> Aug 2021  79.09787 102.2520 102.3700 -23.154116 -0.11804767 #> Sep 2021 109.04546 102.2734 102.3560   6.772048 -0.08263337 #> Oct 2021 108.59337 102.2842 102.3421   6.309157 -0.05784336 #> Nov 2021 106.47776 102.2876 102.3281   4.190193 -0.04049035 #> Dec 2021  99.77303 102.2857 102.3141  -2.512692 -0.02834325 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         1.887 #>  Seasonal     58.928 #>  Irregular     0.509 #>  TD & Hol.     2.598 #>  Others       33.908 #>  Total        97.830 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.064 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           1.000 #>  f-test on sa (seasonal dummies)        1.000 #>  f-test on i (seasonal dummies)         1.000 #>  Residual seasonality (entire series)   1.000 #>  Residual seasonality (last 3 years)    0.968 #>  f-test on sa (td)                      0.984 #>  f-test on i (td)                       1.000 #>  #>  #> Additional output variables #>   # To get all models from the workspace wk: get_model(wk) #> Multiprocessing 1 on 1: #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> $sap1 #> $sap1$X13 #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.02043      0.107 #> Phi(2)     0.11093      0.077 #> Theta(1)  -0.58663      0.098 #> BTheta(1) -0.69921      0.041 #>  #>              Estimate Std. Error #> Monday         0.6788      0.244 #> Tuesday        0.9500      0.245 #> Wednesday      1.0053      0.246 #> Thursday      -0.0656      0.245 #> Friday         1.0304      0.245 #> Saturday      -1.5721      0.245 #> Leap year      2.1513      0.753 #> TC (4-2020)  -36.1532      2.193 #> AO (3-2020)  -20.2213      2.255 #> AO (5-2011)   13.2210      1.970 #> LS (11-2008) -12.7459      1.663 #>  #>  #> Residual standard error: 2.294 on 343 degrees of freedom #> Log likelihood = -811.8, aic =  1656 aicc =  1657, bic(corrected for length) = 1.907 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.127 #> M(2)    0.076 #> M(3)    1.139 #> M(4)    0.080 #> M(5)    1.072 #> M(6)    0.030 #> M(7)    0.084 #> M(8)    0.244 #> M(9)    0.063 #> M(10)   0.254 #> M(11)   0.239 #> Q       0.319 #> Q-M2    0.349 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t           s           i #> Jan 2020 101.0 102.92412 102.8147  -1.9241199   0.1094395 #> Feb 2020 100.1 103.50547 102.8976  -3.4054722   0.6078825 #> Mar 2020  91.8  83.00218 103.1831   8.7978221 -20.1809275 #> Apr 2020  66.7  65.83747 103.6570   0.8625259 -37.8194996 #> May 2020  73.7  78.73548 104.1282  -5.0354792 -25.3926864 #> Jun 2020  98.2  87.26580 104.5188  10.9342001 -17.2529628 #> Jul 2020  97.4  92.53528 104.7033   4.8647224 -12.1679796 #> Aug 2020  71.7  97.64618 104.5690 -25.9461813  -6.9227978 #> Sep 2020 104.7  97.34380 104.1405   7.3562012  -6.7967236 #> Oct 2020 106.7  98.78451 103.5511   7.9154948  -4.7665946 #> Nov 2020 101.6 100.50933 103.0298   1.0906693  -2.5204281 #> Dec 2020  96.6  99.74645 102.7263  -3.1464483  -2.9798265 #>  #> Forecasts: #>                y_f     sa_f      t_f         s_f         i_f #> Jan 2021  94.82712 101.3420 102.6158  -6.5148928 -1.27380795 #> Feb 2021  98.00197 101.8372 102.5826  -3.8352640 -0.74540432 #> Mar 2021 113.62540 101.9088 102.5235  11.7165747 -0.61463800 #> Apr 2021 103.28588 102.3855 102.3987   0.9004327 -0.01326784 #> May 2021  96.23640 101.5938 102.2898  -5.3574428 -0.69592946 #> Jun 2021 113.04727 101.6902 102.2365  11.3570720 -0.54632230 #> Jul 2021 104.27161 101.8281 102.2910   2.4435091 -0.46291753 #> Aug 2021  79.29357 102.6462 102.4831 -23.3526340  0.16311885 #> Sep 2021 109.23197 102.7863 102.7326   6.4456639  0.05371199 #> Oct 2021 108.79200 102.9386 102.9781   5.8533505 -0.03947210 #> Nov 2021 106.90616 102.9549 103.2017   3.9512094 -0.24675320 #> Dec 2021 100.22813 103.5456 103.3775  -3.3174206  0.16802658 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         2.238 #>  Seasonal     59.768 #>  Irregular     1.203 #>  TD & Hol.     2.436 #>  Others       34.383 #>  Total       100.028 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.059 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           0.985 #>  f-test on sa (seasonal dummies)        0.916 #>  f-test on i (seasonal dummies)         0.812 #>  Residual seasonality (entire series)   0.902 #>  Residual seasonality (last 3 years)    0.966 #>  f-test on sa (td)                      0.983 #>  f-test on i (td)                       0.998 #>  #>  #> Additional output variables #>  #> $sap1$TramoSeats #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.02572      0.108 #> Phi(2)     0.16988      0.075 #> Theta(1)  -0.53992      0.102 #> BTheta(1) -0.67459      0.042 #>  #>               Estimate Std. Error #> Monday         0.56114      0.231 #> Tuesday        0.89966      0.231 #> Wednesday      1.06703      0.232 #> Thursday       0.02403      0.232 #> Friday         0.86378      0.234 #> Saturday      -1.55222      0.231 #> Leap year      2.19751      0.712 #> Easter [6]    -2.31734      0.461 #> TC (4-2020)  -20.83317      2.183 #> TC (3-2020)  -20.98304      2.183 #> AO (5-2011)   13.28128      1.872 #> LS (11-2008) -12.57486      1.631 #>  #>  #> Residual standard error: 2.221 on 342 degrees of freedom #> Log likelihood = -799.8, aic =  1634 aicc =  1635, bic(corrected for length) = 1.858 #>  #>  #>  #> Decomposition #> Model #> AR :  1 + 0.025720 B + 0.169879 B^2  #> D :  1 - B - B^12 + B^13  #> MA :  1 - 0.539919 B - 0.674594 B^12 + 0.364227 B^13  #>  #>  #> SA #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 1.531766 B + 0.545834 B^2  #> Innovation variance:  0.5502022  #>  #> Trend #> D :  1 - 2.000000 B + B^2  #> MA :  1 + 0.032214 B - 0.967786 B^2  #> Innovation variance:  0.02623268  #>  #> Seasonal #> AR :  1 + 0.025720 B + 0.169879 B^2  #> D :  1 + B + B^2 + B^3 + B^4 + B^5 + B^6 + B^7 + B^8 + B^9 + B^10 + B^11  #> MA :  1 + 1.245052 B + 0.658623 B^2 + 0.593270 B^3 + 0.481574 B^4 + 0.366624 B^5 + 0.304938 B^6 + 0.184553 B^7 + 0.190108 B^8 + 0.095090 B^9 + 0.221559 B^10 + 0.186281 B^11 - 0.207005 B^12 - 0.348481 B^13  #> Innovation variance:  0.1464012  #>  #> Irregular #> Innovation variance:  0.3257068  #>  #>  #>  #> Final #> Last observed values #>              y        sa        t           s           i #> Jan 2020 101.0 102.72726 103.1221  -1.7272634  -0.3948220 #> Feb 2020 100.1 102.95124 103.1797  -2.8512352  -0.2284534 #> Mar 2020  91.8  82.31999 103.3030   9.4800115 -20.9830366 #> Apr 2020  66.7  66.85029 103.5340  -0.1502858 -36.6836970 #> May 2020  73.7  79.46771 103.9124  -5.7677083 -24.4446419 #> Jun 2020  98.2  87.82311 104.2371  10.3768872 -16.4139594 #> Jul 2020  97.4  92.74114 104.3260   4.6588650 -11.5848433 #> Aug 2020  71.7  97.04194 104.1300 -25.3419376  -7.0880934 #> Sep 2020 104.7  97.32774 103.6918   7.3722629  -6.3640867 #> Oct 2020 106.7  98.66536 103.2317   8.0346351  -4.5663227 #> Nov 2020 101.6 100.05441 102.8519   1.5455901  -2.7974884 #> Dec 2020  96.6  99.35191 102.5735  -2.7519144  -3.2215659 #>  #> Forecasts: #>                y_f     sa_f      t_f        s_f         i_f #> Jan 2021  94.55690 101.0346 102.4680  -6.477689 -1.43341231 #> Feb 2021  97.86506 101.4506 102.4540  -3.585540 -1.00338862 #> Mar 2021 113.01303 101.7376 102.4400  11.275402 -0.70237203 #> Apr 2021 103.19842 101.9344 102.4260   1.264068 -0.49166042 #> May 2021  96.00309 102.0679 102.4120  -6.064764 -0.34416230 #> Jun 2021 112.77599 102.1571 102.3980  10.618882 -0.24091361 #> Jul 2021 104.03135 102.2154 102.3840   1.815959 -0.16863953 #> Aug 2021  79.09787 102.2520 102.3700 -23.154116 -0.11804767 #> Sep 2021 109.04546 102.2734 102.3560   6.772048 -0.08263337 #> Oct 2021 108.59337 102.2842 102.3421   6.309157 -0.05784336 #> Nov 2021 106.47776 102.2876 102.3281   4.190193 -0.04049035 #> Dec 2021  99.77303 102.2857 102.3141  -2.512692 -0.02834325 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         1.887 #>  Seasonal     58.928 #>  Irregular     0.509 #>  TD & Hol.     2.598 #>  Others       33.908 #>  Total        97.830 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.064 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           1.000 #>  f-test on sa (seasonal dummies)        1.000 #>  f-test on i (seasonal dummies)         1.000 #>  Residual seasonality (entire series)   1.000 #>  Residual seasonality (last 3 years)    0.968 #>  f-test on sa (td)                      0.984 #>  f-test on i (td)                       1.000 #>  #>  #> Additional output variables #>  #>  # }"},{"path":"/reference/get_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Java name of a multiprocessing or a sa_item — get_name","title":"Get the Java name of a multiprocessing or a sa_item — get_name","text":"Generic functions retrieve Java name multiprocessing sa_item.","code":""},{"path":"/reference/get_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Java name of a multiprocessing or a sa_item — get_name","text":"","code":"get_name(x)"},{"path":"/reference/get_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Java name of a multiprocessing or a sa_item — get_name","text":"x object retrieve name .","code":""},{"path":"/reference/get_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Java name of a multiprocessing or a sa_item — get_name","text":"character.","code":""},{"path":[]},{"path":"/reference/get_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Java name of a multiprocessing or a sa_item — get_name","text":"","code":"# \\donttest{ spec_x13 <- x13_spec(spec = \"RSA5c\", easter.enabled = FALSE) sa_x13 <- x13(ipi_c_eu[, \"FR\"], spec = spec_x13) spec_ts <- tramoseats_spec(spec = \"RSA5\") sa_ts <- tramoseats(ipi_c_eu[, \"FR\"], spec = spec_ts)  wk <- new_workspace() mp <- new_multiprocessing(wk, \"sap1\") add_sa_item(wk, \"sap1\", sa_x13, \"X13\") add_sa_item(wk, \"sap1\", sa_ts, \"TramoSeats\")  sa_item1 <- get_object(mp, 1) sa_item2 <- get_object(mp, 2)  get_name(sa_item1) # returns \"X13\" #> [1] \"X13\" get_name(sa_item2) # returns \"TramoSeats\" #> [1] \"TramoSeats\"  get_name(mp) # returns \"sap1\" #> [1] \"sap1\"  # To retrieve the name of every sa_item in a given multiprocessing: sapply(get_all_objects(mp), get_name) #>          X13   TramoSeats  #>        \"X13\" \"TramoSeats\"   # To retrieve the name of every multiprocessing in a given workspace: sapply(get_all_objects(wk), get_name) #>   sap1  #> \"sap1\"   # To retrieve the name of every sa_item in a given workspace: lapply(get_all_objects(wk),function(mp){   sapply(get_all_objects(mp), get_name) }) #> $sap1 #>          X13   TramoSeats  #>        \"X13\" \"TramoSeats\"  #>  # }"},{"path":"/reference/get_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Get objects inside a workspace or multiprocessing — get_object","title":"Get objects inside a workspace or multiprocessing — get_object","text":"Generic functions retrieve (get_all_objects()) multiprocessing (respectively sa_item) workspace (respectively multiprocessing) retrieve single one (get_object()) .","code":""},{"path":"/reference/get_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get objects inside a workspace or multiprocessing — get_object","text":"","code":"get_object(x, pos = 1)  get_all_objects(x)"},{"path":"/reference/get_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get objects inside a workspace or multiprocessing — get_object","text":"x object store extracted multiprocessing sa_item. pos index object extract.","code":""},{"path":"/reference/get_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get objects inside a workspace or multiprocessing — get_object","text":"object class multiprocessing sa_item (get_object()) list objects class multiprocessing sa_item (get_all_objects()).","code":""},{"path":[]},{"path":"/reference/get_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get objects inside a workspace or multiprocessing — get_object","text":"","code":"# \\donttest{  sa_x13 <- x13(ipi_c_eu[, \"FR\"], spec = \"RSA5c\")  wk <- new_workspace() mp <- new_multiprocessing(wk, \"sap1\") add_sa_item(wk, \"sap1\", sa_x13, \"X13\")  # A way to retrieve the multiprocessing: mp <- get_object(wk, 1) # And the sa_item object: sa_item <- get_object(mp, 1) # }"},{"path":"/reference/get_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the position of an object — get_position","title":"Get the position of an object — get_position","text":"Generic functions retrieve position contained multiprocessings contained  sa_items.","code":""},{"path":"/reference/get_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the position of an object — get_position","text":"","code":"get_position(x, name)"},{"path":"/reference/get_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the position of an object — get_position","text":"x object containing objects whose names want know name acharacter specifiing object","code":""},{"path":"/reference/get_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the position of an object — get_position","text":"integer","code":""},{"path":[]},{"path":"/reference/get_position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the position of an object — get_position","text":"","code":"# \\donttest{ spec_x13 <- x13_spec(spec = \"RSA5c\", easter.enabled = FALSE) sa_x13 <- x13(ipi_c_eu[, \"FR\"], spec = spec_x13) spec_ts <- tramoseats_spec(spec = \"RSA5\") sa_ts <- tramoseats(ipi_c_eu[, \"FR\"], spec = spec_ts)  wk <- new_workspace() mp <- new_multiprocessing(wk, \"sap1\") mp2 <- new_multiprocessing(wk, \"sap2\")  get_position(wk, \"sap1\") #> [1] 1 get_position(wk, \"sap2\") #> [1] 2  add_sa_item(wk, \"sap1\", sa_x13, \"X13\") add_sa_item(wk, \"sap1\", sa_ts, \"TramoSeats\")  get_position(mp, \"TramoSeats\") #> [1] 2 get_position(mp, \"X13\") #> [1] 1 # }"},{"path":"/reference/get_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the input raw time series — get_ts","title":"Get the input raw time series — get_ts","text":"Generic functions retrieve input raw time series workspace, multiprocessing, sa_item SA object.","code":""},{"path":"/reference/get_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the input raw time series — get_ts","text":"","code":"get_ts(x)"},{"path":"/reference/get_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the input raw time series — get_ts","text":"x object retrieve time series.","code":""},{"path":"/reference/get_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the input raw time series — get_ts","text":"get_ts() returns ts object list ts objects: x sa_item SA object, get_ts(x) returns single ts object; x multiprocessing object, get_ts(x) returns list length number  sa_items, element ts object; x workspace object, get_ts(x) returns list length number multiprocessings,  element list ts objects.","code":""},{"path":[]},{"path":"/reference/get_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the input raw time series — get_ts","text":"","code":"# \\donttest{ sa_x13 <- x13(ipi_c_eu[, \"FR\"], spec = \"RSA5c\")  wk <- new_workspace() mp <- new_multiprocessing(wk, \"sap1\") add_sa_item(wk, \"sap1\", sa_x13, \"X13\") sa_item <- get_object(mp, 1)    # Extracting the raw time series from an adjusted series: get_ts(sa_x13) # Returns the ts object ipi_c_eu[, \"FR\"] #>        Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec #> 1990  92.1  92.3 102.1  93.0  93.3 100.8  92.9  66.7  95.8 105.0  96.7  89.2 #> 1991  92.5  89.2  97.4  93.8  87.5 100.3  93.4  64.3  96.9 103.5  94.0  92.1 #> 1992  90.7  89.0  99.4  93.7  86.1 101.3  90.4  62.9  96.6  98.4  91.9  92.6 #> 1993  82.3  84.0  95.6  88.3  82.2  97.9  85.5  61.3  93.7  93.0  88.3  92.1 #> 1994  83.6  83.7  97.0  88.3  88.3 102.9  87.3  65.9  98.2  98.0  96.8  98.0 #> 1995  91.8  90.1 102.9  90.4  91.6 103.7  90.6  66.8  98.7 101.4  97.2  94.8 #> 1996  92.0  91.1  98.1  94.3  90.5 101.8  96.1  66.3  98.9 105.0  95.0  96.0 #> 1997  91.9  91.3  99.1 102.8  93.2 108.2 100.4  70.5 107.3 114.1  99.6 106.7 #> 1998  98.2  98.7 109.3 103.7  97.6 114.7 106.1  72.1 111.5 112.6 105.6 107.4 #> 1999  97.2  98.3 114.5 104.8  99.9 120.2 105.7  76.1 115.2 115.1 111.1 114.0 #> 2000 103.4 107.5 121.7 105.7 113.1 119.4 108.1  82.0 116.4 121.3 117.2 111.9 #> 2001 110.7 108.9 124.0 109.3 109.8 121.9 112.4  85.5 114.1 123.4 114.2 104.9 #> 2002 108.4 106.7 118.5 113.4 105.6 119.2 113.9  81.4 115.6 121.7 111.0 105.2 #> 2003 106.9 105.4 117.1 112.0 101.5 115.2 111.2  75.7 117.5 122.4 107.8 109.3 #> 2004 104.7 106.7 122.8 112.7 104.5 126.5 111.1  79.7 121.9 118.8 112.2 112.6 #> 2005 107.6 106.3 118.8 113.7 109.7 125.0 106.4  81.7 123.0 115.1 115.5 111.6 #> 2006 108.8 105.9 124.8 108.0 113.1 126.7 108.7  84.1 121.0 121.5 116.6 108.2 #> 2007 111.5 109.6 124.0 111.7 111.7 126.6 116.6  87.1 117.3 127.2 118.0 106.5 #> 2008 113.2 114.4 117.5 120.2 107.6 121.4 115.1  78.8 118.9 118.8  99.5  99.2 #> 2009  90.7  90.1 100.0  93.9  88.3 105.5  97.9  70.3 106.5 104.7  99.0  95.2 #> 2010  90.3  93.1 109.5 100.4  95.5 111.8 100.8  74.5 109.0 105.0 102.7 101.9 #> 2011  99.0 101.6 115.3 101.6 110.1 108.5 101.0  78.3 110.0 106.4 106.3 100.2 #> 2012  99.3  99.9 110.3  99.8  96.1 108.5 103.8  78.8 102.9 107.6 101.9  91.5 #> 2013  96.3  95.7 103.9 103.4  96.2 105.5 105.2  73.4 103.3 109.3  99.0  94.6 #> 2014  96.8  97.1 104.9 102.9  92.4 104.8 103.3  71.5 107.2 107.7  95.5  98.4 #> 2015  94.6  96.1 108.4 102.4  91.0 111.8 101.1  76.1 109.1 107.7 101.8  99.9 #> 2016  95.1  99.6 108.3 103.3  98.6 110.3  95.8  79.7 107.9 103.4 104.7  99.7 #> 2017  98.9  97.1 114.5  98.0 102.7 111.4  99.5  81.4 108.2 113.2 111.0  99.5 #> 2018 101.8  98.6 112.9 103.0  98.7 112.8 106.6  82.6 104.7 116.0 109.6  97.6 #> 2019 103.8 102.0 111.6 107.2 105.2 106.0 109.8  78.8 109.0 116.5 104.0  97.8 #> 2020 101.0 100.1  91.8  66.7  73.7  98.2  97.4  71.7 104.7 106.7 101.6  96.6    # Extracting the raw time series from a sa_item: get_ts(sa_item) # Returns the ts object ipi_c_eu[, \"FR\"] #>        Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec #> 1990  92.1  92.3 102.1  93.0  93.3 100.8  92.9  66.7  95.8 105.0  96.7  89.2 #> 1991  92.5  89.2  97.4  93.8  87.5 100.3  93.4  64.3  96.9 103.5  94.0  92.1 #> 1992  90.7  89.0  99.4  93.7  86.1 101.3  90.4  62.9  96.6  98.4  91.9  92.6 #> 1993  82.3  84.0  95.6  88.3  82.2  97.9  85.5  61.3  93.7  93.0  88.3  92.1 #> 1994  83.6  83.7  97.0  88.3  88.3 102.9  87.3  65.9  98.2  98.0  96.8  98.0 #> 1995  91.8  90.1 102.9  90.4  91.6 103.7  90.6  66.8  98.7 101.4  97.2  94.8 #> 1996  92.0  91.1  98.1  94.3  90.5 101.8  96.1  66.3  98.9 105.0  95.0  96.0 #> 1997  91.9  91.3  99.1 102.8  93.2 108.2 100.4  70.5 107.3 114.1  99.6 106.7 #> 1998  98.2  98.7 109.3 103.7  97.6 114.7 106.1  72.1 111.5 112.6 105.6 107.4 #> 1999  97.2  98.3 114.5 104.8  99.9 120.2 105.7  76.1 115.2 115.1 111.1 114.0 #> 2000 103.4 107.5 121.7 105.7 113.1 119.4 108.1  82.0 116.4 121.3 117.2 111.9 #> 2001 110.7 108.9 124.0 109.3 109.8 121.9 112.4  85.5 114.1 123.4 114.2 104.9 #> 2002 108.4 106.7 118.5 113.4 105.6 119.2 113.9  81.4 115.6 121.7 111.0 105.2 #> 2003 106.9 105.4 117.1 112.0 101.5 115.2 111.2  75.7 117.5 122.4 107.8 109.3 #> 2004 104.7 106.7 122.8 112.7 104.5 126.5 111.1  79.7 121.9 118.8 112.2 112.6 #> 2005 107.6 106.3 118.8 113.7 109.7 125.0 106.4  81.7 123.0 115.1 115.5 111.6 #> 2006 108.8 105.9 124.8 108.0 113.1 126.7 108.7  84.1 121.0 121.5 116.6 108.2 #> 2007 111.5 109.6 124.0 111.7 111.7 126.6 116.6  87.1 117.3 127.2 118.0 106.5 #> 2008 113.2 114.4 117.5 120.2 107.6 121.4 115.1  78.8 118.9 118.8  99.5  99.2 #> 2009  90.7  90.1 100.0  93.9  88.3 105.5  97.9  70.3 106.5 104.7  99.0  95.2 #> 2010  90.3  93.1 109.5 100.4  95.5 111.8 100.8  74.5 109.0 105.0 102.7 101.9 #> 2011  99.0 101.6 115.3 101.6 110.1 108.5 101.0  78.3 110.0 106.4 106.3 100.2 #> 2012  99.3  99.9 110.3  99.8  96.1 108.5 103.8  78.8 102.9 107.6 101.9  91.5 #> 2013  96.3  95.7 103.9 103.4  96.2 105.5 105.2  73.4 103.3 109.3  99.0  94.6 #> 2014  96.8  97.1 104.9 102.9  92.4 104.8 103.3  71.5 107.2 107.7  95.5  98.4 #> 2015  94.6  96.1 108.4 102.4  91.0 111.8 101.1  76.1 109.1 107.7 101.8  99.9 #> 2016  95.1  99.6 108.3 103.3  98.6 110.3  95.8  79.7 107.9 103.4 104.7  99.7 #> 2017  98.9  97.1 114.5  98.0 102.7 111.4  99.5  81.4 108.2 113.2 111.0  99.5 #> 2018 101.8  98.6 112.9 103.0  98.7 112.8 106.6  82.6 104.7 116.0 109.6  97.6 #> 2019 103.8 102.0 111.6 107.2 105.2 106.0 109.8  78.8 109.0 116.5 104.0  97.8 #> 2020 101.0 100.1  91.8  66.7  73.7  98.2  97.4  71.7 104.7 106.7 101.6  96.6    # Extracting all raw time series from a multiprocessing: # Returns a list of length 1 named \"X13\" containing the ts object ipi_c_eu[, \"FR\"]: get_ts(mp) #> $X13 #>        Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec #> 1990  92.1  92.3 102.1  93.0  93.3 100.8  92.9  66.7  95.8 105.0  96.7  89.2 #> 1991  92.5  89.2  97.4  93.8  87.5 100.3  93.4  64.3  96.9 103.5  94.0  92.1 #> 1992  90.7  89.0  99.4  93.7  86.1 101.3  90.4  62.9  96.6  98.4  91.9  92.6 #> 1993  82.3  84.0  95.6  88.3  82.2  97.9  85.5  61.3  93.7  93.0  88.3  92.1 #> 1994  83.6  83.7  97.0  88.3  88.3 102.9  87.3  65.9  98.2  98.0  96.8  98.0 #> 1995  91.8  90.1 102.9  90.4  91.6 103.7  90.6  66.8  98.7 101.4  97.2  94.8 #> 1996  92.0  91.1  98.1  94.3  90.5 101.8  96.1  66.3  98.9 105.0  95.0  96.0 #> 1997  91.9  91.3  99.1 102.8  93.2 108.2 100.4  70.5 107.3 114.1  99.6 106.7 #> 1998  98.2  98.7 109.3 103.7  97.6 114.7 106.1  72.1 111.5 112.6 105.6 107.4 #> 1999  97.2  98.3 114.5 104.8  99.9 120.2 105.7  76.1 115.2 115.1 111.1 114.0 #> 2000 103.4 107.5 121.7 105.7 113.1 119.4 108.1  82.0 116.4 121.3 117.2 111.9 #> 2001 110.7 108.9 124.0 109.3 109.8 121.9 112.4  85.5 114.1 123.4 114.2 104.9 #> 2002 108.4 106.7 118.5 113.4 105.6 119.2 113.9  81.4 115.6 121.7 111.0 105.2 #> 2003 106.9 105.4 117.1 112.0 101.5 115.2 111.2  75.7 117.5 122.4 107.8 109.3 #> 2004 104.7 106.7 122.8 112.7 104.5 126.5 111.1  79.7 121.9 118.8 112.2 112.6 #> 2005 107.6 106.3 118.8 113.7 109.7 125.0 106.4  81.7 123.0 115.1 115.5 111.6 #> 2006 108.8 105.9 124.8 108.0 113.1 126.7 108.7  84.1 121.0 121.5 116.6 108.2 #> 2007 111.5 109.6 124.0 111.7 111.7 126.6 116.6  87.1 117.3 127.2 118.0 106.5 #> 2008 113.2 114.4 117.5 120.2 107.6 121.4 115.1  78.8 118.9 118.8  99.5  99.2 #> 2009  90.7  90.1 100.0  93.9  88.3 105.5  97.9  70.3 106.5 104.7  99.0  95.2 #> 2010  90.3  93.1 109.5 100.4  95.5 111.8 100.8  74.5 109.0 105.0 102.7 101.9 #> 2011  99.0 101.6 115.3 101.6 110.1 108.5 101.0  78.3 110.0 106.4 106.3 100.2 #> 2012  99.3  99.9 110.3  99.8  96.1 108.5 103.8  78.8 102.9 107.6 101.9  91.5 #> 2013  96.3  95.7 103.9 103.4  96.2 105.5 105.2  73.4 103.3 109.3  99.0  94.6 #> 2014  96.8  97.1 104.9 102.9  92.4 104.8 103.3  71.5 107.2 107.7  95.5  98.4 #> 2015  94.6  96.1 108.4 102.4  91.0 111.8 101.1  76.1 109.1 107.7 101.8  99.9 #> 2016  95.1  99.6 108.3 103.3  98.6 110.3  95.8  79.7 107.9 103.4 104.7  99.7 #> 2017  98.9  97.1 114.5  98.0 102.7 111.4  99.5  81.4 108.2 113.2 111.0  99.5 #> 2018 101.8  98.6 112.9 103.0  98.7 112.8 106.6  82.6 104.7 116.0 109.6  97.6 #> 2019 103.8 102.0 111.6 107.2 105.2 106.0 109.8  78.8 109.0 116.5 104.0  97.8 #> 2020 101.0 100.1  91.8  66.7  73.7  98.2  97.4  71.7 104.7 106.7 101.6  96.6 #>      # Extracting all raw time series from a workspace: # Returns a list of length 1 named \"sap1\" containing a list # of length 1 named \"X13\", containing the ts object ipi_c_eu[, \"FR\"] get_ts(wk) #> $sap1 #> $sap1$X13 #>        Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec #> 1990  92.1  92.3 102.1  93.0  93.3 100.8  92.9  66.7  95.8 105.0  96.7  89.2 #> 1991  92.5  89.2  97.4  93.8  87.5 100.3  93.4  64.3  96.9 103.5  94.0  92.1 #> 1992  90.7  89.0  99.4  93.7  86.1 101.3  90.4  62.9  96.6  98.4  91.9  92.6 #> 1993  82.3  84.0  95.6  88.3  82.2  97.9  85.5  61.3  93.7  93.0  88.3  92.1 #> 1994  83.6  83.7  97.0  88.3  88.3 102.9  87.3  65.9  98.2  98.0  96.8  98.0 #> 1995  91.8  90.1 102.9  90.4  91.6 103.7  90.6  66.8  98.7 101.4  97.2  94.8 #> 1996  92.0  91.1  98.1  94.3  90.5 101.8  96.1  66.3  98.9 105.0  95.0  96.0 #> 1997  91.9  91.3  99.1 102.8  93.2 108.2 100.4  70.5 107.3 114.1  99.6 106.7 #> 1998  98.2  98.7 109.3 103.7  97.6 114.7 106.1  72.1 111.5 112.6 105.6 107.4 #> 1999  97.2  98.3 114.5 104.8  99.9 120.2 105.7  76.1 115.2 115.1 111.1 114.0 #> 2000 103.4 107.5 121.7 105.7 113.1 119.4 108.1  82.0 116.4 121.3 117.2 111.9 #> 2001 110.7 108.9 124.0 109.3 109.8 121.9 112.4  85.5 114.1 123.4 114.2 104.9 #> 2002 108.4 106.7 118.5 113.4 105.6 119.2 113.9  81.4 115.6 121.7 111.0 105.2 #> 2003 106.9 105.4 117.1 112.0 101.5 115.2 111.2  75.7 117.5 122.4 107.8 109.3 #> 2004 104.7 106.7 122.8 112.7 104.5 126.5 111.1  79.7 121.9 118.8 112.2 112.6 #> 2005 107.6 106.3 118.8 113.7 109.7 125.0 106.4  81.7 123.0 115.1 115.5 111.6 #> 2006 108.8 105.9 124.8 108.0 113.1 126.7 108.7  84.1 121.0 121.5 116.6 108.2 #> 2007 111.5 109.6 124.0 111.7 111.7 126.6 116.6  87.1 117.3 127.2 118.0 106.5 #> 2008 113.2 114.4 117.5 120.2 107.6 121.4 115.1  78.8 118.9 118.8  99.5  99.2 #> 2009  90.7  90.1 100.0  93.9  88.3 105.5  97.9  70.3 106.5 104.7  99.0  95.2 #> 2010  90.3  93.1 109.5 100.4  95.5 111.8 100.8  74.5 109.0 105.0 102.7 101.9 #> 2011  99.0 101.6 115.3 101.6 110.1 108.5 101.0  78.3 110.0 106.4 106.3 100.2 #> 2012  99.3  99.9 110.3  99.8  96.1 108.5 103.8  78.8 102.9 107.6 101.9  91.5 #> 2013  96.3  95.7 103.9 103.4  96.2 105.5 105.2  73.4 103.3 109.3  99.0  94.6 #> 2014  96.8  97.1 104.9 102.9  92.4 104.8 103.3  71.5 107.2 107.7  95.5  98.4 #> 2015  94.6  96.1 108.4 102.4  91.0 111.8 101.1  76.1 109.1 107.7 101.8  99.9 #> 2016  95.1  99.6 108.3 103.3  98.6 110.3  95.8  79.7 107.9 103.4 104.7  99.7 #> 2017  98.9  97.1 114.5  98.0 102.7 111.4  99.5  81.4 108.2 113.2 111.0  99.5 #> 2018 101.8  98.6 112.9 103.0  98.7 112.8 106.6  82.6 104.7 116.0 109.6  97.6 #> 2019 103.8 102.0 111.6 107.2 105.2 106.0 109.8  78.8 109.0 116.5 104.0  97.8 #> 2020 101.0 100.1  91.8  66.7  73.7  98.2  97.4  71.7 104.7 106.7 101.6  96.6 #>  #>  # }"},{"path":"/reference/ipi_c_eu.html","id":null,"dir":"Reference","previous_headings":"","what":"Industrial Production Indices in manufacturing industry in the European Union — ipi_c_eu","title":"Industrial Production Indices in manufacturing industry in the European Union — ipi_c_eu","text":"dataset containing monthly industrial production indices manufacturing European Union (sts_inpr_m dataset Eurostat). Data based 100 2015 unadjusted, .e. neither seasonally adjusted calendar adjusted.","code":""},{"path":"/reference/ipi_c_eu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Industrial Production Indices in manufacturing industry in the European Union — ipi_c_eu","text":"","code":"ipi_c_eu"},{"path":"/reference/ipi_c_eu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Industrial Production Indices in manufacturing industry in the European Union — ipi_c_eu","text":"monthly ts object January 1990 December 2020 34 variables.","code":""},{"path":"/reference/ipi_c_eu.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Industrial Production Indices in manufacturing industry in the European Union — ipi_c_eu","text":"Eurostat, 'sts_inpr_m' database.","code":""},{"path":"/reference/ipi_c_eu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Industrial Production Indices in manufacturing industry in the European Union — ipi_c_eu","text":"dataset contains 34 time series corresponding following geographical area","code":""},{"path":"/reference/jSA.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions around 'jSA' objects — jSA","title":"Functions around 'jSA' objects — jSA","text":"get_dictionary returns indicators can extracted \"jSA\" objects, get_indicators extracts list indicators jSA2R returns corresponding \"SA\".","code":""},{"path":"/reference/jSA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions around 'jSA' objects — jSA","text":"","code":"get_jspec(x, ...)  get_dictionary(x)  get_indicators(x, ...)  jSA2R(x, userdefined = NULL)"},{"path":"/reference/jSA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions around 'jSA' objects — jSA","text":"x \"jSA\" object. ... characters containing names indicators extract. userdefined userdefined vector containing names additional output variables (see user_defined_variables). used \"SA\" objects.","code":""},{"path":"/reference/jSA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions around 'jSA' objects — jSA","text":"get_dictionary returns vector characters, get_indicators returns list containing indicators extracted, jSA2R returns \"SA\" \"regarima\" object get_jspec returns Java object.","code":""},{"path":"/reference/jSA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions around 'jSA' objects — jSA","text":"\"jSA\" object list three elements: \"result\": Java object containing results seasonal adjustment pre-adjustment method. \"spec\": Java object containing specification seasonal adjustment pre-adjustment method. \"dictionary\": Java object containing dictionary seasonal adjustment pre-adjustment method. particular, contains user-defined regressors. get_dictionary returns list indicators can extracted jSA object function get_indicators. jSA2R returns corresponding formatted seasonally adjusted (\"SA\" object) RegARIMA (\"regarima\" object) model. get_jspec returns Java object contains specification object. object can type \"jSA\", \"X13\", \"TRAMO_SEATS\" \"sa_item\".","code":""},{"path":"/reference/jSA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions around 'jSA' objects — jSA","text":"","code":"myseries <- ipi_c_eu[, \"FR\"] mysa <- jx13(myseries, spec = \"RSA5c\") get_dictionary(mysa) #>   [1] \"y\"                                               #>   [2] \"y_f\"                                             #>   [3] \"t\"                                               #>   [4] \"t_f\"                                             #>   [5] \"sa\"                                              #>   [6] \"sa_f\"                                            #>   [7] \"s\"                                               #>   [8] \"s_f\"                                             #>   [9] \"i\"                                               #>  [10] \"i_f\"                                             #>  [11] \"mode\"                                            #>  [12] \"preprocessing.model.span.start\"                  #>  [13] \"preprocessing.model.span.end\"                    #>  [14] \"preprocessing.model.span.n\"                      #>  [15] \"preprocessing.model.espan.start\"                 #>  [16] \"preprocessing.model.espan.end\"                   #>  [17] \"preprocessing.model.espan.n\"                     #>  [18] \"preprocessing.model.log\"                         #>  [19] \"preprocessing.model.adjust\"                      #>  [20] \"preprocessing.model.y\"                           #>  [21] \"preprocessing.model.y_f\"                         #>  [22] \"preprocessing.model.y_ef\"                        #>  [23] \"preprocessing.model.yc\"                          #>  [24] \"preprocessing.model.yc_f\"                        #>  [25] \"preprocessing.model.yc_ef\"                       #>  [26] \"preprocessing.model.l\"                           #>  [27] \"preprocessing.model.y_lin\"                       #>  [28] \"preprocessing.model.y_lin_f\"                     #>  [29] \"preprocessing.model.ycal\"                        #>  [30] \"preprocessing.model.ycal_f\"                      #>  [31] \"preprocessing.model.det\"                         #>  [32] \"preprocessing.model.det_f\"                       #>  [33] \"preprocessing.model.l_f\"                         #>  [34] \"preprocessing.model.l_b\"                         #>  [35] \"preprocessing.model.cal\"                         #>  [36] \"preprocessing.model.cal_f\"                       #>  [37] \"preprocessing.model.tde\"                         #>  [38] \"preprocessing.model.tde_f\"                       #>  [39] \"preprocessing.model.mhe\"                         #>  [40] \"preprocessing.model.mhe_f\"                       #>  [41] \"preprocessing.model.ee\"                          #>  [42] \"preprocessing.model.ee_f\"                        #>  [43] \"preprocessing.model.omhe\"                        #>  [44] \"preprocessing.model.omhe_f\"                      #>  [45] \"preprocessing.model.out(*)\"                      #>  [46] \"preprocessing.model.out_f\"                       #>  [47] \"preprocessing.model.out_i\"                       #>  [48] \"preprocessing.model.out_i_f\"                     #>  [49] \"preprocessing.model.out_t\"                       #>  [50] \"preprocessing.model.out_t_f\"                     #>  [51] \"preprocessing.model.out_s\"                       #>  [52] \"preprocessing.model.out_s_f\"                     #>  [53] \"preprocessing.model.reg\"                         #>  [54] \"preprocessing.model.reg_f\"                       #>  [55] \"preprocessing.model.reg_t\"                       #>  [56] \"preprocessing.model.reg_t_f\"                     #>  [57] \"preprocessing.model.reg_s\"                       #>  [58] \"preprocessing.model.reg_s_f\"                     #>  [59] \"preprocessing.model.reg_i\"                       #>  [60] \"preprocessing.model.reg_i_f\"                     #>  [61] \"preprocessing.model.reg_sa\"                      #>  [62] \"preprocessing.model.reg_sa_f\"                    #>  [63] \"preprocessing.model.reg_y\"                       #>  [64] \"preprocessing.model.reg_y_f\"                     #>  [65] \"preprocessing.model.reg_u\"                       #>  [66] \"preprocessing.model.reg_u_f\"                     #>  [67] \"preprocessing.model.fullresiduals\"               #>  [68] \"preprocessing.model.lp\"                          #>  [69] \"preprocessing.model.ntd\"                         #>  [70] \"preprocessing.model.nmh\"                         #>  [71] \"preprocessing.model.td(*)\"                       #>  [72] \"preprocessing.model.easter\"                      #>  [73] \"preprocessing.model.nout\"                        #>  [74] \"preprocessing.model.noutao\"                      #>  [75] \"preprocessing.model.noutls\"                      #>  [76] \"preprocessing.model.nouttc\"                      #>  [77] \"preprocessing.model.noutso\"                      #>  [78] \"preprocessing.model.coefficients\"                #>  [79] \"preprocessing.model.description\"                 #>  [80] \"preprocessing.model.covar\"                       #>  [81] \"preprocessing.model.pcovar\"                      #>  [82] \"preprocessing.model.fcasts(?)\"                   #>  [83] \"preprocessing.model.bcasts(?)\"                   #>  [84] \"preprocessing.model.lin_fcasts(?)\"               #>  [85] \"preprocessing.model.lin_bcasts(?)\"               #>  [86] \"preprocessing.model.efcasts(?)\"                  #>  [87] \"preprocessing.arima.parameters\"                  #>  [88] \"preprocessing.arima.p\"                           #>  [89] \"preprocessing.arima.d\"                           #>  [90] \"preprocessing.arima.q\"                           #>  [91] \"preprocessing.arima.bp\"                          #>  [92] \"preprocessing.arima.bd\"                          #>  [93] \"preprocessing.arima.bq\"                          #>  [94] \"preprocessing.likelihood.neffectiveobs\"          #>  [95] \"preprocessing.likelihood.np\"                     #>  [96] \"preprocessing.likelihood.logvalue\"               #>  [97] \"preprocessing.likelihood.adjustedlogvalue\"       #>  [98] \"preprocessing.likelihood.ssqerr\"                 #>  [99] \"preprocessing.likelihood.aic\"                    #> [100] \"preprocessing.likelihood.aicc\"                   #> [101] \"preprocessing.likelihood.bic\"                    #> [102] \"preprocessing.likelihood.bicc\"                   #> [103] \"preprocessing.likelihood.ser\"                    #> [104] \"preprocessing.likelihood.ser-ml\"                 #> [105] \"preprocessing.residuals.res\"                     #> [106] \"preprocessing.residuals.mean\"                    #> [107] \"preprocessing.residuals.skewness\"                #> [108] \"preprocessing.residuals.kurtosis\"                #> [109] \"preprocessing.residuals.dh\"                      #> [110] \"preprocessing.residuals.lb\"                      #> [111] \"preprocessing.residuals.lb2\"                     #> [112] \"preprocessing.residuals.seaslb\"                  #> [113] \"preprocessing.residuals.bp\"                      #> [114] \"preprocessing.residuals.bp2\"                     #> [115] \"preprocessing.residuals.seasbp\"                  #> [116] \"preprocessing.residuals.nruns\"                   #> [117] \"preprocessing.residuals.lruns\"                   #> [118] \"mstats.M(*)\"                                     #> [119] \"mstats.Q\"                                        #> [120] \"mstats.Q-M2\"                                     #> [121] \"decomposition.a1\"                                #> [122] \"decomposition.a1a\"                               #> [123] \"decomposition.a1b\"                               #> [124] \"decomposition.a6\"                                #> [125] \"decomposition.a7\"                                #> [126] \"decomposition.a8\"                                #> [127] \"decomposition.a8t\"                               #> [128] \"decomposition.a8s\"                               #> [129] \"decomposition.a8i\"                               #> [130] \"decomposition.a9\"                                #> [131] \"decomposition.a9sa\"                              #> [132] \"decomposition.a9u\"                               #> [133] \"decomposition.a9ser\"                             #> [134] \"decomposition.b1\"                                #> [135] \"decomposition.b2\"                                #> [136] \"decomposition.b3\"                                #> [137] \"decomposition.b4\"                                #> [138] \"decomposition.b5\"                                #> [139] \"decomposition.b6\"                                #> [140] \"decomposition.b7\"                                #> [141] \"decomposition.b8\"                                #> [142] \"decomposition.b9\"                                #> [143] \"decomposition.b10\"                               #> [144] \"decomposition.b11\"                               #> [145] \"decomposition.b12\"                               #> [146] \"decomposition.b13\"                               #> [147] \"decomposition.b14\"                               #> [148] \"decomposition.b15\"                               #> [149] \"decomposition.b16\"                               #> [150] \"decomposition.b17\"                               #> [151] \"decomposition.b18\"                               #> [152] \"decomposition.b19\"                               #> [153] \"decomposition.b20\"                               #> [154] \"decomposition.c1\"                                #> [155] \"decomposition.c2\"                                #> [156] \"decomposition.c3\"                                #> [157] \"decomposition.c4\"                                #> [158] \"decomposition.c5\"                                #> [159] \"decomposition.c6\"                                #> [160] \"decomposition.c7\"                                #> [161] \"decomposition.c8\"                                #> [162] \"decomposition.c9\"                                #> [163] \"decomposition.c10\"                               #> [164] \"decomposition.c11\"                               #> [165] \"decomposition.c12\"                               #> [166] \"decomposition.c13\"                               #> [167] \"decomposition.c14\"                               #> [168] \"decomposition.c15\"                               #> [169] \"decomposition.c16\"                               #> [170] \"decomposition.c17\"                               #> [171] \"decomposition.c18\"                               #> [172] \"decomposition.c19\"                               #> [173] \"decomposition.c20\"                               #> [174] \"decomposition.d1\"                                #> [175] \"decomposition.d2\"                                #> [176] \"decomposition.d3\"                                #> [177] \"decomposition.d4\"                                #> [178] \"decomposition.d5\"                                #> [179] \"decomposition.d6\"                                #> [180] \"decomposition.d7\"                                #> [181] \"decomposition.d8\"                                #> [182] \"decomposition.d9\"                                #> [183] \"decomposition.d10\"                               #> [184] \"decomposition.d10a\"                              #> [185] \"decomposition.d10b\"                              #> [186] \"decomposition.d11\"                               #> [187] \"decomposition.d11a\"                              #> [188] \"decomposition.d12\"                               #> [189] \"decomposition.d12a\"                              #> [190] \"decomposition.d13\"                               #> [191] \"decomposition.d14\"                               #> [192] \"decomposition.d15\"                               #> [193] \"decomposition.d16\"                               #> [194] \"decomposition.d16a\"                              #> [195] \"decomposition.d16b\"                              #> [196] \"decomposition.d18\"                               #> [197] \"decomposition.d19\"                               #> [198] \"decomposition.d20\"                               #> [199] \"decomposition.e1\"                                #> [200] \"decomposition.e2\"                                #> [201] \"decomposition.e3\"                                #> [202] \"decomposition.e11\"                               #> [203] \"decomposition.y_cmp\"                             #> [204] \"decomposition.t_cmp\"                             #> [205] \"decomposition.i_cmp\"                             #> [206] \"decomposition.s_cmp\"                             #> [207] \"decomposition.sa_cmp\"                            #> [208] \"decomposition.y_cmp_f\"                           #> [209] \"decomposition.t_cmp_f\"                           #> [210] \"decomposition.i_cmp_f\"                           #> [211] \"decomposition.s_cmp_f\"                           #> [212] \"decomposition.sa_cmp_f\"                          #> [213] \"decomposition.d9filter\"                          #> [214] \"decomposition.slen\"                              #> [215] \"decomposition.d12filter\"                         #> [216] \"decomposition.tlen\"                              #> [217] \"diagnostics.qs\"                                  #> [218] \"diagnostics.ftest\"                               #> [219] \"diagnostics.qs.on.i\"                             #> [220] \"diagnostics.ftest.on.i\"                          #> [221] \"diagnostics.combined.all.kruskalwallis\"          #> [222] \"diagnostics.combined.all.stable\"                 #> [223] \"diagnostics.combined.all.evolutive\"              #> [224] \"diagnostics.combined.all.summary\"                #> [225] \"diagnostics.combined.all.stable.ssm\"             #> [226] \"diagnostics.combined.all.stable.ssr\"             #> [227] \"diagnostics.combined.all.stable.ssq\"             #> [228] \"diagnostics.combined.all.evolutive.ssm\"          #> [229] \"diagnostics.combined.all.evolutive.ssr\"          #> [230] \"diagnostics.combined.all.evolutive.ssq\"          #> [231] \"diagnostics.combined.end.kruskalwallis\"          #> [232] \"diagnostics.combined.end.stable\"                 #> [233] \"diagnostics.combined.end.evolutive\"              #> [234] \"diagnostics.combined.end.summary\"                #> [235] \"diagnostics.combined.end.stable.ssm\"             #> [236] \"diagnostics.combined.end.stable.ssr\"             #> [237] \"diagnostics.combined.end.stable.ssq\"             #> [238] \"diagnostics.combined.end.evolutive.ssm\"          #> [239] \"diagnostics.combined.end.evolutive.ssr\"          #> [240] \"diagnostics.combined.end.evolutive.ssq\"          #> [241] \"diagnostics.combined.residual.all.kruskalwallis\" #> [242] \"diagnostics.combined.residual.all.stable\"        #> [243] \"diagnostics.combined.residual.all.evolutive\"     #> [244] \"diagnostics.combined.residual.all.summary\"       #> [245] \"diagnostics.combined.residual.all.stable.ssm\"    #> [246] \"diagnostics.combined.residual.all.stable.ssr\"    #> [247] \"diagnostics.combined.residual.all.stable.ssq\"    #> [248] \"diagnostics.combined.residual.all.evolutive.ssm\" #> [249] \"diagnostics.combined.residual.all.evolutive.ssr\" #> [250] \"diagnostics.combined.residual.all.evolutive.ssq\" #> [251] \"diagnostics.combined.residual.end.kruskalwallis\" #> [252] \"diagnostics.combined.residual.end.stable\"        #> [253] \"diagnostics.combined.residual.end.evolutive\"     #> [254] \"diagnostics.combined.residual.end.summary\"       #> [255] \"diagnostics.combined.residual.end.stable.ssm\"    #> [256] \"diagnostics.combined.residual.end.stable.ssr\"    #> [257] \"diagnostics.combined.residual.end.stable.ssq\"    #> [258] \"diagnostics.combined.residual.end.evolutive.ssm\" #> [259] \"diagnostics.combined.residual.end.evolutive.ssr\" #> [260] \"diagnostics.combined.residual.end.evolutive.ssq\" #> [261] \"diagnostics.residual.all\"                        #> [262] \"diagnostics.residual.end\"                        #> [263] \"diagnostics.residualtd\"                          #> [264] \"diagnostics.residualtd.on.i\"                     #> [265] \"diagnostics.variancedecomposition\"               #> [266] \"diagnostics.logstat\"                             #> [267] \"diagnostics.levelstat\"                           #> [268] \"diagnostics.fcast-insample-mean\"                 #> [269] \"diagnostics.fcast-outsample-mean\"                #> [270] \"diagnostics.fcast-outsample-variance\"            #> [271] \"diagnostics.seas-lin-f\"                          #> [272] \"diagnostics.seas-lin-qs\"                         #> [273] \"diagnostics.seas-lin-kw\"                         #> [274] \"diagnostics.seas-lin-friedman\"                   #> [275] \"diagnostics.seas-lin-periodogram\"                #> [276] \"diagnostics.seas-lin-spectralpeaks\"              #> [277] \"diagnostics.seas-si-combined\"                    #> [278] \"diagnostics.seas-si-evolutive\"                   #> [279] \"diagnostics.seas-si-stable\"                      #> [280] \"diagnostics.seas-res-f\"                          #> [281] \"diagnostics.seas-res-qs\"                         #> [282] \"diagnostics.seas-res-kw\"                         #> [283] \"diagnostics.seas-res-friedman\"                   #> [284] \"diagnostics.seas-res-periodogram\"                #> [285] \"diagnostics.seas-res-spectralpeaks\"              #> [286] \"diagnostics.seas-res-combined\"                   #> [287] \"diagnostics.seas-res-combined3\"                  #> [288] \"diagnostics.seas-res-evolutive\"                  #> [289] \"diagnostics.seas-res-stable\"                     #> [290] \"diagnostics.seas-i-f\"                            #> [291] \"diagnostics.seas-i-qs\"                           #> [292] \"diagnostics.seas-i-kw\"                           #> [293] \"diagnostics.seas-i-periodogram\"                  #> [294] \"diagnostics.seas-i-spectralpeaks\"                #> [295] \"diagnostics.seas-i-combined\"                     #> [296] \"diagnostics.seas-i-combined3\"                    #> [297] \"diagnostics.seas-i-evolutive\"                    #> [298] \"diagnostics.seas-i-stable\"                       #> [299] \"diagnostics.seas-sa-f\"                           #> [300] \"diagnostics.seas-sa-qs\"                          #> [301] \"diagnostics.seas-sa-kw\"                          #> [302] \"diagnostics.seas-sa-friedman\"                    #> [303] \"diagnostics.seas-sa-periodogram\"                 #> [304] \"diagnostics.seas-sa-spectralpeaks\"               #> [305] \"diagnostics.seas-sa-combined\"                    #> [306] \"diagnostics.seas-sa-combined3\"                   #> [307] \"diagnostics.seas-sa-evolutive\"                   #> [308] \"diagnostics.seas-sa-stable\"                      #> [309] \"diagnostics.seas-sa-ac1\"                         #> [310] \"diagnostics.td-sa-all\"                           #> [311] \"diagnostics.td-sa-last\"                          #> [312] \"diagnostics.td-i-all\"                            #> [313] \"diagnostics.td-i-last\"                           #> [314] \"diagnostics.td-res-all\"                          #> [315] \"diagnostics.td-res-last\"                         #> [316] \"diagnostics.ic-ratio-henderson\"                  #> [317] \"diagnostics.ic-ratio\"                            #> [318] \"diagnostics.msr-global\"                          #> [319] \"diagnostics.msr(*)\"                              #> [320] \"coherence.annualtotals.value\"                    #> [321] \"coherence.annualtotals\"                          #> [322] \"coherence.definition.value\"                      #> [323] \"coherence.definition\"                            #> [324] \"residuals.normality.value\"                       #> [325] \"residuals.normality\"                             #> [326] \"residuals.independence.value\"                    #> [327] \"residuals.independence\"                          #> [328] \"residuals.tdpeaks.value\"                         #> [329] \"residuals.tdpeaks\"                               #> [330] \"residuals.seaspeaks.value\"                       #> [331] \"residuals.seaspeaks\"                             #> [332] \"benchmarking.original\"                           #> [333] \"benchmarking.target\"                             #> [334] \"benchmarking.result\"                              get_indicators(mysa, \"decomposition.b2\", \"decomposition.d10\") #> $decomposition.b2 #>            Jan       Feb       Mar       Apr       May       Jun       Jul #> 1990                                                              80.81217 #> 1991  79.80106  79.70994  79.67580  79.59134  79.50538  79.47901  79.42114 #> 1992  79.12460  79.05572  78.94483  78.69321  78.52768  78.38786  78.14774 #> 1993  75.90577  75.64151  75.38622  75.15483  74.74513  74.45864  74.50543 #> 1994  75.78817  76.01356  76.27707  76.69293  77.25007  77.93911  78.53318 #> 1995  80.46376  80.67467  80.82205  80.94985  81.04038  81.03817  80.87189 #> 1996  80.71720  80.80987  80.93185  81.01703  81.04874  80.99240  80.97044 #> 1997  82.96634  83.42150  83.91180  84.52530  85.21059  85.84273  86.53911 #> 1998  89.39197  89.70959  89.94590  90.14744  90.35497  90.56634  90.65483 #> 1999  91.68494  91.84151  92.09455  92.46733  92.76597  93.15447  93.70126 #> 2000  96.43072  96.77119  97.04041  97.33407  97.77341  98.14357  98.32554 #> 2001  99.49568  99.71697  99.88142  99.86773  99.71457  99.31793  98.96634 #> 2002  98.11773  97.99744  97.90913  97.83300  97.71788  97.56235  97.40864 #> 2003  96.26634  96.01733  95.82430  95.81697  95.82725  95.85939  95.92661 #> 2004  97.40987  97.59240  97.86924  98.10607  98.12473  98.26210  98.63489 #> 2005  98.82567  98.67189  98.68540  98.59709  98.57507  98.75994  98.77485 #> 2006  99.24709  99.47884  99.58455  99.73318  99.97788  99.99650  99.92606 #> 2007 100.78735 101.13780 101.22309 101.30106 101.48123 101.48876 101.52467 #> 2008 101.17953 100.86024 100.56640 100.09960  99.70514  99.63583  99.32425 #> 2009  95.49335  95.48172  95.65128  95.68191  95.61647  95.36118  95.27884 #> 2010  98.03811  98.34052  98.55189  98.78301  98.91497  99.23265  99.88777 #> 2011 101.50396 101.62936 101.71370 101.83372 102.03670 102.20491 102.15315 #> 2012 101.29141 101.36111 101.28960 101.00371 100.68692 100.27556  99.78270 #> 2013  99.09590  98.91728  98.72897  98.74868  98.78772  98.76135  98.80765 #> 2014  98.58201  98.52467  98.57331  98.55348  98.45543  98.46257  98.51728 #> 2015  98.87015  98.98360  99.24907  99.41728  99.69981  99.95701 100.14134 #> 2016 100.65091 100.54538 100.46192 100.36723 100.26883 100.35471 100.52474 #> 2017 101.28777 101.54868 101.72105 102.10719 102.71022 103.07884 103.15007 #> 2018 103.75302 103.99515 104.01376 103.97923 103.92191 103.80443 103.84451 #> 2019 104.62090 104.58395 104.62481 104.75701 104.63355 104.37385 104.16181 #> 2020 103.61043 103.77713 103.86739 103.67700 103.59975 103.58422 103.49902 #> 2021 102.87236 102.61649 102.44318 102.40254 102.35877 102.37415           #>            Aug       Sep       Oct       Nov       Dec #> 1990  80.72092  80.57481  80.37761  79.95447  79.80642 #> 1991  79.31258  79.17659  79.18260  79.42274  79.39140 #> 1992  77.80223  77.33856  76.83957  76.47209  76.16257 #> 1993  74.56176  74.62884  74.77621  74.99568  75.39038 #> 1994  79.03902  79.55030  79.99809  80.21773  80.27290 #> 1995  80.70906  80.64774  80.59556  80.52877  80.60726 #> 1996  81.08645  81.34207  81.73254  82.18911  82.58830 #> 1997  87.21901  87.75070  88.14540  88.57983  88.99930 #> 1998  90.67625  90.75523  90.90207  91.06376  91.38340 #> 1999  94.23108  94.80794  95.34893  95.89637  96.22958 #> 2000  98.59103  98.98077  99.24663  99.19134  99.24705 #> 2001  98.80008  98.65814  98.56511  98.34614  98.17309 #> 2002  97.29076  97.09378  96.97175  96.93077  96.61330 #> 2003  95.98611  96.04220  96.12541  96.41405  96.96983 #> 2004  98.84553  98.79465  98.75869  98.88318  98.96955 #> 2005  98.70568  98.83866  98.96561  98.96356  99.06040 #> 2006 100.07171 100.30161 100.44247 100.47050 100.49705 #> 2007 101.68903 101.68403 101.72731 101.78487 101.53185 #> 2008  98.65558  97.88575  97.03870  96.39804  95.94243 #> 2009  95.46692  95.86673  96.41774  97.00860  97.56574 #> 2010 100.61910 101.23618 101.61689 101.67808 101.51868 #> 2011 101.85923 101.55484 101.40598 101.23693 101.18941 #> 2012  99.51601  99.38632  99.23495  99.17431  99.16793 #> 2013  98.88560  98.90112  98.91659  98.92561  98.75814 #> 2014  98.49302  98.49469  98.55189  98.58717  98.78581 #> 2015 100.27470 100.30268 100.30939 100.54974 100.73075 #> 2016 100.60414 100.77100 100.92295 100.96673 101.06774 #> 2017 103.21238 103.41643 103.57812 103.45284 103.43355 #> 2018 104.09076 104.15886 104.24499 104.67431 104.77626 #> 2019 103.94075 103.79517 103.56296 103.28758 103.40020 #> 2020 103.45236 103.39365 103.38137 103.32283 103.11388 #> 2021                                                   #>  #> $decomposition.d10 #>               Jan          Feb          Mar          Apr          May #> 1990  -3.23112424  -2.45358625   6.92606765   0.46855094  -2.53648128 #> 1991  -3.18607624  -2.56877244   6.76211515   0.48073025  -2.43731681 #> 1992  -2.96230026  -2.81860766   6.50479190   0.50513443  -2.44011384 #> 1993  -2.87063337  -3.12899915   6.34172006   0.56849659  -2.62588295 #> 1994  -2.90970212  -3.39113948   6.26254717   0.65764640  -2.95333714 #> 1995  -3.15354010  -3.54121591   6.35424853   0.70143710  -3.24373983 #> 1996  -3.34181747  -3.66292833   6.55920597   0.65038775  -3.44649460 #> 1997  -3.50678240  -3.81445820   6.94945266   0.53539013  -3.53576744 #> 1998  -3.71883351  -3.93407836   7.54825524   0.34440535  -3.56603122 #> 1999  -3.81010166  -3.95497735   8.28627204   0.04759366  -3.63050145 #> 2000  -3.88282400  -3.88906935   9.10645871  -0.06727057  -3.93623910 #> 2001  -3.92507755  -3.71650232   9.76574512   0.03272906  -4.33189628 #> 2002  -3.91951955  -3.57720406  10.07055976   0.37495154  -4.52547101 #> 2003  -3.72159176  -3.59697554  10.01360691   0.67061526  -4.32561681 #> 2004  -3.48856885  -3.74155605   9.77497323   0.85922176  -3.99056174 #> 2005  -3.27607861  -3.85475066   9.45486880   0.92599515  -3.67421933 #> 2006  -3.14050695  -3.85113453   9.04096804   0.82717345  -3.46594093 #> 2007  -3.15341374  -3.77606532   8.71892996   0.69347864  -3.37908023 #> 2008  -3.18834807  -3.45086967   8.53759913   0.58766908  -3.60423841 #> 2009  -3.17511237  -3.12766081   8.45445778   0.67161637  -4.00750317 #> 2010  -3.04966470  -2.83589556   8.44708199   0.72158415  -4.36870140 #> 2011  -3.01837774  -2.68878555   8.59020442   0.94404638  -4.67678706 #> 2012  -3.09085753  -2.43933782   8.84694402   1.14722039  -5.06210593 #> 2013  -3.19643380  -2.33715168   8.87124254   1.51571104  -5.24700795 #> 2014  -3.27646548  -2.43517696   8.81815223   1.61051043  -4.98222683 #> 2015  -3.41496340  -2.76490101   8.65728424   1.50230186  -4.39258367 #> 2016  -3.45672829  -3.11078319   8.57238852   1.13155806  -3.77217598 #> 2017  -3.50989539  -3.44301963   8.47163668   0.57271598  -3.21746805 #> 2018  -3.59158685  -3.61964964   8.56018364   0.04440789  -2.80790959 #> 2019  -3.80462770  -3.59111017   8.63642758  -0.32962167  -2.63209004 #> 2020  -3.95684375  -3.44658475   8.71390004  -0.40887694  -2.64743506 #>               Jun          Jul          Aug          Sep          Oct #> 1990   8.58652688  -0.93318080 -26.88627300   5.84425980   9.51277718 #> 1991   8.78444653  -0.96321830 -26.88978248   5.80580137   9.40295915 #> 1992   9.10177488  -0.95685315 -26.87859177   5.74926791   9.19709183 #> 1993   9.58461516  -0.89739294 -26.95134964   5.71343361   9.01884480 #> 1994  10.02989689  -0.72683798 -26.99605412   5.74298632   8.94861147 #> 1995  10.43634302  -0.46190103 -27.25086279   5.82222095   9.03999618 #> 1996  10.73543827  -0.16813261 -27.64165508   5.99403027   9.25566980 #> 1997  10.99323923   0.05291816 -28.13124082   6.10042512   9.50919029 #> 1998  11.09694914   0.22726160 -28.50144380   6.16198789   9.73674073 #> 1999  11.18144533   0.42391323 -28.81976252   6.21380367   9.84430721 #> 2000  11.21797537   0.62328083 -29.09341341   6.38240916   9.99685294 #> 2001  11.36879282   0.74289141 -29.40394895   6.71124769  10.09258545 #> 2002  11.60278864   0.60684880 -29.67420830   7.16980029  10.07521124 #> 2003  11.96015452   0.30360152 -30.00881683   7.69771451   9.86011980 #> 2004  12.31852464   0.09391455 -30.31807523   8.02628768   9.67637687 #> 2005  12.52327924   0.09885612 -30.51238953   8.15681336   9.36344639 #> 2006  12.33958047   0.31153876 -30.20478335   8.06899292   9.05477057 #> 2007  11.88124011   0.60529198 -29.43838637   7.90025983   8.63244476 #> 2008  11.15557250   1.06197675 -28.40162182   7.62353784   8.35573587 #> 2009  10.38873789   1.56844873 -27.26111264   7.44010250   7.86078958 #> 2010   9.78187334   2.00841221 -26.20880904   7.27532429   7.50998794 #> 2011   9.33578933   2.39261457 -25.31053420   7.15696114   7.18826481 #> 2012   9.13588277   2.72058362 -24.63099553   6.91117326   7.20147554 #> 2013   8.96813476   2.91687978 -24.08100452   6.71982618   7.09666821 #> 2014   8.87528633   2.72180065 -23.74022571   6.47653745   7.31380776 #> 2015   8.80293789   2.44110955 -23.51700294   6.18755382   7.53213155 #> 2016   8.83655120   2.15132750 -23.48623552   5.88676109   8.01056701 #> 2017   8.93946680   2.18514995 -23.34438622   5.62725179   8.32254026 #> 2018   9.09029550   2.32669134 -23.23570602   5.45119622   8.74335446 #> 2019   9.27156738   2.67473456 -23.03712953   5.35076837   8.94170126 #> 2020   9.41303027   2.92492541 -22.88952482   5.40065806   9.07499614 #>               Nov          Dec #> 1990   3.27525681   1.47198330 #> 1991   3.15895332   1.71980899 #> 1992   3.01106153   2.16973476 #> 1993   2.82218126   2.63980962 #> 1994   2.55444586   2.96552928 #> 1995   2.35284825   3.01697689 #> 1996   2.19656043   2.85046082 #> 1997   2.27065604   2.51098356 #> 1998   2.35882014   1.97624777 #> 1999   2.50690433   1.30097501 #> 2000   2.51666198   0.48630618 #> 2001   2.42153335  -0.29313541 #> 2002   2.20230841  -0.88637417 #> 2003   2.06488215  -1.20658494 #> 2004   2.01191290  -1.37471507 #> 2005   2.18210642  -1.31799891 #> 2006   2.56173475  -1.37520844 #> 2007   2.91907983  -1.56835084 #> 2008   3.09774192  -1.88197812 #> 2009   3.05421329  -2.12864166 #> 2010   2.79143000  -2.39700685 #> 2011   2.35016391  -2.67559624 #> 2012   1.89569400  -2.89923014 #> 2013   1.64129678  -2.89157726 #> 2014   1.74059501  -2.80060355 #> 2015   2.05495041  -2.75281805 #> 2016   2.44475876  -2.84265268 #> 2017   2.74794776  -3.25879500 #> 2018   2.87928835  -3.86713780 #> 2019   2.82444428  -4.53979302 #> 2020   2.63661191  -5.03889824 #>   # To convert the Java object to an R object jSA2R(mysa) #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>             Estimate Std. Error #> Phi(1)     0.0003269      0.108 #> Phi(2)     0.1688192      0.074 #> Theta(1)  -0.5485606      0.102 #> BTheta(1) -0.6660849      0.042 #>  #>               Estimate Std. Error #> Monday         0.55932      0.228 #> Tuesday        0.88221      0.228 #> Wednesday      1.03996      0.229 #> Thursday       0.04943      0.229 #> Friday         0.91132      0.230 #> Saturday      -1.57769      0.228 #> Leap year      2.15403      0.705 #> Easter [1]    -2.37950      0.454 #> TC (4-2020)  -35.59245      2.173 #> AO (3-2020)  -20.89026      2.180 #> AO (5-2011)   13.49850      1.857 #> LS (11-2008) -12.54901      1.636 #>  #>  #> Residual standard error: 2.218 on 342 degrees of freedom #> Log likelihood = -799.1, aic =  1632 aicc =  1634, bic(corrected for length) = 1.855 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.163 #> M(2)    0.089 #> M(3)    1.181 #> M(4)    0.558 #> M(5)    1.020 #> M(6)    0.090 #> M(7)    0.083 #> M(8)    0.244 #> M(9)    0.062 #> M(10)   0.272 #> M(11)   0.256 #> Q       0.368 #> Q-M2    0.402 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t            s             i #> Jan 2020 101.0 102.95613 102.9586  -1.95613209  -0.002494203 #> Feb 2020 100.1 103.50876 102.9592  -3.40875640   0.549602816 #> Mar 2020  91.8  82.87617 103.1664   8.92382800 -20.290271773 #> Apr 2020  66.7  66.65243 103.5971   0.04756625 -36.944710027 #> May 2020  73.7  78.87836 104.0393  -5.17835604 -25.160905985 #> Jun 2020  98.2  87.34544 104.3804  10.85456021 -17.034985133 #> Jul 2020  97.4  92.47436 104.5319   4.92563707 -12.057551871 #> Aug 2020  71.7  97.47245 104.3751 -25.77244698  -6.902636199 #> Sep 2020 104.7  97.37717 103.9182   7.32282919  -6.541070626 #> Oct 2020 106.7  98.24194 103.3047   8.45805540  -5.062719500 #> Nov 2020 101.6 100.26862 102.7746   1.33138152  -2.506014899 #> Dec 2020  96.6  99.66730 102.5133  -3.06729670  -2.845961796 #>  #> Forecasts: #>                y_f     sa_f      t_f          s_f        i_f #> Jan 2021  94.53021 101.0902 102.4794  -6.56002888 -1.3891608 #> Feb 2021  97.90024 101.7395 102.5246  -3.83928384 -0.7850772 #> Mar 2021 114.09983 102.3065 102.5087  11.79328397 -0.2021598 #> Apr 2021 102.16781 102.2220 102.3759  -0.05422341 -0.1538967 #> May 2021  96.01612 101.5450 102.2100  -5.52888123 -0.6650098 #> Jun 2021 112.76658 101.3438 102.0725  11.42275939 -0.7286526 #> Jul 2021 104.13805 101.6681 102.0297   2.46989932 -0.3615193 #> Aug 2021  79.13003 102.3617 102.1360 -23.23171595  0.2257112 #> Sep 2021 109.06438 102.4772 102.3249   6.58713572  0.1523168 #> Oct 2021 108.64207 102.1329 102.5185   6.50921416 -0.3856588 #> Nov 2021 106.46022 102.5908 102.6996   3.86943752 -0.1088338 #> Dec 2021  99.79901 103.0831 102.8580  -3.28410831  0.2251086 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         2.251 #>  Seasonal     59.750 #>  Irregular     1.067 #>  TD & Hol.     2.610 #>  Others       33.718 #>  Total        99.395 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.034 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          0.985 #>  qs test on i                           0.865 #>  f-test on sa (seasonal dummies)        0.958 #>  f-test on i (seasonal dummies)         0.893 #>  Residual seasonality (entire series)   0.876 #>  Residual seasonality (last 3 years)    0.906 #>  f-test on sa (td)                      0.987 #>  f-test on i (td)                       0.993 #>  #>  #> Additional output variables"},{"path":"/reference/load_workspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a 'JDemetra+' workspace — load_workspace","title":"Load a 'JDemetra+' workspace — load_workspace","text":"Function load 'JDemetra+' workspace.","code":""},{"path":"/reference/load_workspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a 'JDemetra+' workspace — load_workspace","text":"","code":"load_workspace(file)"},{"path":"/reference/load_workspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a 'JDemetra+' workspace — load_workspace","text":"file path 'JDemetra+' workspace load. default dialog box opens.","code":""},{"path":"/reference/load_workspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a 'JDemetra+' workspace — load_workspace","text":"object class \"workspace\".","code":""},{"path":[]},{"path":"/reference/new_workspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a workspace or a multi-processing — new_workspace","title":"Create a workspace or a multi-processing — new_workspace","text":"Functions create 'JDemetra+' workspace (new_workspace()) add new multi-processing (new_multiprocessing()).","code":""},{"path":"/reference/new_workspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a workspace or a multi-processing — new_workspace","text":"","code":"new_workspace()  new_multiprocessing(workspace, name)"},{"path":"/reference/new_workspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a workspace or a multi-processing — new_workspace","text":"workspace workspace object name character name new multiprocessing","code":""},{"path":"/reference/new_workspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a workspace or a multi-processing — new_workspace","text":"new_workspace() returns object class workspace new_multiprocessing() returns object class multiprocessing.","code":""},{"path":[]},{"path":"/reference/new_workspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a workspace or a multi-processing — new_workspace","text":"","code":"# To create and export an empty 'JDemetra+' workspace wk <- new_workspace() mp <- new_multiprocessing(wk, \"sa1\")"},{"path":"/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting regarima, decomposition or final results of a SA — plot","title":"Plotting regarima, decomposition or final results of a SA — plot","text":"Plotting methods S3 class objects around seasonal adjustment: \"regarima\" RegARIMA,\"decomposition_X11\" \"decomposition_SEATS\" decomposition X13 TRAMO-SEATS, \"final\" final SA results \"SA\" entire seasonal adjustment object. function plot.SA just calls function plot.final.","code":""},{"path":"/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting regarima, decomposition or final results of a SA — plot","text":"","code":"# S3 method for class 'regarima' plot(   x,   which = 1:6,   caption = list(\"Residuals\", \"Histogram of residuals\", \"Normal Q-Q\", \"ACF of residuals\",     \"PACF of residuals\", \"Decomposition\", list(\"Y linearised\", \"Calendar effects\",     \"Outliers effects\"))[sort(which)],   ask = prod(par(\"mfcol\")) < length(which) && dev.interactive(),   ... )  # S3 method for class 'decomposition_X11' plot(x, first_date, last_date, caption = \"S-I ratio\", ylim, ...)  # S3 method for class 'decomposition_SEATS' plot(x, first_date, last_date, caption = \"S-I ratio\", ylim, ...)  # S3 method for class 'final' plot(   x,   first_date,   last_date,   forecast = TRUE,   type_chart = c(\"sa-trend\", \"cal-seas-irr\"),   caption = c(`sa-trend` = \"Y, Sa, trend\", `cal-seas-irr` =     \"Cal., sea., irr.\")[type_chart],   ask = length(type_chart) > 1 && dev.interactive(),   ylim,   ... )  # S3 method for class 'SA' plot(x, ...)"},{"path":"/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting regarima, decomposition or final results of a SA — plot","text":"x object plot numeric vector specifying graphs plotted: (1) \"Residuals\", (2) \"Histogram residuals\", (3) \"Normal Q-Q\", (4) \"ACF residuals\", (5) \"PACF residuals\", (6) \"Decomposition\", (7) \"Decomposition - zoom\" caption string containing graph title ask Boolean. TRUE, user prompted new graphical page started. ... parameters first_date plot starting date. missing, plot starts beginning time-series. last_date end date plot. missing, plot ends end time-series (eventually, including forecast). ylim y limits plot. forecast Boolean indicating forecasts included plot. TRUE, forecast plotted. type_chart string indicating type chart plot","code":""},{"path":"/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting regarima, decomposition or final results of a SA — plot","text":"","code":"# \\donttest{ myseries <- ipi_c_eu[, \"FR\"] mysa <- x13(myseries, spec = c(\"RSA5c\"))   # RegArima plot(mysa$regarima) # 6 graphics are plotted by default       # To plot only one graphic (here, the residuals) and change the title: plot(mysa$regarima, which = 1, caption = \"Plot of residuals\")  plot(mysa$regarima, which = 7)     # Decomposition plot(mysa$decomposition) # To plot the S-I ratio  plot(mysa$decomposition, first_date = c(2010, 1)) # To start the plot in January 2010     # Final plot(mysa$final) # 2 graphics are plotted by default   # To only plot one graphic (here the raw data, the seasonally adjusted data and the trend), # To change the last date and the title plot(mysa$final, last_date = c(2000, 1),      caption = \"Results\", type_chart = \"sa-trend\")  # }"},{"path":"/reference/regarima.html","id":null,"dir":"Reference","previous_headings":"","what":"RegARIMA model, pre-adjustment in X13 and TRAMO-SEATS — regarima","title":"RegARIMA model, pre-adjustment in X13 and TRAMO-SEATS — regarima","text":"regarima/regarima_x13/regarima_tramoseats functions remove deterministic effects input series (e.g.calendar effects, outliers) using multivariate regression model arima errors. jregarima/jregarima_x13/jregarima_tramoseats functions computation return Java objects instead formatted output.","code":""},{"path":"/reference/regarima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RegARIMA model, pre-adjustment in X13 and TRAMO-SEATS — regarima","text":"","code":"jregarima(series, spec = NA)  jregarima_tramoseats(   series,   spec = c(\"TRfull\", \"TR0\", \"TR1\", \"TR2\", \"TR3\", \"TR4\", \"TR5\") )  jregarima_x13(series, spec = c(\"RG5c\", \"RG0\", \"RG1\", \"RG2c\", \"RG3\", \"RG4c\"))  regarima(series, spec = NA)  regarima_tramoseats(   series,   spec = c(\"TRfull\", \"TR0\", \"TR1\", \"TR2\", \"TR3\", \"TR4\", \"TR5\") )  regarima_x13(series, spec = c(\"RG5c\", \"RG0\", \"RG1\", \"RG2c\", \"RG3\", \"RG4c\"))"},{"path":"/reference/regarima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RegARIMA model, pre-adjustment in X13 and TRAMO-SEATS — regarima","text":"series univariate time series spec model specification. function: regarima: object class c(\"regarima_spec\",\"X13\") c(\"regarima_spec\",\"TRAMO_SEATS\"). See functions regarima_spec_x13 regarima_spec_tramoseats. regarima_x13: name predefined X13 'JDemetra+' model specification (see Details). default value \"RG5c\". regarima_tramoseats:name predefined TRAMO-SEATS 'JDemetra+' model specification (see Details). default value \"TRfull\".","code":""},{"path":"/reference/regarima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RegARIMA model, pre-adjustment in X13 and TRAMO-SEATS — regarima","text":"jregarima/jregarima_x13/jregarima_tramoseats functions return jSA object contains result pre-adjustment method without formatting. Therefore, computation faster regarima/regarima_x13/regarima_tramoseats functions. results seasonal adjustment can extracted function get_indicators. regarima/regarima_x13/regarima_tramoseats functions return object class \"regarima\" sub-class \"X13\" \"TRAMO_SEATS\". regarima_x13 returns object class c(\"regarima\",\"X13\") regarima_tramoseats, object class c(\"regarima\",\"TRAMO_SEATS\"). function regarima, sub-class object depends used method defined spec object class. object class \"regarima\" list containing following components: specification list model specification defined spec argument. See also Value regarima_spec_x13  regarima_spec_tramoseats functions. arma vector containing orders autoregressive (AR), moving average (MA), seasonal AR seasonal MA processes, well regular seasonal differencing orders (P,D,Q) (BP,BD,BQ). arima.coefficients matrix containing estimated regular seasonal AR MA coefficients, well associated standard errors t-statistics values. estimated coefficients can also extracted function coef (whose output also includes regression coefficients). regression.coefficients matrix containing estimated regression variables (.e.: mean, calendar effect, outliers user-defined regressors) coefficients, well associated standard errors t-statistics values. estimated coefficients can also extracted function coef (whose output also includes arima coefficients). loglik matrix containing log-likelihood RegARIMA model well associated model selection criteria statistics (AIC, AICC, BIC BICC) parameters (np = number parameters likelihood, neffectiveobs = number effective observations likelihood). statistics can also extracted function logLik. model list containing information model specification estimation (spec_rslt), well decomposed elements input series (ts matrix, effects). model specification includes information estimation method (Model) time span (T.span), whether original series log transformed (Log transformation) details regression part RegARIMA model .e. includes Mean, Trading days effects (, provides number regressors), Leap year effect, Easter effect whether outliers detected (Outliers (, provides number outliers). decomposed elements input series contain linearised series (y_lin) deterministic components .e.: trading days effect (tde), Easter effect (ee), moving holidays effect (omhe) outliers effect (total - , related irregular - out_i, related trend - out_t, related seasonal - out_s). residuals residuals (time series). can also extracted function residuals. residuals.stat list containing statistics RegARIMA residuals. provides residuals standard error (st.error) results normality, independence linearity residuals (tests) - object class c(\"regarima_rtests\",\"data.frame\"). forecast ts matrix containing forecast original series (fcst) standard error (fcsterr).","code":""},{"path":"/reference/regarima.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RegARIMA model, pre-adjustment in X13 and TRAMO-SEATS — regarima","text":"seasonally adjusting X13 TRAMO-SEATS, first step consists pre-adjusting original series RegARIMA model, original series corrected deterministic effects missing observations. step also referred linearization original series. RegARIMA model (model ARIMA errors) specified : $$z_t = y_t\\beta + x_t$$ : \\(z_t\\) original series; \\(\\beta = (\\beta_1,...,\\beta_n)\\) vector regression coefficients; \\(y_t = (y_{1t},...,y_{nt})\\) \\(n\\) regression variables (outliers, calendar effects, user-defined variables); \\(x_t\\) disturbance follows general ARIMA process: \\(\\phi(B)\\delta(B)x_t = \\theta(B)a_t\\); \\(\\phi(B), \\delta(B)\\) \\(\\theta(B)\\) finite polynomials \\(B\\) \\(a_t\\) white noise variable zero mean constant variance. polynomial \\(\\phi(B)\\) stationary autoregressive (AR) polynomial \\(B\\), product stationary regular AR polynomial \\(B\\) stationary seasonal polynomial \\(B^s\\): $$\\phi(B)=\\phi_p(B)\\Phi_{bp}(B^s)=(1+\\phi_1B+...+\\phi_pB^p)(1+\\Phi_1B^s+...+\\Phi_{bp}B^{bps})$$ : \\(p\\) number regular AR terms ('JDemetra+', \\(p \\le 3\\)); \\(bp\\) number seasonal AR terms ('JDemetra+', \\(bp \\le 1\\)); \\(s\\)  number observations per year (ie. time series frequency). polynomial \\(\\theta(B)\\) invertible moving average (MA) polynomial \\(B\\), product invertible regular MA polynomial \\(B\\) invertible seasonal MA polynomial \\(B^s\\): $$\\theta(B)=\\theta_q(B)\\Theta_{bq}(B^s)=(1+\\theta_1B+...+\\theta_qB^q)(1+\\Theta_1B^s+...+\\Theta_{bq}B^{bqs})$$ : \\(q\\) number regular MA terms ('JDemetra+', \\(q \\le 3\\)); \\(bq\\) number seasonal MA terms ('JDemetra+', \\(bq \\le 1\\)). polynomial \\(\\delta(B)\\) non-stationary AR polynomial \\(B\\) (unit roots): $$\\delta(B) = (1-B)^d(1-B^s)^{d_s}$$ : \\(d\\) regular differencing order ('JDemetra+', \\(d \\le 1\\)); \\(d_s\\) seasonal differencing order ('JDemetra+', \\(d_s \\le 1\\)). NB. notations used AR MA processes, well model denoted ARIMA \\((P,D,Q)(BP,BD,BQ)\\), consistent 'JDemetra+'. available predefined 'JDemetra+' X13 TRAMO-SEATS model specifications described tables : X13: TRAMO-SEATS:","code":""},{"path":"/reference/regarima.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RegARIMA model, pre-adjustment in X13 and TRAMO-SEATS — regarima","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/ BOX G.E.P. JENKINS G.M. (1970), \"Time Series Analysis: Forecasting Control\", Holden-Day, San Francisco. BOX G.E.P., JENKINS G.M., REINSEL G.C. LJUNG G.M. (2015), \"Time Series Analysis: Forecasting Control\", John Wiley & Sons, Hoboken, N. J., 5th edition.","code":""},{"path":"/reference/regarima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RegARIMA model, pre-adjustment in X13 and TRAMO-SEATS — regarima","text":"","code":"# \\donttest{  # X13 method myseries <- ipi_c_eu[, \"FR\"] myreg <- regarima_x13(myseries, spec =\"RG5c\") summary(myreg) #> y = regression model + arima (2, 1, 1, 0, 1, 1) #>  #> Model: RegARIMA - X13 #> Estimation span: from 1-1990 to 12-2020 #> Log-transformation: no #> Regression model: no mean, trading days effect(7), leap year effect, Easter effect, outliers(4) #>  #> Coefficients: #> ARIMA:  #>             Estimate Std. Error  T-stat Pr(>|t|)     #> Phi(1)     0.0003269  0.1077296   0.003   0.9976     #> Phi(2)     0.1688192  0.0740996   2.278   0.0233 *   #> Theta(1)  -0.5485606  0.1016550  -5.396 1.24e-07 *** #> BTheta(1) -0.6660849  0.0422242 -15.775  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Regression model:  #>               Estimate Std. Error  T-stat Pr(>|t|)     #> Monday         0.55932    0.22801   2.453 0.014638 *   #> Tuesday        0.88221    0.22832   3.864 0.000132 *** #> Wednesday      1.03996    0.22930   4.535 7.85e-06 *** #> Thursday       0.04943    0.22944   0.215 0.829549     #> Friday         0.91132    0.22988   3.964 8.88e-05 *** #> Saturday      -1.57769    0.22775  -6.927 1.99e-11 *** #> Leap year      2.15403    0.70527   3.054 0.002425 **  #> Easter [1]    -2.37950    0.45391  -5.242 2.71e-07 *** #> TC (4-2020)  -35.59245    2.17330 -16.377  < 2e-16 *** #> AO (3-2020)  -20.89026    2.18013  -9.582  < 2e-16 *** #> AO (5-2011)   13.49850    1.85694   7.269 2.28e-12 *** #> LS (11-2008) -12.54901    1.63554  -7.673 1.60e-13 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #>  #> Residual standard error: 2.218 on 342 degrees of freedom #> Log likelihood = -799.1, aic =  1632, aicc =  1634, bic(corrected for length) = 1.855 #>  plot(myreg)        myspec1 <- regarima_spec_x13(myreg, tradingdays.option = \"WorkingDays\") myreg1 <- regarima(myseries, myspec1)  myspec2 <- regarima_spec_x13(myreg, usrdef.outliersEnabled = TRUE,              usrdef.outliersType = c(\"LS\", \"AO\"),              usrdef.outliersDate = c(\"2008-10-01\", \"2002-01-01\"),              usrdef.outliersCoef = c(36, 14),              transform.function = \"None\") myreg2 <- regarima(myseries, myspec2) myreg2 #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.07859      0.114 #> Phi(2)     0.19792      0.076 #> Theta(1)  -0.48272      0.111 #> BTheta(1) -0.65916      0.043 #>  #>               Estimate Std. Error #> Monday         0.64094      0.228 #> Tuesday        0.81794      0.229 #> Wednesday      1.05374      0.229 #> Thursday       0.06981      0.228 #> Friday         0.93434      0.228 #> Saturday      -1.63686      0.226 #> Leap year      2.11550      0.697 #> Easter [1]    -2.38135      0.451 #> AO (9-2008)   31.95554      2.924 #> LS (9-2008)  -57.04093      2.657 #> TC (4-2020)  -35.62104      2.120 #> AO (3-2020)  -21.00931      2.145 #> AO (5-2011)   13.21877      1.832 #> TC (9-2008)   23.44654      4.001 #> TC (12-2001) -20.47521      2.922 #> AO (12-2001)  17.13461      2.962 #> TC (2-2002)   10.61731      1.937 #>  #> Fixed outliers:  #>              Coefficients #> LS (10-2008)           36 #> AO (1-2002)            14 #>  #>  #> Residual standard error: 2.178 on 337 degrees of freedom #> Log likelihood = -792.6, aic =  1629 aicc =  1632, bic(corrected for length) = 1.901 #>   myspec3 <- regarima_spec_x13(myreg, automdl.enabled = FALSE,              arima.p = 1, arima.q = 1,              arima.bp = 0, arima.bq = 1,              arima.coefEnabled = TRUE,              arima.coef = c(-0.8, -0.6, 0),              arima.coefType = c(rep(\"Fixed\", 2), \"Undefined\")) s_arimaCoef(myspec3) #>                Type Value #> Phi(1)        Fixed  -0.8 #> Theta(1)      Fixed  -0.6 #> BTheta(1) Undefined   0.0 myreg3 <- regarima(myseries, myspec3) summary(myreg3) #> y = regression model + arima (1, 1, 1, 0, 1, 1) #>  #> Model: RegARIMA - X13 #> Estimation span: from 1-1990 to 12-2020 #> Log-transformation: yes #> Regression model: no mean, trading days effect(6), no leap year effect, Easter effect, outliers(3) #>  #> Coefficients: #> ARIMA:  #>           Estimate Std. Error T-stat Pr(>|t|)     #> Phi(1)     -0.8000     0.0000     NA       NA     #> Theta(1)   -0.6000     0.0000     NA       NA     #> BTheta(1)  -0.6977     0.0399 -17.49   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Regression model:  #>              Estimate Std. Error  T-stat Pr(>|t|)     #> Monday       0.006317   0.001791   3.526 0.000476 *** #> Tuesday      0.007824   0.001793   4.363 1.68e-05 *** #> Wednesday    0.010528   0.001802   5.841 1.16e-08 *** #> Thursday     0.001857   0.001811   1.025 0.306022     #> Friday       0.010099   0.001812   5.574 4.90e-08 *** #> Saturday    -0.018439   0.001781 -10.354  < 2e-16 *** #> Easter [1]  -0.020593   0.003515  -5.859 1.06e-08 *** #> TC (4-2020) -0.475720   0.031229 -15.233  < 2e-16 *** #> AO (3-2020) -0.213355   0.023246  -9.178  < 2e-16 *** #> AO (5-2011)  0.143705   0.015529   9.254  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #>  #> Residual standard error: 0.0256 on 347 degrees of freedom #> Log likelihood = 802.3, aic =  1733, aicc =  1734, bic(corrected for length) = -7.15 #>  plot(myreg3)         # TRAMO-SEATS method myspec <- regarima_spec_tramoseats(\"TRfull\") myreg <- regarima(myseries, myspec) myreg #> y = regression model + arima (2, 1, 0, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)      0.4032      0.051 #> Phi(2)      0.2883      0.051 #> BTheta(1)  -0.6641      0.042 #>  #>             Estimate Std. Error #> Week days     0.6994      0.032 #> Leap year     2.3231      0.690 #> Easter [6]   -2.5154      0.436 #> AO (5-2011)  13.4679      1.787 #> TC (4-2020) -22.2128      2.205 #> TC (3-2020) -21.0391      2.217 #> AO (5-2000)   6.7386      1.794 #>  #>  #> Residual standard error: 2.326 on 348 degrees of freedom #> Log likelihood = -816.1, aic =  1654 aicc =  1655, bic(corrected for length) = 1.852 #>   myspec2 <- regarima_spec_tramoseats(myspec, tradingdays.mauto = \"Unused\",              tradingdays.option = \"WorkingDays\",              easter.type = \"Standard\",              automdl.enabled = FALSE, arima.mu = TRUE) myreg2 <- regarima(myseries, myspec2)  var1 <- ts(rnorm(length(myseries))*10, start = start(myseries), frequency = 12) var2 <- ts(rnorm(length(myseries))*100, start = start(myseries), frequency = 12) var <- ts.union(var1, var2) myspec3 <- regarima_spec_tramoseats(myspec,              usrdef.varEnabled = TRUE, usrdef.var = var) s_preVar(myspec3) #> $series #>                  var1         var2 #> Jan 1990 -14.00043517  -96.0449159 #> Feb 1990   2.55317055  -97.5423042 #> Mar 1990 -24.37263611  -33.8576503 #> Apr 1990  -0.05571287  115.2347074 #> May 1990   6.21552721   40.5101183 #> Jun 1990  11.48411606  -47.0922497 #> Jul 1990 -18.21817661  -13.3251019 #> Aug 1990  -2.47325302  122.6682356 #> Sep 1990  -2.44199607   33.2943995 #> Oct 1990  -2.82705449  -34.7088466 #> Nov 1990  -5.53699384   -9.8550690 #> Dec 1990   6.28982042    3.4766060 #> Jan 1991  20.65024895   38.6127022 #> Feb 1991 -16.30989402    2.0831228 #> Mar 1991   5.12426950    0.7586777 #> Apr 1991 -18.63011492   93.0844030 #> May 1991  -5.22012515  -68.4749941 #> Jun 1991  -0.52601910   33.7401513 #> Jul 1991   5.42996343  -41.2137704 #> Aug 1991  -9.14074827   93.4261130 #> Sep 1991   4.68154420  184.0316741 #> Oct 1991   3.62951256  -70.4819663 #> Nov 1991 -13.04543545    0.8510312 #> Dec 1991   7.37776321  203.4189886 #> Jan 1992  18.88504929 -134.1686068 #> Feb 1992  -0.97445104  115.8979182 #> Mar 1992  -9.35847354  -20.3208958 #> Apr 1992  -0.15950311  -37.8028555 #> May 1992  -8.26788954  173.6111043 #> Jun 1992 -15.12399651  -84.5247816 #> Jul 1992   9.35363190  -96.1571493 #> Aug 1992   1.76488611  101.7491053 #> Sep 1992   2.43685465 -149.6053742 #> Oct 1992  16.23548883 -118.4818730 #> Nov 1992   1.12038083   63.0234373 #> Dec 1992  -1.33997013  210.1252514 #> Jan 1993 -19.10087468  -61.3736810 #> Feb 1993  -2.79237242 -163.4638272 #> Mar 1993  -3.13445978   -1.0441117 #> Apr 1993  10.67307879  -65.6506139 #> May 1993   0.70034850  -66.9533441 #> Jun 1993  -6.39123324  -47.8589028 #> Jul 1993  -0.49964899  131.9456316 #> Aug 1993  -2.51483443   63.6562761 #> Sep 1993   4.44797116   51.4327782 #> Oct 1993  27.55417575 -175.1375113 #> Nov 1993   0.46531380   89.3597518 #> Dec 1993   5.77709069   22.3038372 #> Jan 1994   1.18194874   58.0816593 #> Feb 1994 -19.11720491  -17.7821421 #> Mar 1994   8.62086482   74.0966708 #> Apr 1994  -2.43236740  -99.7443079 #> May 1994  -2.06087195 -293.8977561 #> Jun 1994   0.19177592   71.9015661 #> Jul 1994   0.29560754  -69.8005041 #> Aug 1994   5.49827542 -189.4125843 #> Sep 1994 -22.74114857    7.6299249 #> Oct 1994  26.82557184   87.5308501 #> Nov 1994  -3.61221255   45.3827393 #> Dec 1994   2.13355750  -85.0716906 #> Jan 1995  10.74345882   56.6201613 #> Feb 1995  -6.65088249  115.2211954 #> Mar 1995  11.13952419  -75.6197377 #> Apr 1995  -2.45896412  -48.9258334 #> May 1995 -11.77563309 -116.6052337 #> Jun 1995  -9.75850616  -47.9668950 #> Jul 1995  10.65057320   11.5348218 #> Aug 1995   1.31670635 -176.8048407 #> Sep 1995   4.88628809 -140.7638919 #> Oct 1995 -16.99450568   70.9178461 #> Nov 1995 -14.70736306 -124.0842940 #> Dec 1995   2.84150344  -36.8327348 #> Jan 1996  13.37320413   46.2080093 #> Feb 1996   2.36696283  -32.2833101 #> Mar 1996  13.18293384 -128.7214810 #> Apr 1996   5.23909788 -103.0040247 #> May 1996   6.06748047  151.4089316 #> Jun 1996  -1.09935672   34.6903586 #> Jul 1996   1.72181715  177.9441542 #> Aug 1996  -0.90327287   38.6630924 #> Sep 1996  19.24343341  -91.8695239 #> Oct 1996  12.98392759 -158.4336488 #> Nov 1996   7.48791268   -8.4058892 #> Dec 1996   5.56224329 -208.5070889 #> Jan 1997  -5.48257264    0.3567992 #> Feb 1997  11.10534893  -35.5770822 #> Mar 1997 -26.12334333  114.6359751 #> Apr 1997  -1.55693776  -22.1188446 #> May 1997   4.33889790  101.8179021 #> Jun 1997  -3.81951112  -26.3719295 #> Jul 1997   4.24187575  165.8542305 #> Aug 1997  10.63101996  -77.4086771 #> Sep 1997  10.48712620  -92.3937880 #> Oct 1997  -0.38102895  -27.5533378 #> Nov 1997   4.86148920  -59.3399688 #> Dec 1997  16.72882611  -12.2285891 #> Jan 1998  -3.54361164  117.9784246 #> Feb 1998   9.46347886   64.1037374 #> Mar 1998  13.16826356  -62.9588508 #> Apr 1998  -2.96640025  -80.7734971 #> May 1998  -3.87213575  -86.0489929 #> Jun 1998  -7.85432656 -216.9238693 #> Jul 1998 -10.56736867 -137.5836518 #> Aug 1998  -7.95541430  -49.3132472 #> Sep 1998 -17.56275428  -58.1652027 #> Oct 1998  -6.90537897  -16.7229304 #> Nov 1998  -5.58541994   48.5993129 #> Dec 1998  -5.36663326 -133.3395796 #> Jan 1999   2.27127133  -26.1965625 #> Feb 1999   9.78454920   65.2386303 #> Mar 1999  -2.08882651   74.8854971 #> Apr 1999 -13.99410460   89.6560285 #> May 1999   2.58537288  148.9300424 #> Jun 1999  -4.41799453  -65.9403481 #> Jul 1999   5.68599861   53.7283179 #> Aug 1999  21.26850459   74.6803067 #> Sep 1999   4.24858441  189.6317084 #> Oct 1999 -16.84281532 -206.0070725 #> Nov 1999   2.49401784    6.4543870 #> Dec 1999  10.72838252  -26.5147403 #> Jan 2000  20.39369263  -44.7344531 #> Feb 2000   4.49453778 -141.0700927 #> Mar 2000  13.91814046  -50.6418882 #> Apr 2000   4.26566547  -26.9761838 #> May 2000   1.07583992 -108.5154918 #> Jun 2000   0.22294733   36.2159127 #> Jul 2000   6.03611011  -33.5672143 #> Aug 2000  -2.62650573  136.3804498 #> Sep 2000  -5.28264082  -71.1524136 #> Oct 2000   1.92149422   66.2178797 #> Nov 2000 -11.46199669   29.1130223 #> Dec 2000   8.46184665   19.7958000 #> Jan 2001   0.81719629 -120.3566106 #> Feb 2001 -13.05117010   -3.9817044 #> Mar 2001  -9.44912060   68.6982465 #> Apr 2001   4.54341594   70.5267007 #> May 2001  -8.55202501   99.1441680 #> Jun 2001  -2.86895219  114.4248971 #> Jul 2001   8.94961626 -123.8910243 #> Aug 2001   0.67304440  265.4898333 #> Sep 2001  -1.62676337  -15.6917189 #> Oct 2001  -8.27310169  -42.3490117 #> Nov 2001  18.76505621  -19.8387058 #> Dec 2001   7.66440199  -89.4802407 #> Jan 2002   9.79956696   90.4269119 #> Feb 2002  13.21780992    7.9649210 #> Mar 2002 -11.19710829 -125.8827223 #> Apr 2002   5.14599819  102.5685106 #> May 2002 -15.09099836  -73.0778603 #> Jun 2002  15.32741480  -19.0145507 #> Jul 2002   4.29147371   52.8864693 #> Aug 2002   1.22103414   55.0210535 #> Sep 2002 -11.38012401   54.9684337 #> Oct 2002  -5.58015129  -65.9542372 #> Nov 2002  10.52538537    5.7421706 #> Dec 2002   6.77683644 -280.8010508 #> Jan 2003   0.38499547  -91.2259753 #> Feb 2003  -3.56381187  -78.2379163 #> Mar 2003   7.82844102  -66.4104924 #> Apr 2003   8.04411616   62.6309770 #> May 2003 -19.00060823  -50.7248206 #> Jun 2003   9.35784286   27.0361335 #> Jul 2003  -3.09051503   46.7476865 #> Aug 2003   2.63066677   72.3994958 #> Sep 2003 -17.90591856   61.3836939 #> Oct 2003  -7.88258845  -61.7869202 #> Nov 2003 -11.33021669   22.0724902 #> Dec 2003   3.63652568  112.7926598 #> Jan 2004  -2.85887914  181.3454336 #> Feb 2004   5.17669134   -8.3825685 #> Mar 2004  -1.02908670  136.7706666 #> Apr 2004  -9.74069593  -62.7434620 #> May 2004  12.70672301  -21.6629150 #> Jun 2004   9.60864787  -68.3713824 #> Jul 2004   7.68721370  -44.4702734 #> Aug 2004  10.35930771   60.6489806 #> Sep 2004  -4.73887074   62.4183075 #> Oct 2004 -12.75334875  -69.5431074 #> Nov 2004  -3.05620674  -78.3639078 #> Dec 2004  22.11769487  -95.3123859 #> Jan 2005 -10.41668381  179.2756071 #> Feb 2005 -11.46523850   34.8976696 #> Mar 2005 -16.75327303   25.9103768 #> Apr 2005  15.25938655  -80.5951897 #> May 2005   5.54185515   10.5664701 #> Jun 2005  19.93110265  -33.3599682 #> Jul 2005  -1.54120740  164.1847970 #> Aug 2005  25.64408338  -64.3905859 #> Sep 2005  10.61999145   58.7020562 #> Oct 2005  11.42694878  -15.0403088 #> Nov 2005  11.23838843 -171.0821848 #> Dec 2005  -3.97001493  143.1032558 #> Jan 2006  -8.23261151 -264.5212268 #> Feb 2006  -5.78884625 -103.2457405 #> Mar 2006  17.63789378  -70.7466431 #> Apr 2006   1.32992146  -70.0560014 #> May 2006   3.76499328   53.7885439 #> Jun 2006  11.38707653  -31.6332175 #> Jul 2006  12.41263075  -83.9622754 #> Aug 2006   6.12090945 -135.4928062 #> Sep 2006  -4.29380087  -81.7568272 #> Oct 2006  13.60461327  -63.4400003 #> Nov 2006  -0.70857431   81.5949433 #> Dec 2006  -2.72153684   30.2795706 #> Jan 2007 -24.46680029  180.7086625 #> Feb 2007   0.65486641  -89.4026756 #> Mar 2007 -10.98508902   -4.6428211 #> Apr 2007  -6.33178176  -47.1179138 #> May 2007 -20.63654451  -52.6692630 #> Jun 2007  26.48932029   -9.5134908 #> Jul 2007 -11.53398386 -249.5364809 #> Aug 2007  -3.40637876   16.6889217 #> Sep 2007   7.86362576   35.0492384 #> Oct 2007 -12.70513110  143.3701009 #> Nov 2007   5.42141549   76.5906803 #> Dec 2007   0.75105900  116.7520670 #> Jan 2008   5.58514422  -13.6943429 #> Feb 2008   4.15406399  -51.4902044 #> Mar 2008 -14.52299769  151.9744468 #> Apr 2008   9.41206122  -32.8491678 #> May 2008  -3.38935872   -5.3671506 #> Jun 2008  -0.75574247  -56.3524635 #> Jul 2008   0.40204392  -74.3908963 #> Aug 2008   1.24301066  -10.9041651 #> Sep 2008  -9.98432551  -56.0829227 #> Oct 2008  12.33390065   18.8001549 #> Nov 2008   3.40424488   74.8850942 #> Dec 2008  -4.72702482 -191.6538316 #> Jan 2009   7.08753061   23.6095847 #> Feb 2009 -15.28958715   62.8953415 #> Mar 2009   2.37425345   41.7925676 #> Apr 2009 -13.12814246  197.6758477 #> May 2009   7.47028587  -50.6286298 #> Jun 2009 -15.62518435 -110.9968853 #> Jul 2009   0.71053360  -94.8705723 #> Aug 2009  -6.39534770   47.6843757 #> Sep 2009  -8.45195739  -79.5201560 #> Oct 2009   6.75244698   23.4326923 #> Nov 2009  11.53375794 -122.2451097 #> Dec 2009 -16.86504742 -245.3647354 #> Jan 2010  -9.02814949 -148.9260814 #> Feb 2010  13.17633698  -43.2147734 #> Mar 2010  11.00189745  -94.2554006 #> Apr 2010  12.03767839  -12.1450799 #> May 2010 -14.31270777  133.6446798 #> Jun 2010  13.82910861  -86.0356182 #> Jul 2010   0.03125940   66.6537820 #> Aug 2010  -0.77886824 -142.1534746 #> Sep 2010   4.41428226  117.0056168 #> Oct 2010   1.28922896 -140.4714543 #> Nov 2010  -8.30214260  110.1708096 #> Dec 2010  -5.03592910   69.7986263 #> Jan 2011 -11.93641182  -86.4349803 #> Feb 2011  -7.51723323 -109.1470351 #> Mar 2011  14.55841403   -3.7051465 #> Apr 2011  -8.28603533   81.0053792 #> May 2011   2.89774460  -49.9355412 #> Jun 2011  -4.80053484   94.8031588 #> Jul 2011  -6.04829354  -17.4245957 #> Aug 2011  14.60110180 -110.6235952 #> Sep 2011   1.49679354  -94.5985005 #> Oct 2011 -14.33321100   28.9089591 #> Nov 2011  -0.10303319   87.6913145 #> Dec 2011  -2.12236035 -114.8903940 #> Jan 2012  -9.06340179 -113.7612756 #> Feb 2012 -21.02152479 -143.7246735 #> Mar 2012  18.93360464  -49.4143476 #> Apr 2012  -9.68125837   84.0801808 #> May 2012  -1.02603036   79.1534124 #> Jun 2012   2.39959572  -16.8848948 #> Jul 2012   0.60898893   61.2722104 #> Aug 2012 -21.77576028  -77.1158924 #> Sep 2012  -1.17860143   88.8628993 #> Oct 2012   1.12294787    1.3214477 #> Nov 2012   0.07886198   22.5339515 #> Dec 2012  18.77743872  -72.9915210 #> Jan 2013  21.58756554 -122.2487070 #> Feb 2013   7.09714522   40.6805171 #> Mar 2013   7.66983379  -75.1012223 #> Apr 2013  -3.08211421  -16.2116540 #> May 2013  10.12001849   35.2010126 #> Jun 2013  -9.19051597  -28.9058300 #> Jul 2013   5.63380077   10.4662227 #> Aug 2013   3.22482749   72.0186531 #> Sep 2013   3.66674363  -61.1046082 #> Oct 2013  11.29835153 -110.6914072 #> Nov 2013  -9.41498076   53.4803326 #> Dec 2013   2.17837643   73.6067968 #> Jan 2014  14.15412293 -122.2501574 #> Feb 2014  -3.83733048  102.1415310 #> Mar 2014  -1.74086374   46.5165158 #> Apr 2014  -2.21744517   79.0472705 #> May 2014 -10.09528722  -13.0264801 #> Jun 2014   4.80725266  -93.0285334 #> Jul 2014  16.04407328  -36.4851004 #> Aug 2014 -15.15024529   15.3872493 #> Sep 2014 -14.16023914   41.3154818 #> Oct 2014   8.76777327  248.0823360 #> Nov 2014   6.24132413 -217.9956742 #> Dec 2014  21.12277288   42.0874578 #> Jan 2015  -3.56124416  -35.7528325 #> Feb 2015 -10.64464209  -64.6861514 #> Mar 2015  10.77116538   -5.0141801 #> Apr 2015  11.81575567   41.6942847 #> May 2015   1.98392095  -63.2587542 #> Jun 2015  -4.00405249  115.0146673 #> Jul 2015   6.16154281  -23.5475907 #> Aug 2015  19.74156748 -164.3107386 #> Sep 2015  18.84662324 -150.3382146 #> Oct 2015 -15.88620547 -205.0584847 #> Nov 2015  -5.39923164  -75.3198229 #> Dec 2015 -11.69461464  -13.4141958 #> Jan 2016   5.59105989  100.5782847 #> Feb 2016 -18.19347247  216.7186798 #> Mar 2016   3.93343972  232.2556540 #> Apr 2016   0.42134106 -102.0423391 #> May 2016  11.79664177    4.8814436 #> Jun 2016  -2.56921176  -77.1888628 #> Jul 2016 -10.56336098  -78.5235068 #> Aug 2016   1.98777205  -72.6603031 #> Sep 2016   6.50533552   68.1878032 #> Oct 2016   3.43913337  -22.9843287 #> Nov 2016  14.77532312 -151.0601724 #> Dec 2016   0.72025698  -58.3727687 #> Jan 2017  21.26444534 -202.2918454 #> Feb 2017 -14.76196906   40.3504676 #> Mar 2017   4.07888500   55.0015549 #> Apr 2017  13.93977798    2.8357122 #> May 2017   3.60278296   89.3165020 #> Jun 2017   6.54550251  -37.6555496 #> Jul 2017  10.52155422   60.5884808 #> Aug 2017 -19.79555125   -0.4874726 #> Sep 2017  12.08385605  -52.0796373 #> Oct 2017  -1.69280084  -63.9018598 #> Nov 2017   2.95029753  -63.5894137 #> Dec 2017  12.66340587   10.6586975 #> Jan 2018 -11.35343257  117.6914248 #> Feb 2018 -11.31053798   44.7391153 #> Mar 2018   1.09993384  227.2954766 #> Apr 2018   8.52905410   13.6058206 #> May 2018  -2.34337862 -199.9039133 #> Jun 2018  20.86688567  -42.0500870 #> Jul 2018  -1.10919371  -37.8407395 #> Aug 2018 -13.92847056  122.0774789 #> Sep 2018 -11.42290768 -154.1030292 #> Oct 2018  17.04608737  -31.0310122 #> Nov 2018  -0.80073634   -2.0108184 #> Dec 2018  -4.37281240 -239.0200336 #> Jan 2019  -1.19215094   88.9865359 #> Feb 2019   7.86462865 -148.2813325 #> Mar 2019  -5.78945246   44.5750348 #> Apr 2019  -1.45426885  136.9775856 #> May 2019   5.26457991   -2.0110027 #> Jun 2019  17.33578110  -10.9217587 #> Jul 2019  14.48657220   26.4661745 #> Aug 2019  15.18193149   30.3848264 #> Sep 2019  -3.84007254  -18.3388483 #> Oct 2019  18.27125177   55.9649672 #> Nov 2019  -5.51491750  -18.6553842 #> Dec 2019  -8.65753541  -81.2275372 #> Jan 2020  -3.43831481 -164.0581672 #> Feb 2020  10.62876458   50.7922478 #> Mar 2020   8.13058204  175.4336961 #> Apr 2020  18.03483361   59.2400202 #> May 2020  -1.05068694  101.6713288 #> Jun 2020   9.82453362   12.1620586 #> Jul 2020 -17.13302622 -107.8067265 #> Aug 2020  -8.32019527 -114.3565720 #> Sep 2020  11.00491882  -52.9643677 #> Oct 2020  -1.73820106  -68.1273156 #> Nov 2020   1.78812018  -20.2447559 #> Dec 2020  -6.98429449  168.4495721 #>  #> $description #>           type coeff #> var1 Undefined    NA #> var2 Undefined    NA #>  myreg3 <- regarima(myseries, myspec3) myreg3 #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>            Estimate Std. Error #> Phi(1)    -0.002136      0.111 #> Phi(2)     0.173889      0.074 #> Theta(1)  -0.531219      0.106 #> BTheta(1) -0.669839      0.042 #>  #>                Estimate Std. Error #> r.var1        8.032e-03      0.009 #> r.var2        7.784e-05      0.001 #> Week days     6.885e-01      0.031 #> Leap year     2.303e+00      0.697 #> Easter [6]   -2.540e+00      0.453 #> TC (4-2020)  -2.122e+01      2.148 #> TC (3-2020)  -2.093e+01      2.149 #> AO (5-2011)   1.338e+01      1.816 #> LS (11-2008) -1.228e+01      1.646 #> AO (5-2000)   6.213e+00      1.820 #>  #>  #> Residual standard error: 2.206 on 344 degrees of freedom #> Log likelihood = -797.2, aic =  1624 aicc =  1626, bic(corrected for length) = 1.812 #>  # }"},{"path":"/reference/regarima_spec_tramoseats.html","id":null,"dir":"Reference","previous_headings":"","what":"RegARIMA model specification, pre-adjustment in TRAMO-SEATS — regarima_spec_tramoseats","title":"RegARIMA model specification, pre-adjustment in TRAMO-SEATS — regarima_spec_tramoseats","text":"Function create (/modify) c(\"regarima_spec\",\"TRAMO_SEATS\") class object RegARIMA model specification TRAMO-SEATS method. object can created name (character) predefined 'JDemetra+' model specification, previous specification (c(\"regarima_spec\",\"TRAMO_SEATS\") object) TRAMO-SEATS RegARIMA model (c(\"regarima\",\"TRAMO_SEATS\")).","code":""},{"path":"/reference/regarima_spec_tramoseats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RegARIMA model specification, pre-adjustment in TRAMO-SEATS — regarima_spec_tramoseats","text":"","code":"regarima_spec_tramoseats(   spec = c(\"TRfull\", \"TR0\", \"TR1\", \"TR2\", \"TR3\", \"TR4\", \"TR5\"),   preliminary.check = NA,   estimate.from = NA_character_,   estimate.to = NA_character_,   estimate.first = NA_integer_,   estimate.last = NA_integer_,   estimate.exclFirst = NA_integer_,   estimate.exclLast = NA_integer_,   estimate.tol = NA_integer_,   estimate.eml = NA,   estimate.urfinal = NA_integer_,   transform.function = c(NA, \"Auto\", \"None\", \"Log\"),   transform.fct = NA_integer_,   usrdef.outliersEnabled = NA,   usrdef.outliersType = NA,   usrdef.outliersDate = NA,   usrdef.outliersCoef = NA,   usrdef.varEnabled = NA,   usrdef.var = NA,   usrdef.varType = NA,   usrdef.varCoef = NA,   tradingdays.mauto = c(NA, \"Unused\", \"FTest\", \"WaldTest\"),   tradingdays.pftd = NA_integer_,   tradingdays.option = c(NA, \"TradingDays\", \"WorkingDays\", \"UserDefined\", \"None\"),   tradingdays.leapyear = NA,   tradingdays.stocktd = NA_integer_,   tradingdays.test = c(NA, \"Separate_T\", \"Joint_F\", \"None\"),   easter.type = c(NA, \"Unused\", \"Standard\", \"IncludeEaster\", \"IncludeEasterMonday\"),   easter.julian = NA,   easter.duration = NA_integer_,   easter.test = NA,   outlier.enabled = NA,   outlier.from = NA_character_,   outlier.to = NA_character_,   outlier.first = NA_integer_,   outlier.last = NA_integer_,   outlier.exclFirst = NA_integer_,   outlier.exclLast = NA_integer_,   outlier.ao = NA,   outlier.tc = NA,   outlier.ls = NA,   outlier.so = NA,   outlier.usedefcv = NA,   outlier.cv = NA_integer_,   outlier.eml = NA,   outlier.tcrate = NA_integer_,   automdl.enabled = NA,   automdl.acceptdefault = NA,   automdl.cancel = NA_integer_,   automdl.ub1 = NA_integer_,   automdl.ub2 = NA_integer_,   automdl.armalimit = NA_integer_,   automdl.reducecv = NA_integer_,   automdl.ljungboxlimit = NA_integer_,   automdl.compare = NA,   arima.mu = NA,   arima.p = NA_integer_,   arima.d = NA_integer_,   arima.q = NA_integer_,   arima.bp = NA_integer_,   arima.bd = NA_integer_,   arima.bq = NA_integer_,   arima.coefEnabled = NA,   arima.coef = NA,   arima.coefType = NA,   fcst.horizon = NA_integer_ )"},{"path":"/reference/regarima_spec_tramoseats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RegARIMA model specification, pre-adjustment in TRAMO-SEATS — regarima_spec_tramoseats","text":"spec model specification. can name (character) predefined 'JDemetra+' model specification (see Details), object class c(\"regarima_spec\",\"TRAMO_SEATS\") object class c(\"regarima\", \"TRAMO_SEATS\"). default \"TRfull\". preliminary.check logical check quality input series exclude highly problematic series e.g. series number identical observations /missing values pre-specified threshold values. time span series, (sub)period used estimate regarima model, controlled following six variables: estimate., estimate., estimate.first, estimate.last, estimate.exclFirst estimate.exclLast; estimate.estimate.priority remaining span control variables, estimate.last estimate.first priority estimate.exclFirst estimate.exclLast, estimate.last priority estimate.first. Default= \"\". estimate.character format \"YYYY-MM-DD\" indicating start time span (e.g. \"1900-01-01\"). can combined parameter estimate.. estimate.character format \"YYYY-MM-DD\" indicating end time span (e.g. \"2020-12-31\"). can combined parameter estimate.. estimate.first numeric, number periods considered beginning series. estimate.last numeric, number periods considered end series. estimate.exclFirst numeric, number periods excluded beginning series. can combined parameter estimate.exclLast. estimate.exclLast numeric, number periods excluded end series. can combined parameter estimate.exclFirst. estimate.tol numeric, convergence tolerance. absolute changes log-likelihood function compared value check convergence estimation iterations. estimate.eml logical, exact maximum likelihood estimation. TRUE, program performs exact maximum likelihood estimation. FASLE, Unconditional Least Squares method used. estimate.urfinal numeric, final unit root limit. threshold value final unit root test identification differencing orders. magnitude AR root final model smaller number,  unit root assumed, order AR polynomial reduced one appropriate order differencing  (non-seasonal, seasonal) increased. transform.function transformation input series: \"None\" = transformation series; \"Log\" = takes log series; \"Auto\" = program tests log-level specification. transform.fct numeric controlling bias log/level pre-test:  transform.fct > 1 favours levels, transform.fct< 1 favours logs. Considered transform.function set \"Auto\". Control variables pre-specified outliers. Said pre-specified outliers used model  enabled (usrdef.outliersEnabled=TRUE) outliers' type (usrdef.outliersType) date (usrdef.outliersDate) provided. usrdef.outliersEnabled logical. TRUE, program uses pre-specified outliers. usrdef.outliersType vector defining outliers' type. Possible types : (\"AO\") = additive, (\"LS\") = level shift, (\"TC\") = transitory change, (\"\") = seasonal outlier. E.g.:  usrdef.outliersType= c(\"AO\",\"AO\",\"LS\"). usrdef.outliersDate vector defining outliers' date. dates characters format \"YYYY-MM-DD\". E.g.: usrdef.outliersDate= c(\"2009-10-01\",\"2005-02-01\",\"2003-04-01\"). usrdef.outliersCoef vector providing fixed coefficients outliers. coefficients fixed parameter  transform.function set \"Auto\" (.e. series transformation needs pre-defined.) E.g.: usrdef.outliersCoef= c(200,170,20). Control variables user-defined variables: usrdef.varEnabled logical TRUE, program uses user-defined variables. usrdef.var time series (ts) matrix time series (mts) containing user-defined variables. usrdef.varType vector character(s) defining user-defined variables component type. Possible types : \"Undefined\", \"Series\", \"Trend\", \"Seasonal\", \"SeasonallyAdjusted\", \"Irregular\", \"Calendar\". use user-defined calendar regressors, type \"Calendar\" must defined conjunction tradingdays.option = \"UserDefined\". Otherwise, program automatically set usrdef.varType = \"Undefined\". usrdef.varCoef vector providing fixed coefficients user-defined variables. coefficients fixed  transform.function set \"Auto\" (.e. series transformation needs pre-defined). tradingdays.mauto defines whether calendar effects added model manually (\"Unused\") automatically. automatic selection, choice number calendar variables can based F-Test (\"FTest\") Wald Test (\"WaldTest\"); model higher F value chosen, provided higher tradingdays.pftd). tradingdays.pftd numeric. p-value used test specified automatic parameter (tradingdays.mauto) assess significance pre-tested calendar effects variables whether included RegArima model. Control variables manual selection calendar effects variables (tradingdays.mauto set \"Unused\"): tradingdays.option choose trading days regression variables: \"TradingDays\" =  six day---week regression variables; \"WorkingDays\" = one working/non-working day contrast variable; \"None\" = correction trading days working days effects; \"UserDefined\" = user-defined trading days regressors (regressors must defined usrdef.var argument usrdef.varType set \"Calendar\" usrdef.varEnabled = TRUE). \"None\" must also chosen \"day--week effects\" correction (tradingdays.stocktd must modified accordingly). tradingdays.leapyear logical. Specifies leap-year correction included. TRUE, model includes leap-year effect. tradingdays.stocktd numeric indicating day month inventories stock reported (denote last day month set variable 31). Modifications variable taken account tradingdays.option set \"None\". tradingdays.test defines pre-tests trading day effects: \"None\" = calendar variables used model without pre-testing; \"Separate_T\" = t-test applied trading day variable separately trading day variables included RegArima model least one t-statistic greater 2.6 two t-statistics greater 2.0 (absolute terms); \"Joint_F\" = joint F-test significance trading day variables. trading day effect significant F statistic greater 0.95. easter.type acharacter specifies presence length Easter effect: \"Unused\" = Easter effect considered; \"Standard\" = influences period n days strictly Easter Sunday; \"IncludeEaster\" = influences entire period (n) including Easter Sunday; \"IncludeEasterMonday\" = influences entire period (n) including Easter Monday. easter.julian logical. TRUE, program uses Julian Easter (expressed Gregorian calendar). easter.duration numeric indicating duration Easter effect (length days, 1 15). easter.test logical. TRUE, program performs t-test significance Easter effect. Easter effect considered significant modulus t-statistic greater 1.96. outlier.enabled logical. TRUE, automatic detection outliers enabled defined time span. time span series searched outliers controlled following six variables: outlier., outlier., outlier.first, outlier.last, outlier.exclFirst outlier.exclLast; outlier.outlier.priority remaining span control variables, outlier.last outlier.first priority outlier.exclFirst outlier.exclLast, outlier.last priority outlier.first. outlier.character format \"YYYY-MM-DD\" indicating start time span (e.g. \"1900-01-01\"). can combined outlier.. outlier.character format \"YYYY-MM-DD\" indicating end time span (e.g. \"2020-12-31\"). can combined outlier.. outlier.first numeric specifying number periods considered beginning series. outlier.last numeric specifying number periods considered end series. outlier.exclFirst numeric specifying number periods excluded beginning series. can combined outlier.exclLast. outlier.exclLast numeric specifying number periods excluded end series. can combined outlier.exclFirst. outlier.ao logical. TRUE, automatic detection additive outliers enabled (outlier.enabled must also set TRUE). outlier.tc logical. TRUE, automatic detection transitory changes enabled (outlier.enabled must also set TRUE). outlier.ls logical. TRUE, automatic detection level shifts enabled (outlier.enabled must also set TRUE). outlier.logical. TRUE, automatic detection seasonal outliers enabled (outlier.enabled must also set TRUE). outlier.usedefcv logical. TRUE, critical value outliers' detection procedure automatically determined number observations outlier detection time span. FALSE, procedure uses entered critical value (outlier.cv). outlier.cv numeric. entered critical value outliers' detection procedure. modification variable taken account outlier.usedefcv set FALSE. outlier.eml logical exact likelihood estimation method. controls method applied parameter estimation intermediate steps automatic detection correction outliers. TRUE, exact likelihood estimation method used. FALSE, fast Hannan-Rissanen method used. outlier.tcrate numeric. rate decay transitory change outlier. automdl.enabled logical. TRUE, automatic modelling ARIMA model enabled. FALSE, parameters ARIMA model can specified. Control variables automatic modelling ARIMA model (automdl.enabled set TRUE): automdl.acceptdefault logical. TRUE, default model (ARIMA(0,1,1)(0,1,1)) may chosen first step automatic model identification. Ljung-Box Q statistics residuals acceptable, default model accepted attempt made identify another model. automdl.cancel numeric, cancellation limit. difference moduli AR MA roots (estimating ARIMA(1,0,1)(1,0,1) models second step automatic identification differencing orders) smaller cancellation limit, two roots assumed equal canceled . automdl.ub1 numeric, first unit root limit. threshold value initial unit root test automatic differencing procedure. one roots estimation ARIMA(2,0,0)(1,0,0) plus mean model, performed first step automatic model identification procedure, larger first unit root limit modulus, set equal unity. automdl.ub2 numeric, second unit root limit. one roots estimation ARIMA(1,0,1)(1,0,1) plus mean model, performed second step automatic model identification procedure, larger second unit root limit modulus, checked common factor corresponding AR MA polynomials ARMA model can canceled (see automdl.cancel). cancellation, AR root set equal unity (.e. differencing order changes). automdl.armalimit numeric, arma limit. threshold value t-statistics ARMA coefficients constant term used final test model parsimony. highest order ARMA coefficient t-value smaller value magnitude, order model reduced. constant term t-value smaller ARMA limit magnitude, removed set regressors. automdl.reducecv numeric, ReduceCV. percentage outlier critical value reduced identified model found Ljung-Box statistic unacceptable confidence coefficient. parameter 0 1, active automatic outlier identification enabled. reduced critical value set (1-ReduceCV)xCV, CV original critical value. automdl.ljungboxlimit numeric, Ljung Box limit, setting acceptance criterion confidence intervals Ljung-Box Q statistic. LjungBox Q statistics residuals final model greater Ljung Box limit, model rejected, outlier critical value reduced, model outlier identification (specified) redone reduced value. automdl.compare logical. TRUE, program compares model identified automatic procedure default model (ARIMA(0,1,1)(0,1,1)) model best fit selected. Criteria considered residual diagnostics, model structure number outliers. Control variables non-automatic modelling ARIMA model (automdl.enabled set FALSE): arima.mu logical. TRUE, mean considered part ARIMA model. arima.p numeric. order non-seasonal autoregressive (AR) polynomial. arima.d numeric. regular differencing order. arima.q numeric. order non-seasonal moving average (MA) polynomial. arima.bp numeric. order seasonal autoregressive (AR) polynomial. arima.bd numeric. seasonal differencing order. arima.bq numeric. order seasonal moving average (MA) polynomial. Control variables user-defined ARMA coefficients. coefficients can defined regular seasonal autoregressive (AR) polynomials moving average (MA) polynomials. model considers coefficients procedure estimation (arima.coefType) provided, number provided coefficients matches sum (regular seasonal) AR MA orders (p,q,bp,bq). arima.coefEnabled logical. TRUE, program uses user-defined ARMA coefficients. arima.coef vector providing coefficients regular seasonal AR MA polynomials. length vector must equal sum regular seasonal AR MA orders. coefficients shall provided following order: regular AR (Phi - p elements), regular MA  (Theta - q elements), seasonal AR (BPhi - bp elements) seasonal MA (BTheta - bq elements). E.g.: arima.coef=c(0.6,0.7) arima.p=1, arima.q=0,arima.bp=1 arima.bq=0. arima.coefType avector defining ARMA coefficients estimation procedure. Possible procedures : \"Undefined\" = use user-defined input (.e. coefficients estimated), \"Fixed\" = fixes coefficients value provided user, \"Initial\" = value defined user used initial condition. orders coefficients shall defined, arima.coef can set NA 0 arima.coefType can set \"Undefined\". E.g.: arima.coef = c(-0.8,-0.6,NA), arima.coefType = c(\"Fixed\",\"Fixed\",\"Undefined\"). fcst.horizon numeric, forecasting horizon. length forecasts generated RegARIMA model periods (positive values) years (negative values). default, program generates two years forecasts (fcst.horizon set -2).","code":""},{"path":"/reference/regarima_spec_tramoseats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RegARIMA model specification, pre-adjustment in TRAMO-SEATS — regarima_spec_tramoseats","text":"list class c(\"regarima_spec\",\"TRAMO_SEATS\") following components, referring different part RegARIMA model specification, mirroring arguments function (details, see arguments description). lowest-level component (except span, pre-specified outliers, user-defined variables pre-specified ARMA coefficients) structured within data frame columns denoting different variables model specification rows referring : first row = base specification, provided within argument spec; second row = user modifications specified remaining arguments function (e.g.: arima.d); third row = final model specification, values used function regarima. final specification (third row) shall include user modifications (row two) unless wrongly specified. pre-specified outliers, user-defined variables pre-specified ARMA coefficients consist list Predefined (base model specification) Final values. estimate data frame containing Variables referring : span - time span used estimation, tolerance - argument estimate.tol, exact_ml - argument estimate.eml, urfinal - argument esimate.urfinal. final values can also accessed function s_estimate. transform data frame containing variables referring : tfunction - argument transform.function, fct - argument transform.fct. final values can also accessed function s_transform. regression list containing information user-defined variables (userdef), trading.days effect easter effect. user-defined part includes: specification - data frame information pre-specified outliers (outlier) user-defined variables (variables) included model fixed coefficients used (outlier.coef variables.coef). final values can also accessed function s_usrdef; outliers - matrixes outliers (Predefined Final). final outliers can also accessed function s_preOut; variables - list Predefined Final user-defined variables (series) description (description) including information variable type values fixed coefficients. final user-defined variables can also accessed function s_preVar. trading.days data frame variables refer : automatic - argument tradingdays.mauto, pftd - argument tradingdays.pftd, option - argument tradingdays.option, leapyear - argument tradingdays.leapyear, stocktd - argument tradingdays.stocktd, test - argument tradingdays.test. final trading.days values can also accessed function s_td. easter data frame variables refer : type - argument easter.type, julian - argument easter.julian, duration - argument easter.duration, test - argument easter.test. final easter values can also accessed function s_easter. outliers data frame. Variables referring : ao - argument outlier.ao, tc - argument outlier.tc, ls - argument outlier.ls, - argument outlier., usedefcv - argument outlier.usedefcv, cv - argument outlier.cv, eml - argument outlier.eml, tcrate - argument outlier.tcrate. final values can also accessed function s_out. arima list containing data frame ARIMA settings (specification) matrices giving information pre-specified ARMA coefficients (coefficients). matrix Predefined refers pre-defined model specification matrix Final, final specification. matrices contain values ARMA coefficients procedure estimation. data frame specification, variable enabled refers argument automdl.enabled remaining variables (automdl.acceptdefault, automdl.cancel, automdl.ub1, automdl.ub2, automdl.armalimit, automdl.reducecv, automdl.ljungboxlimit, automdl.compare, arima.mu, arima.p, arima.d, arima.q, arima.bp, arima.bd, arima.bq), respective function arguments. final values specification can also accessed function s_arima, final pre-specified ARMA coefficients function s_arimaCoef. forecast data frame forecasting horizon (argument fcst.horizon). final value can also accessed function s_fcst. span matrix containing final time span model estimation outliers' detection. contains information variable span data frames estimate outliers. matrix can also accessed function s_span.","code":""},{"path":"/reference/regarima_spec_tramoseats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RegARIMA model specification, pre-adjustment in TRAMO-SEATS — regarima_spec_tramoseats","text":"available predefined 'JDemetra+' model specifications described table :","code":""},{"path":"/reference/regarima_spec_tramoseats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RegARIMA model specification, pre-adjustment in TRAMO-SEATS — regarima_spec_tramoseats","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":"/reference/regarima_spec_tramoseats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RegARIMA model specification, pre-adjustment in TRAMO-SEATS — regarima_spec_tramoseats","text":"","code":"# \\donttest{ myseries <- ipi_c_eu[, \"FR\"] myspec1 <- regarima_spec_tramoseats(spec = \"TRfull\") myreg1 <- regarima(myseries, spec = myspec1)   # To modify a pre-specified model specification myspec2 <- regarima_spec_tramoseats(spec = \"TRfull\",              tradingdays.mauto = \"Unused\",              tradingdays.option = \"WorkingDays\",              easter.type = \"Standard\",              automdl.enabled = FALSE, arima.mu = TRUE) myreg2 <- regarima(myseries, spec = myspec2)   # To modify the model specification of a \"regarima\" object myspec3 <- regarima_spec_tramoseats(myreg1,              tradingdays.mauto = \"Unused\",              tradingdays.option = \"WorkingDays\",              easter.type = \"Standard\", automdl.enabled = FALSE,              arima.mu = TRUE) myreg3 <- regarima(myseries, myspec3)   # To modify the model specification of a \"regarima_spec\" object myspec4 <- regarima_spec_tramoseats(myspec1,              tradingdays.mauto = \"Unused\",              tradingdays.option = \"WorkingDays\",              easter.type = \"Standard\",              automdl.enabled = FALSE, arima.mu = TRUE) myreg4 <- regarima(myseries, myspec4)   # Pre-specified outliers myspec1 <- regarima_spec_tramoseats(spec = \"TRfull\",              usrdef.outliersEnabled = TRUE,              usrdef.outliersType = c(\"LS\", \"LS\"),              usrdef.outliersDate = c(\"2008-10-01\" ,\"2003-01-01\"),              usrdef.outliersCoef = c(10, -8), transform.function = \"None\") s_preOut(myspec1) #>   type       date coeff #> 1   LS 2008-10-01    10 #> 2   LS 2003-01-01    -8 myreg1 <- regarima(myseries, myspec1) myreg1 #> y = regression model + arima (2, 1, 0, 1, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)      0.4872      0.051 #> Phi(2)      0.2964      0.051 #> BPhi(1)    -0.2070      0.071 #> BTheta(1)  -0.8048      0.044 #>  #>              Estimate Std. Error #> Week days      0.6814      0.039 #> Leap year      1.9125      0.726 #> Easter [6]    -2.4901      0.461 #> TC (4-2020)  -22.4492      2.288 #> TC (3-2020)  -21.2013      2.296 #> AO (5-2011)   12.6414      1.908 #> LS (11-2008) -14.2909      1.954 #>  #> Fixed outliers:  #>              Coefficients #> LS (10-2008)           10 #> LS (1-2003)            -8 #>  #>  #> Residual standard error: 2.421 on 347 degrees of freedom #> Log likelihood = -831.3, aic =  1687 aicc =  1688, bic(corrected for length) = 1.949 #>  s_preOut(myreg1) #>   type       date coeff #> 1   LS 2008-10-01    10 #> 2   LS 2003-01-01    -8    # User-defined variables var1 <- ts(rnorm(length(myseries))*10, start = start(myseries),            frequency = 12) var2 <- ts(rnorm(length(myseries))*100, start = start(myseries),            frequency = 12) var <- ts.union(var1, var2)  myspec1 <- regarima_spec_tramoseats(spec = \"TRfull\",             usrdef.varEnabled = TRUE, usrdef.var = var) s_preVar(myspec1) #> $series #>                 var1        var2 #> Jan 1990 -10.3377324  -88.564860 #> Feb 1990  -1.5597667    4.923707 #> Mar 1990  -0.4640064   18.556122 #> Apr 1990  -9.5362873  -60.865779 #> May 1990   4.1626080  -73.110285 #> Jun 1990   1.1402961  271.514421 #> Jul 1990   0.6391875 -133.938704 #> Aug 1990  -9.1933224  -64.601525 #> Sep 1990   9.0133529  -93.245461 #> Oct 1990  -7.9772830  -76.908693 #> Nov 1990   6.6822120   37.157978 #> Dec 1990   1.5521430   35.543278 #> Jan 1991   1.2868809  -98.399849 #> Feb 1991 -15.3306545   21.472959 #> Mar 1991   2.0236067   -8.008508 #> Apr 1991  -7.1753865 -142.236955 #> May 1991   3.6169476  110.814896 #> Jun 1991  13.9900429  107.847764 #> Jul 1991   3.7269896  -44.025034 #> Aug 1991 -15.6564429  -77.816901 #> Sep 1991  -0.5169454 -181.859001 #> Oct 1991   5.1408210 -112.408090 #> Nov 1991   5.4989952  106.052384 #> Dec 1991   8.6781691 -147.870016 #> Jan 1992   6.8436008 -155.156017 #> Feb 1992  -1.6267998   77.750668 #> Mar 1992 -17.8436472  106.844014 #> Apr 1992 -10.3714557  -18.358770 #> May 1992   8.3014772  155.824293 #> Jun 1992   6.0734694  -21.324238 #> Jul 1992  -1.2218636   93.053526 #> Aug 1992   9.3312514   41.081180 #> Sep 1992  -9.6127668 -127.984430 #> Oct 1992   2.5508171  -78.236663 #> Nov 1992  -5.4540157 -227.608345 #> Dec 1992   9.3036074  -12.639591 #> Jan 1993  -5.3765056  144.814671 #> Feb 1993  -4.5242607 -144.275737 #> Mar 1993  -4.3929097  146.718718 #> Apr 1993  -6.1622311  -74.329990 #> May 1993   4.4163455  -30.422384 #> Jun 1993   4.8259745   33.765806 #> Jul 1993   5.4214438  -60.750209 #> Aug 1993 -22.9078465  -29.556027 #> Sep 1993   3.1035185  -13.453714 #> Oct 1993  14.0407898   81.478437 #> Nov 1993  13.7711764  -27.292173 #> Dec 1993  10.6039565  215.948580 #> Jan 1994   6.3217289  109.173757 #> Feb 1994  10.8492804   74.338485 #> Mar 1994  13.5645944 -120.785935 #> Apr 1994   3.6242404   32.781805 #> May 1994  21.6934446  -53.416511 #> Jun 1994   1.3913051  128.394672 #> Jul 1994  13.7632653    2.893134 #> Aug 1994  -4.9144999  -39.567707 #> Sep 1994  15.3491576  -69.486833 #> Oct 1994  -4.1619872 -149.208070 #> Nov 1994  -5.2054380  144.425724 #> Dec 1994   8.5058387  -34.701739 #> Jan 1995   3.3449657   -4.025917 #> Feb 1995  -8.2935177  124.663211 #> Mar 1995  -2.1869594 -134.630152 #> Apr 1995 -15.4508372  -57.390128 #> May 1995   2.3322978  -70.595925 #> Jun 1995   0.3106964 -185.740454 #> Jul 1995   3.5786565  -24.697048 #> Aug 1995  16.0862422  -33.556093 #> Sep 1995  14.2985426  -24.937687 #> Oct 1995  -9.4833964   45.952256 #> Nov 1995  10.1570554  -46.007548 #> Dec 1995   0.3773461    5.893280 #> Jan 1996 -17.4423940  -74.259108 #> Feb 1996  -9.7007381 -216.357400 #> Mar 1996  -2.2902736  -23.289649 #> Apr 1996  -9.7484568   87.490683 #> May 1996  26.9237242  -97.349403 #> Jun 1996  13.9239386  -51.274686 #> Jul 1996  13.6007615  -92.348799 #> Aug 1996  -3.6541588 -149.442573 #> Sep 1996  -8.6893720  -16.593036 #> Oct 1996  -5.0655673  158.223832 #> Nov 1996  12.1470730  101.460227 #> Dec 1996   5.0695868 -114.647834 #> Jan 1997 -20.9497131  -90.984911 #> Feb 1997   0.3407924  310.918268 #> Mar 1997   8.5272870 -106.955277 #> Apr 1997   7.4322814  -70.010952 #> May 1997   5.5715361  -19.844447 #> Jun 1997 -12.4858322   74.362012 #> Jul 1997  -2.0787431   -5.015977 #> Aug 1997   4.2396946  131.314355 #> Sep 1997  -5.0669744    8.601352 #> Oct 1997  -6.1152331  -62.985137 #> Nov 1997  24.1165945   65.507033 #> Dec 1997  -1.6495814    1.939355 #> Jan 1998  -4.4040605   69.626996 #> Feb 1998   5.2197617  200.886989 #> Mar 1998 -19.1832225   -5.697828 #> Apr 1998 -19.8264996   24.041550 #> May 1998   5.2120016   -2.189017 #> Jun 1998   7.7778320  -83.080816 #> Jul 1998  -8.1211887  140.247432 #> Aug 1998   9.1074832  -72.386911 #> Sep 1998   9.4875395  133.058037 #> Oct 1998 -13.4804945  -81.133302 #> Nov 1998   3.5417586  179.503611 #> Dec 1998   5.3026393   68.662633 #> Jan 1999  -3.1097493    8.937800 #> Feb 1999  -2.4415553   32.454774 #> Mar 1999  -2.9187819    7.131812 #> Apr 1999 -11.2808616   23.304838 #> May 1999 -11.2288159  198.637658 #> Jun 1999  20.5393864  -95.167079 #> Jul 1999  -9.0951843  -55.864232 #> Aug 1999   4.5837916   25.581454 #> Sep 1999  -0.4661845  -19.807617 #> Oct 1999  -6.8095460   42.878914 #> Nov 1999 -14.8882940    7.077011 #> Dec 1999  -3.9251301 -153.665380 #> Jan 2000 -17.4968202   45.398437 #> Feb 2000  -0.3866763   87.439857 #> Mar 2000  -7.9715324 -129.773757 #> Apr 2000  -9.1592054 -107.896524 #> May 2000   0.7326746 -113.484994 #> Jun 2000  12.3817132    2.261431 #> Jul 2000   7.1837134   -2.146122 #> Aug 2000   5.3946650  -27.877244 #> Sep 2000 -10.6123399   -2.420641 #> Oct 2000  -5.4073787   82.502030 #> Nov 2000  -7.1520471  -75.018278 #> Dec 2000  -1.7892009   53.621047 #> Jan 2001   1.6497028 -157.271748 #> Feb 2001  -7.2740817  -98.642742 #> Mar 2001  -5.3783713  198.351232 #> Apr 2001  -5.9966490 -185.137844 #> May 2001  11.8208775  -90.978818 #> Jun 2001   1.8921288 -195.144002 #> Jul 2001   2.4894911  -80.027646 #> Aug 2001  10.4664341 -186.936160 #> Sep 2001 -12.8930094  -75.057148 #> Oct 2001   3.7511557  -59.093839 #> Nov 2001  -5.5691839  -74.209927 #> Dec 2001   3.0242663   69.351208 #> Jan 2002   2.2226647   -5.946397 #> Feb 2002  -9.6216696 -186.389510 #> Mar 2002   0.5203237 -127.450892 #> Apr 2002   9.0004038 -178.177081 #> May 2002  -3.9490088  -50.859339 #> Jun 2002   9.5414600 -173.687829 #> Jul 2002  -5.8821435    4.048130 #> Aug 2002 -14.7658453  -12.417946 #> Sep 2002 -13.7777577  -61.275343 #> Oct 2002 -13.4567231   16.066248 #> Nov 2002  -7.3663796  -66.235963 #> Dec 2002  -4.7011150  -33.485166 #> Jan 2003  13.8060934   62.301159 #> Feb 2003  16.7501093  102.819429 #> Mar 2003  11.7690663 -113.457824 #> Apr 2003  -1.4889834   91.691105 #> May 2003  -1.7782336  121.387479 #> Jun 2003   8.0312186  -68.593246 #> Jul 2003  -4.1579535 -109.456819 #> Aug 2003  12.1248959   36.487410 #> Sep 2003  12.4036003 -100.801708 #> Oct 2003   6.8567588   55.499644 #> Nov 2003  -0.2679868   43.606592 #> Dec 2003   3.0958051   10.537330 #> Jan 2004   2.4986433  -25.373785 #> Feb 2004 -13.5646087  -97.649123 #> Mar 2004   5.9937977   39.421777 #> Apr 2004   0.0864779  101.490303 #> May 2004   0.9071661   63.144381 #> Jun 2004  -6.5705741  -48.339825 #> Jul 2004  -4.8178225 -152.633394 #> Aug 2004   0.1775788   61.684228 #> Sep 2004  -8.5953576  122.928684 #> Oct 2004  13.5770498   15.745303 #> Nov 2004  12.1506118  140.634206 #> Dec 2004  14.5391292   39.680092 #> Jan 2005  -0.8591198   32.642296 #> Feb 2005  -6.1756875 -145.934331 #> Mar 2005  -2.1826025  -79.929553 #> Apr 2005 -13.2600521   47.001280 #> May 2005 -23.6220890 -115.018052 #> Jun 2005 -14.0996955  -27.159672 #> Jul 2005   2.5439714   45.742422 #> Aug 2005   2.9587030   -1.695794 #> Sep 2005   0.5678979  -54.159436 #> Oct 2005  -1.0265486   87.581342 #> Nov 2005  19.5192303   74.083815 #> Dec 2005   8.7856596  -16.481239 #> Jan 2006 -13.0661693  -75.096428 #> Feb 2006   0.9034427 -125.336629 #> Mar 2006   9.0235804 -103.623626 #> Apr 2006   5.4942132   -2.943857 #> May 2006  -8.6983920  -27.494378 #> Jun 2006  -0.3921465   48.545147 #> Jul 2006  -5.1845168   91.698203 #> Aug 2006  -9.1184962  -98.534392 #> Sep 2006   1.5031364 -149.118975 #> Oct 2006   4.4035545   81.959245 #> Nov 2006  13.1978206  101.340453 #> Dec 2006   2.4656113  105.360525 #> Jan 2007   9.4182660   -7.142864 #> Feb 2007  -3.4215133   95.244461 #> Mar 2007  -2.7614681  -38.403752 #> Apr 2007   3.8365678  -41.775999 #> May 2007  14.4691022  -47.026817 #> Jun 2007  17.3390029 -169.018029 #> Jul 2007   4.5642938  -94.549766 #> Aug 2007   7.0750349  -34.301196 #> Sep 2007  20.6378922   35.846241 #> Oct 2007   0.2391059    4.818886 #> Nov 2007   2.4594946  113.017228 #> Dec 2007   2.7205914  -52.763231 #> Jan 2008  -9.9245858   47.957533 #> Feb 2008  -0.2757795  141.752930 #> Mar 2008  22.2284516   -8.009077 #> Apr 2008   1.5550390  -39.418700 #> May 2008  -8.6911632   52.525764 #> Jun 2008 -11.7448945  -79.593510 #> Jul 2008 -17.5967731   24.509645 #> Aug 2008   0.5836159  -77.931984 #> Sep 2008  11.6451986   59.492387 #> Oct 2008   3.3762789  110.889090 #> Nov 2008 -10.5451872  -94.296903 #> Dec 2008   6.6076911   70.034399 #> Jan 2009  -8.2340900  -42.467483 #> Feb 2009   4.3703366 -114.313760 #> Mar 2009   3.7238811   23.344022 #> Apr 2009 -16.4674913  -18.923658 #> May 2009 -19.2355227 -166.341126 #> Jun 2009   3.8083303  191.569077 #> Jul 2009  13.7570535  -81.689444 #> Aug 2009   8.2584873   38.365049 #> Sep 2009  -4.1611500  -45.863225 #> Oct 2009   9.8214959  -71.570398 #> Nov 2009   2.4218073   42.954854 #> Dec 2009  -9.3792685 -116.985274 #> Jan 2010  15.0585850  132.208831 #> Feb 2010 -10.6585117  136.596464 #> Mar 2010   1.6227053  -24.972371 #> Apr 2010   2.6047039  -42.472135 #> May 2010 -14.8820199  109.843934 #> Jun 2010  14.1518387   67.092304 #> Jul 2010   5.6250751    3.095466 #> Aug 2010   6.4205574  236.851196 #> Sep 2010  -8.9053264  258.578811 #> Oct 2010  -1.1653752  121.228095 #> Nov 2010  -9.4197475 -125.119684 #> Dec 2010  11.1582792   40.026604 #> Jan 2011   4.7013513   93.470763 #> Feb 2011   8.6061271  -47.266985 #> Mar 2011  -0.7039665  158.301322 #> Apr 2011  -6.1318021   59.775422 #> May 2011  -3.3671496   46.608459 #> Jun 2011  -2.1584018  -74.436754 #> Jul 2011   6.2113229   95.905526 #> Aug 2011 -12.8402652   15.263708 #> Sep 2011 -13.0009244  -76.936870 #> Oct 2011  -3.7676946  139.308074 #> Nov 2011   1.0374865   91.866877 #> Dec 2011  -7.0356227  101.608706 #> Jan 2012  14.9741394   53.463544 #> Feb 2012  -3.0282688  -98.762856 #> Mar 2012 -13.7683133  118.779227 #> Apr 2012   8.8317017  -51.754221 #> May 2012   6.7142028  -25.956025 #> Jun 2012  12.3002238  -32.806467 #> Jul 2012  16.4546788    7.343239 #> Aug 2012  -1.8292604  -24.786302 #> Sep 2012 -13.7925781 -137.386226 #> Oct 2012  12.5060060   -4.044582 #> Nov 2012 -18.7623677   42.153824 #> Dec 2012  -3.6878757   20.159751 #> Jan 2013 -21.2929731 -169.719192 #> Feb 2013   3.3764603   64.228768 #> Mar 2013 -15.7457485  -99.523961 #> Apr 2013  -1.9631941   96.381390 #> May 2013   9.1506011 -165.603723 #> Jun 2013  10.7863654  107.086109 #> Jul 2013  14.5280285  -10.902636 #> Aug 2013 -16.5328109  189.918639 #> Sep 2013 -27.6186752 -113.703073 #> Oct 2013   2.6436916  -27.971976 #> Nov 2013  10.2457159  -89.412905 #> Dec 2013  -6.5918555   13.670185 #> Jan 2014  -3.8630438  -74.916542 #> Feb 2014  -2.4249895   51.819908 #> Mar 2014   2.2059324  -19.233721 #> Apr 2014 -14.8109003    2.880981 #> May 2014   7.2469120   35.859089 #> Jun 2014 -23.7751470   -2.899503 #> Jul 2014  -0.6540921  114.704207 #> Aug 2014  -4.6970481   37.358894 #> Sep 2014  -2.8051629   32.333921 #> Oct 2014   5.7483659  -82.981932 #> Nov 2014  -2.0567685  139.446258 #> Dec 2014   2.3488051  -19.154358 #> Jan 2015   1.1062832   27.227702 #> Feb 2015   2.7420223 -108.165901 #> Mar 2015  15.7491963 -232.939936 #> Apr 2015   5.6776783  -54.962596 #> May 2015  -0.5961225   -7.257999 #> Jun 2015  -1.4958771  103.228840 #> Jul 2015   2.6616879   21.513853 #> Aug 2015   5.2840324  -49.434012 #> Sep 2015  -5.7938809  151.213828 #> Oct 2015   9.4219937  -57.946326 #> Nov 2015  -7.0636136  167.478963 #> Dec 2015 -12.7540210 -100.098026 #> Jan 2016   7.3325992  122.270284 #> Feb 2016  -4.2020709  107.718817 #> Mar 2016  -2.5537509  -61.194546 #> Apr 2016  -3.6923822   50.686697 #> May 2016  12.1244833   46.006837 #> Jun 2016  -4.4536301  148.439186 #> Jul 2016  11.3866752   88.196323 #> Aug 2016   1.9052348  -53.670224 #> Sep 2016 -13.6639361  128.555371 #> Oct 2016 -12.9810260   58.784853 #> Nov 2016 -21.3709831 -130.848203 #> Dec 2016  -0.9620553   31.672632 #> Jan 2017   6.9450905  119.415830 #> Feb 2017  -4.7459123   91.305715 #> Mar 2017  17.6313061  -78.675299 #> Apr 2017  20.2584606  -41.092970 #> May 2017   4.2761881   47.637368 #> Jun 2017  -5.6647935   18.591587 #> Jul 2017  -8.3383531 -132.471625 #> Aug 2017   3.9825915  117.237106 #> Sep 2017 -14.7453793   23.149277 #> Oct 2017  -3.9544120   48.307190 #> Nov 2017  -1.3070247  -53.531958 #> Dec 2017 -19.9949395  137.813582 #> Jan 2018  -9.9593086 -130.267167 #> Feb 2018   4.2011400   63.485754 #> Mar 2018  -0.6286163   99.965516 #> Apr 2018  -0.8013185  -33.774895 #> May 2018  -0.3228341   -8.603361 #> Jun 2018  -7.1898093 -171.881758 #> Jul 2018 -11.1656132  -92.912157 #> Aug 2018  -7.8026990   81.367605 #> Sep 2018 -17.7695853   52.641355 #> Oct 2018  -4.2783487  101.195739 #> Nov 2018 -20.3102701   83.137981 #> Dec 2018  27.5076475   41.513414 #> Jan 2019  15.1366972  -66.125706 #> Feb 2019   0.3398894   54.881129 #> Mar 2019   7.4079278  -53.936780 #> Apr 2019 -12.7080818  -17.131843 #> May 2019  -1.6356423  -76.673461 #> Jun 2019  -6.1094549  -60.657485 #> Jul 2019  12.5188419  164.731282 #> Aug 2019   2.5031947   84.106935 #> Sep 2019 -17.0558168   33.817510 #> Oct 2019  -8.5541313  -40.488308 #> Nov 2019  -1.4490163   90.000904 #> Dec 2019  -3.2444696  119.066666 #> Jan 2020  -1.7256490   -4.753908 #> Feb 2020 -12.3606292   78.692542 #> Mar 2020 -19.0230421  116.668411 #> Apr 2020  -0.9450402  -27.182387 #> May 2020   0.3255579  -31.370428 #> Jun 2020   4.6129012  -28.630015 #> Jul 2020  13.8140030  -80.344026 #> Aug 2020  -4.1647627   -9.455546 #> Sep 2020   6.8094267   -7.404651 #> Oct 2020  -4.1437304   71.449068 #> Nov 2020  -5.1834551   12.471837 #> Dec 2020  -6.8401973  129.659434 #>  #> $description #>           type coeff #> var1 Undefined    NA #> var2 Undefined    NA #>  myreg1 <- regarima(myseries,myspec1)  myspec2 <- regarima_spec_tramoseats(spec = \"TRfull\",              usrdef.varEnabled = TRUE,              usrdef.var = var, usrdef.varCoef = c(17,-1),              transform.function = \"None\") myreg2 <- regarima(myseries, myspec2)   # Pre-specified ARMA coefficients myspec1 <- regarima_spec_tramoseats(spec = \"TRfull\",              arima.coefEnabled = TRUE, automdl.enabled = FALSE,              arima.p = 2, arima.q = 0, arima.bp = 1, arima.bq = 1,              arima.coef = c(-0.12, -0.12, -0.3, -0.99),              arima.coefType = rep(\"Fixed\", 4)) myreg1 <- regarima(myseries, myspec1) myreg1 #> y = regression model + arima (2, 1, 0, 1, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)       -0.12          0 #> Phi(2)       -0.12          0 #> BPhi(1)      -0.30          0 #> BTheta(1)    -0.99          0 #>  #>                Estimate Std. Error #> Mean          -0.007018      0.029 #> Week days      0.704716      0.029 #> Leap year      2.163501      0.675 #> Easter [6]    -2.360603      0.385 #> TC (4-2020)  -25.280857      2.517 #> TC (3-2020)  -21.581618      2.569 #> AO (5-2011)   14.219490      1.749 #> LS (11-2008)  -6.225300      2.608 #>  #>  #> Residual standard error: 2.712 on 350 degrees of freedom #> Log likelihood = -882.9, aic =  1784 aicc =  1784, bic(corrected for length) = 2.127 #>  summary(myreg1) #> y = regression model + arima (2, 1, 0, 1, 1, 1) #>  #> Model: RegARIMA - TRAMO/SEATS #> Estimation span: from 1-1990 to 12-2020 #> Log-transformation: no #> Regression model: mean, trading days effect(2), leap year effect, Easter effect, outliers(4) #>  #> Coefficients: #> ARIMA:  #>           Estimate Std. Error T-stat Pr(>|t|) #> Phi(1)       -0.12       0.00     NA       NA #> Phi(2)       -0.12       0.00     NA       NA #> BPhi(1)      -0.30       0.00     NA       NA #> BTheta(1)    -0.99       0.00     NA       NA #>  #> Regression model:  #>                Estimate Std. Error  T-stat Pr(>|t|)     #> Mean          -0.007018   0.028698  -0.245  0.80694     #> Week days      0.704716   0.029477  23.907  < 2e-16 *** #> Leap year      2.163501   0.675295   3.204  0.00148 **  #> Easter [6]    -2.360603   0.384746  -6.135 2.24e-09 *** #> TC (4-2020)  -25.280857   2.517080 -10.044  < 2e-16 *** #> TC (3-2020)  -21.581618   2.569059  -8.401 8.88e-16 *** #> AO (5-2011)   14.219490   1.748501   8.132 6.88e-15 *** #> LS (11-2008)  -6.225300   2.608253  -2.387  0.01751 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #>  #> Residual standard error: 2.712 on 350 degrees of freedom #> Log likelihood = -882.9, aic =  1784, aicc =  1784, bic(corrected for length) = 2.127 #>  s_arimaCoef(myspec1) #>            Type Value #> Phi(1)    Fixed -0.12 #> Phi(2)    Fixed -0.12 #> BPhi(1)   Fixed -0.30 #> BTheta(1) Fixed -0.99 s_arimaCoef(myreg1) #>            Type Value #> Phi(1)    Fixed -0.12 #> Phi(2)    Fixed -0.12 #> BPhi(1)   Fixed -0.30 #> BTheta(1) Fixed -0.99 # }"},{"path":"/reference/regarima_spec_x13.html","id":null,"dir":"Reference","previous_headings":"","what":"RegARIMA model specification: the pre-adjustment in X13 — regarima_spec_x13","title":"RegARIMA model specification: the pre-adjustment in X13 — regarima_spec_x13","text":"Function create (/modify) c(\"regarima_spec\",\"X13\") class object RegARIMA model specification X13 method. object can created predefined 'JDemetra+' model specification  (character), previous specification (c(\"regarima_spec\",\"X13\") object) X13 RegARIMA model (c(\"regarima\",\"X13\")).","code":""},{"path":"/reference/regarima_spec_x13.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RegARIMA model specification: the pre-adjustment in X13 — regarima_spec_x13","text":"","code":"regarima_spec_x13(   spec = c(\"RG5c\", \"RG0\", \"RG1\", \"RG2c\", \"RG3\", \"RG4c\"),   preliminary.check = NA,   estimate.from = NA_character_,   estimate.to = NA_character_,   estimate.first = NA_integer_,   estimate.last = NA_integer_,   estimate.exclFirst = NA_integer_,   estimate.exclLast = NA_integer_,   estimate.tol = NA_integer_,   transform.function = c(NA, \"Auto\", \"None\", \"Log\"),   transform.adjust = c(NA, \"None\", \"LeapYear\", \"LengthOfPeriod\"),   transform.aicdiff = NA_integer_,   usrdef.outliersEnabled = NA,   usrdef.outliersType = NA,   usrdef.outliersDate = NA,   usrdef.outliersCoef = NA,   usrdef.varEnabled = NA,   usrdef.var = NA,   usrdef.varType = NA,   usrdef.varCoef = NA,   tradingdays.option = c(NA, \"TradingDays\", \"WorkingDays\", \"UserDefined\", \"None\"),   tradingdays.autoadjust = NA,   tradingdays.leapyear = c(NA, \"LeapYear\", \"LengthOfPeriod\", \"None\"),   tradingdays.stocktd = NA_integer_,   tradingdays.test = c(NA, \"Remove\", \"Add\", \"None\"),   easter.enabled = NA,   easter.julian = NA,   easter.duration = NA_integer_,   easter.test = c(NA, \"Add\", \"Remove\", \"None\"),   outlier.enabled = NA,   outlier.from = NA_character_,   outlier.to = NA_character_,   outlier.first = NA_integer_,   outlier.last = NA_integer_,   outlier.exclFirst = NA_integer_,   outlier.exclLast = NA_integer_,   outlier.ao = NA,   outlier.tc = NA,   outlier.ls = NA,   outlier.so = NA,   outlier.usedefcv = NA,   outlier.cv = NA_integer_,   outlier.method = c(NA, \"AddOne\", \"AddAll\"),   outlier.tcrate = NA_integer_,   automdl.enabled = NA,   automdl.acceptdefault = NA,   automdl.cancel = NA_integer_,   automdl.ub1 = NA_integer_,   automdl.ub2 = NA_integer_,   automdl.mixed = NA,   automdl.balanced = NA,   automdl.armalimit = NA_integer_,   automdl.reducecv = NA_integer_,   automdl.ljungboxlimit = NA_integer_,   automdl.ubfinal = NA_integer_,   arima.mu = NA,   arima.p = NA_integer_,   arima.d = NA_integer_,   arima.q = NA_integer_,   arima.bp = NA_integer_,   arima.bd = NA_integer_,   arima.bq = NA_integer_,   arima.coefEnabled = NA,   arima.coef = NA,   arima.coefType = NA,   fcst.horizon = NA_integer_ )"},{"path":"/reference/regarima_spec_x13.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RegARIMA model specification: the pre-adjustment in X13 — regarima_spec_x13","text":"spec model specification. can name (character) pre-defined 'JDemetra+' model specification (see Details), object class c(\"regarima_spec\",\"X13\") object class c(\"regarima\", \"X13\"). default value \"RG5c\". preliminary.check Boolean check quality input series exclude highly problematic ones (e.g. series number identical observations /missing values pre-specified threshold values). time span series, (sub)period used estimate regarima model, controlled following six variables: estimate., estimate., estimate.first, estimate.last, estimate.exclFirst estimate.exclLast; estimate.estimate.priority remaining span control variables, estimate.last estimate.first priority estimate.exclFirst estimate.exclLast, estimate.last priority estimate.first. Default= \"\". estimate.character format \"YYYY-MM-DD\" indicating start time span (e.g. \"1900-01-01\"). can combined parameter estimate.. estimate.character format \"YYYY-MM-DD\" indicating end time span (e.g. \"2020-12-31\"). can combined parameter estimate.. estimate.first numeric specifying number periods considered beginning series. estimate.last numeric specifying number periods considered end series. estimate.exclFirst numeric specifying number periods excluded beginning series. can combined parameter estimate.exclLast. estimate.exclLast numeric specifying number periods excluded end series. can combined parameter estimate.exclFirst. estimate.tol numeric, convergence tolerance. absolute changes log-likelihood function compared value check convergence estimation iterations. transform.function transformation input series: \"None\" = transformation series; \"Log\" = takes log series; \"Auto\" = program tests log-level specification. transform.adjust pre-adjustment input series length period leap year effects: \"None\" = adjustment; \"LeapYear\" = leap year effect; \"LengthOfPeriod\" = length period. Modifications variable taken account transform.function set \"Log\". transform.aicdiff numeric defining difference AICC needed accept transformation automatic transformation selection chosen (considered transform.function set \"Auto\"). Control variables pre-specified outliers. pre-specified outliers used model enabled (usrdef.outliersEnabled=TRUE) outlier type (usrdef.outliersType) date (usrdef.outliersDate) provided. usrdef.outliersEnabled logical. TRUE, program uses pre-specified outliers. usrdef.outliersType vector defining outlier type. Possible types : (\"AO\") = additive, (\"LS\") = level shift, (\"TC\") = transitory change, (\"\") = seasonal outlier. E.g.: usrdef.outliersType = c(\"AO\",\"AO\",\"LS\"). usrdef.outliersDate vector defining outlier dates. dates characters format \"YYYY-MM-DD\". E.g.: usrdef.outliersDate= c(\"2009-10-01\",\"2005-02-01\",\"2003-04-01\"). usrdef.outliersCoef vector providing fixed coefficients outliers. coefficients fixed transform.function set \"Auto\" .e. series transformation need pre-defined. E.g.:  usrdef.outliersCoef=c(200,170,20). Control variables user-defined variables: usrdef.varEnabled logical. TRUE, program uses user-defined variables. usrdef.var time series (ts) matrix time series (mts) user-defined variables. usrdef.varType vector character(s) defining user-defined variables component type. Possible types : \"Undefined\", \"Series\", \"Trend\", \"Seasonal\", \"SeasonallyAdjusted\", \"Irregular\", \"Calendar\". type \"Calendar\"must used tradingdays.option = \"UserDefined\" use user-defined calendar regressors. specified, program assign \"Undefined\" type. usrdef.varCoef vector providing fixed coefficients user-defined variables. coefficients fixed transform.function set \"Auto\" .e. series transformation need pre-defined. tradingdays.option specify set trading days regression variables: \"TradingDays\" = six day---week regression variables; \"WorkingDays\" = one working/non-working day contrast variable; \"None\" = correction trading days working days effects; \"UserDefined\" = user-defined trading days regressors (regressors must defined usrdef.var argument usrdef.varType set \"Calendar\" usrdef.varEnabled = TRUE). \"None\" must also specified \"day--week effects\" correction (tradingdays.stocktd modified accordingly). tradingdays.autoadjust logical. TRUE, program corrects automatically leap year effect. Modifications variable taken account transform.function set \"Auto\". tradingdays.leapyear character specify whether include leap-year effect model: \"LeapYear\" = leap year effect; \"LengthOfPeriod\" = length period, \"None\" = effect included. leap-year effect can pre-specified model input series pre-adjusted (transform.adjust set \"None\") automatic correction leap-year effect selected (tradingdays.autoadjust set FALSE). tradingdays.stocktd numeric indicating day month inventories stock reported (denote last day month, set variable 31). Modifications variable taken account tradingdays.option set \"None\". tradingdays.test defines pre-tests significance trading day regression variables based AICC statistics: \"Add\" = trading day variables included initial regression model can added RegARIMA model test; \"Remove\" = trading day variables belong initial regression model can removed RegARIMA model test; \"None\" = trading day variables pre-tested included model. easter.enabled logical. TRUE, program considers Easter effect model. easter.julian logical. TRUE, program uses Julian Easter (expressed Gregorian calendar). easter.duration numeric indicating duration Easter effect (length days, 1 20). easter.test defines pre-tests significance Easter effect based t-statistic (Easter effect considered significant t-statistic greater 1.96): \"Add\" = Easter effect variable included initial regression model can added RegARIMA model test; \"Remove\" = Easter effect variable belongs initial regression model can removed RegARIMA model test; \"None\" = Easter effect variable pre-tested included model. outlier.enabled logical. TRUE, automatic detection outliers enabled defined time span. time span outliers searched controlled following six variables: outlier., outlier., outlier.first, outlier.last, outlier.exclFirst outlier.exclLast; outlier.outlier.priority remaining span control variables, outlier.last outlier.first priority outlier.exclFirst outlier.exclLast, outlier.last priority outlier.first. outlier.character format \"YYYY-MM-DD\" indicating start time span (e.g. \"1900-01-01\"). can combined parameter outlier.. outlier.character format \"YYYY-MM-DD\" indicating end time span (e.g. \"2020-12-31\"). can combined parameter outlier.. outlier.first numeric specifying number periods considered beginning series. outlier.last numeric specifying number periods considered end series. outlier.exclFirst numeric specifying number periods excluded beginning series. can combined parameter outlier.exclLast. outlier.exclLast numeric specifying number periods excluded end series. can combined parameter outlier.exclFirst. outlier.ao logical. TRUE, automatic detection additive outliers enabled (outlier.enabled must also set TRUE). outlier.tc logical. TRUE, automatic detection transitory changes enabled (outlier.enabled must also set TRUE). outlier.ls logical. TRUE, automatic detection level shifts enabled (outlier.enabled must also set TRUE). outlier.logical. TRUE, automatic detection seasonal outliers enabled (outlier.enabled must also set TRUE). outlier.usedefcv logical. TRUE, critical value outlier detection procedure automatically determined number observations outlier detection time span. FALSE, procedure uses entered critical value (outlier.cv). outlier.cv numeric. entered critical value outlier detection procedure. modification variable taken account outlier.usedefcv set FALSE. outlier.method determines program successively adds detected outliers model. present, AddOne method supported. outlier.tcrate numeric. rate decay transitory change outlier. automdl.enabled logical. TRUE, automatic modelling ARIMA model enabled. FALSE, parameters ARIMA model can specified. Control variables automatic modelling ARIMA model (automdl.enabled set TRUE): automdl.acceptdefault logical. TRUE, default model (ARIMA(0,1,1)(0,1,1)) may chosen first step automatic model identification. Ljung-Box Q statistics residuals acceptable, default model accepted attempt made identify another model. automdl.cancel cancellation limit (numeric). difference moduli AR MA roots (estimating ARIMA(1,0,1)(1,0,1) models second step automatic identification differencing orders) smaller cancellation limit, two roots assumed equal cancel . automdl.ub1 first unit root limit (numeric). threshold value initial unit root test automatic differencing procedure. one roots estimation ARIMA(2,0,0)(1,0,0) plus mean model, performed first step automatic model identification procedure, larger first unit root limit modulus, set equal unity. automdl.ub2 second unit root limit (numeric). one roots estimation ARIMA(1,0,1)(1,0,1) plus mean model, performed second step automatic model identification procedure, larger second unit root limit modulus, checked common factor corresponding AR MA polynomials ARMA model can canceled (see automdl.cancel). cancellation, AR root set equal unity (.e. differencing order changes). automdl.mixed logical. variable controls whether ARIMA models non-seasonal AR MA terms seasonal AR MA terms considered automatic model identification procedure. FALSE, model AR MA terms seasonal non-seasonal parts model can acceptable, provided AR MA terms either seasonal non-seasonal terms. automdl.balanced logical. TRUE, automatic model identification procedure preference balanced models (.e. models order combined AR differencing operator equal order combined MA operator). automdl.armalimit ARMA limit (numeric). threshold value t-statistics ARMA coefficients constant term used final test model parsimony. highest order ARMA coefficient t-value smaller value magnitude, order model reduced. constant term t-value smaller ARMA limit magnitude, removed set regressors. automdl.reducecv numeric, ReduceCV. percentage outlier's critical value reduced identified model found Ljung-Box statistic unacceptable confidence coefficient. parameter 0 1, active automatic outlier identification enabled. reduced critical value set (1-ReduceCV)*CV, CV original critical value. automdl.ljungboxlimit Ljung Box limit (numeric). Acceptance criterion confidence intervals Ljung-Box Q statistic. LjungBox Q statistics residuals final model greater Ljung Box limit, model rejected, outlier critical value reduced model outlier identification (specified) redone reduced value. automdl.ubfinal numeric, final unit root limit. threshold value final unit root test. magnitude AR root final model smaller final unit root limit, unit root assumed, order AR polynomial reduced one appropriate order differencing (non-seasonal, seasonal) increased. parameter value greater one. Control variables non-automatic modelling ARIMA model (automdl.enabled set FALSE): arima.mu logical. TRUE, mean considered part ARIMA model. arima.p numeric. order non-seasonal autoregressive (AR) polynomial. arima.d numeric. regular differencing order. arima.q numeric. order non-seasonal moving average (MA) polynomial. arima.bp numeric. order seasonal autoregressive (AR) polynomial. arima.bd numeric. seasonal differencing order. arima.bq numeric. order seasonal moving average (MA) polynomial. Control variables user-defined ARMA coefficients. Coefficients can defined regular seasonal autoregressive (AR) polynomials moving average (MA) polynomials. model considers coefficients procedure estimation (arima.coefType) provided, number provided coefficients matches sum (regular seasonal) AR MA orders (p,q,bp,bq). arima.coefEnabled logical. TRUE, program uses user-defined ARMA coefficients. arima.coef vector providing coefficients regular seasonal AR MA polynomials. vector length must equal sum regular seasonal AR MA orders. coefficients shall provided following order: regular AR (Phi; p elements), regular MA  (Theta; q elements), seasonal AR (BPhi; bp elements) seasonal MA (BTheta; bq elements). E.g.: arima.coef=c(0.6,0.7) arima.p=1, arima.q=0,arima.bp=1 arima.bq=0. arima.coefType vector defining ARMA coefficients estimation procedure. Possible procedures : \"Undefined\" = use user-defined input (.e. coefficients estimated), \"Fixed\" = coefficients fixed value provided user, \"Initial\" = value defined user used initial condition. orders coefficients shall defined, arima.coef can set NA 0, arima.coefType can set \"Undefined\". E.g.: arima.coef = c(-0.8,-0.6,NA), arima.coefType = c(\"Fixed\",\"Fixed\",\"Undefined\"). fcst.horizon forecasting horizon (numeric). forecast length generated RegARIMA model periods (positive values) years (negative values). default, program generates two-year forecast (fcst.horizon set -2).","code":""},{"path":"/reference/regarima_spec_x13.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RegARIMA model specification: the pre-adjustment in X13 — regarima_spec_x13","text":"list class c(\"regarima_spec\",\"X13\") following components, referring different part RegARIMA model specification, mirroring arguments function (details, see arguments description). lowest-level component (except span, pre-specified outliers, user-defined variables pre-specified ARMA coefficients) structured within data frame columns denoting different variables model specification rows referring : first row = base specification, provided within argument spec; second row = user modifications specified remaining arguments function (e.g.: arima.d); third row = final model specification, values used function regarima. final specification (third row) shall include user modifications (row two) unless wrongly specified. pre-specified outliers, user-defined variables pre-specified ARMA coefficients consist list Predefined (base model specification) Final values. estimate data frame. Variables referring : span - time span model estimation, tolerance - argument estimate.tol. final values can also accessed function s_estimate. transform data frame. Variables referring : tfunction - argument transform.function, adjust - argument transform.adjust, aicdiff - argument transform.aicdiff. final values can also accessed function s_transform. regression list containing information user-defined variables (userdef), trading.days effect easter effect. user-defined part includes: specification - data frame information pre-specified outliers (outlier) user-defined variables (variables) included model fixed coefficients used (outlier.coef variables.coef). final values can also accessed function s_usrdef; outliers - matrices outliers (Predefined Final). final outliers can also accessed function s_preOut; variables - list Predefined Final user-defined variables (series) description (description) including information variable type values fixed coefficients. final user-defined variables can also accessed function s_preVar. Within data frame trading.days, variables refer : option - argument tradingdays.option, autoadjust - argument tradingdays.autoadjust, leapyear - argument tradingdays.leapyear, stocktd - argument tradingdays.stocktd, test - argument tradingdays.test. final trading.days values can also accessed function s_td. Within data frame easter variables refer : enabled - argument easter.enabled, julian - argument easter.julian, duration - argument easter.duration, test - argument easter.test. final easter values can also accessed function s_easter. outliers data frame. Variables referring : enabled - argument outlier.enabled, span - time span outlier detection, ao - argument outlier.ao, tc - argument outlier.tc, ls - argument outlier.ls, - argument outlier., usedefcv - argument outlier.usedefcv, cv - argument outlier.cv, method - argument outlier.method, tcrate - argument outlier.tcrate. final values can also accessed function s_out. arima list data frame ARIMA settings (specification) matrices information pre-specified ARMA coefficients (coefficients). matrix Predefined refers pre-defined model specification, matrix Final final specification. matrices contain value ARMA coefficients procedure estimation. data frame specification, variable enabled refers argument automdl.enabled remaining variables (automdl.acceptdefault, automdl.cancel, automdl.ub1, automdl.ub2, automdl.mixed, automdl.balanced, automdl.armalimit, automdl.reducecv, automdl.ljungboxlimit, automdl.ubfinal, arima.mu, arima.p, arima.d, arima.q, arima.bp, arima.bd, arima.bq), respective function arguments. final values specification can also accessed function s_arima final pre-specified ARMA coefficients, function s_arimaCoef. forecast data frame forecast horizon (argument fcst.horizon). final value can also accessed function s_fcst. span matrix containing final time span model estimation outlier detection. contains information variable span data frames estimate outliers. matrix can also accessed function s_span.","code":""},{"path":"/reference/regarima_spec_x13.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RegARIMA model specification: the pre-adjustment in X13 — regarima_spec_x13","text":"available predefined 'JDemetra+' model specifications described table :","code":""},{"path":"/reference/regarima_spec_x13.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RegARIMA model specification: the pre-adjustment in X13 — regarima_spec_x13","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":"/reference/regarima_spec_x13.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RegARIMA model specification: the pre-adjustment in X13 — regarima_spec_x13","text":"","code":"# \\donttest{ myseries <- ipi_c_eu[, \"FR\"] myspec1 <- regarima_spec_x13(spec = \"RG5c\") myreg1 <- regarima(myseries, spec = myspec1)   # To modify a pre-specified model specification myspec2 <- regarima_spec_x13(spec = \"RG5c\",                              tradingdays.option = \"WorkingDays\") myreg2 <- regarima(myseries, spec = myspec2)   # To modify the model specification of a \"regarima\" object myspec3 <- regarima_spec_x13(myreg1, tradingdays.option = \"WorkingDays\") myreg3 <- regarima(myseries, myspec3)   # To modify the model specification of a \"regarima_spec\" object myspec4 <- regarima_spec_x13(myspec1, tradingdays.option = \"WorkingDays\") myreg4 <- regarima(myseries, myspec4)   # Pre-specified outliers myspec1 <- regarima_spec_x13(spec = \"RG5c\", usrdef.outliersEnabled = TRUE,               usrdef.outliersType = c(\"LS\", \"AO\"),               usrdef.outliersDate = c(\"2008-10-01\", \"2002-01-01\"),               usrdef.outliersCoef = c(36, 14),               transform.function = \"None\")  myreg1 <- regarima(myseries, myspec1) myreg1 #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.07859      0.114 #> Phi(2)     0.19792      0.076 #> Theta(1)  -0.48272      0.111 #> BTheta(1) -0.65916      0.043 #>  #>               Estimate Std. Error #> Monday         0.64094      0.228 #> Tuesday        0.81794      0.229 #> Wednesday      1.05374      0.229 #> Thursday       0.06981      0.228 #> Friday         0.93434      0.228 #> Saturday      -1.63686      0.226 #> Leap year      2.11550      0.697 #> Easter [1]    -2.38135      0.451 #> AO (9-2008)   31.95554      2.924 #> LS (9-2008)  -57.04093      2.657 #> TC (4-2020)  -35.62104      2.120 #> AO (3-2020)  -21.00931      2.145 #> AO (5-2011)   13.21877      1.832 #> TC (9-2008)   23.44654      4.001 #> TC (12-2001) -20.47521      2.922 #> AO (12-2001)  17.13461      2.962 #> TC (2-2002)   10.61731      1.937 #>  #> Fixed outliers:  #>              Coefficients #> LS (10-2008)           36 #> AO (1-2002)            14 #>  #>  #> Residual standard error: 2.178 on 337 degrees of freedom #> Log likelihood = -792.6, aic =  1629 aicc =  1632, bic(corrected for length) = 1.901 #>  s_preOut(myreg1) #>   type       date coeff #> 1   LS 2008-10-01    36 #> 2   AO 2002-01-01    14    # User-defined variables var1 <- ts(rnorm(length(myseries))*10, start = start(myseries),            frequency = 12) var2 <- ts(rnorm(length(myseries))*100, start = start(myseries),            frequency = 12) var <- ts.union(var1, var2)  myspec1 <- regarima_spec_x13(spec = \"RG5c\", usrdef.varEnabled = TRUE,                              usrdef.var = var) myreg1 <- regarima(myseries, myspec1) myreg1 #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.01422      0.108 #> Phi(2)     0.18591      0.074 #> Theta(1)  -0.53323      0.102 #> BTheta(1) -0.65832      0.043 #>  #>                Estimate Std. Error #> r.var1        1.819e-02      0.010 #> r.var2       -4.022e-04      0.001 #> Monday        5.254e-01      0.228 #> Tuesday       9.187e-01      0.228 #> Wednesday     9.946e-01      0.230 #> Thursday      2.941e-02      0.228 #> Friday        9.787e-01      0.232 #> Saturday     -1.589e+00      0.227 #> Leap year     2.142e+00      0.700 #> Easter [1]   -2.438e+00      0.452 #> TC (4-2020)  -3.560e+01      2.163 #> AO (3-2020)  -2.092e+01      2.183 #> AO (5-2011)   1.355e+01      1.847 #> LS (11-2008) -1.252e+01      1.636 #>  #>  #> Residual standard error: 2.208 on 340 degrees of freedom #> Log likelihood = -797.4, aic =  1633 aicc =  1635, bic(corrected for length) = 1.879 #>   myspec2 <- regarima_spec_x13(spec = \"RG5c\", usrdef.varEnabled = TRUE,                              usrdef.var = var1, usrdef.varCoef = 2,                              transform.function = \"None\") myreg2 <- regarima(myseries, myspec2) s_preVar(myreg2) #> $series #>               Jan          Feb          Mar          Apr          May #> 1990 -11.14492926  -8.42058813 -15.04294209  -2.84026455   0.42869041 #> 1991  -5.78524902  -1.69109048 -19.19232520 -15.34266387 -11.14761221 #> 1992   9.71396469  -5.79663020  16.04179789   2.25973337  -5.14857122 #> 1993 -15.55643970   0.93501283  -3.66949421  -1.29408799   4.07795520 #> 1994 -16.09575292 -10.49710115  20.52033974   1.76436411  11.28307358 #> 1995  -2.81725199  -7.91679461   0.01653727 -11.87530126   3.62417465 #> 1996   4.95847824  12.99750970 -16.15985506 -12.50367945  15.82132306 #> 1997  17.40218394  -3.24455939  -4.47511333   4.16082526 -12.95865368 #> 1998  -7.00069022  18.60931509  18.03924959 -13.56043492  -3.14751072 #> 1999 -14.00912333  14.45014910  -4.23481621  -7.33749597  -7.08484753 #> 2000  17.47150257  -0.81704668   1.24141586   3.92236141   3.78419970 #> 2001  12.07632181   0.32001384   1.80397550   0.77160580   5.58395338 #> 2002   8.15566796   1.20032668   8.81789848 -17.98743117  -9.57051078 #> 2003   2.26820843  -5.91868492  -4.05414494  14.14224665   2.41625825 #> 2004  -3.44214729   6.45775407 -15.34500551   5.99672514  -5.04358892 #> 2005  20.20798363 -18.38661562   1.72937164  -7.63245040 -11.18492914 #> 2006  -0.17532122  -3.90664205  -4.02775110  12.76706963   8.21075754 #> 2007  12.13732488  15.03810074 -11.69425021   6.13377167  14.83931321 #> 2008   7.34408890  -5.75309458   0.74897554   0.59301839   8.48264703 #> 2009  -7.59094766  -5.09303603  -1.56039669   1.32582442  -9.74084022 #> 2010  -9.75148693  -0.27117079   4.46671886  -3.29112249   1.13049080 #> 2011  28.39266231   9.61819160   5.08432001   2.59523192  -7.73404126 #> 2012  13.22082615  12.00558995  -7.81874565  -4.41476451  -2.46028129 #> 2013   6.34250029   8.65538237  -4.30593090   0.13030894   0.51249629 #> 2014  -2.76989004   1.36469589  10.67207722   0.01828103   1.40092252 #> 2015 -10.62911432  16.33683158   5.40830359  14.56857971 -19.33784243 #> 2016  10.00469215   5.27999513  11.63605931   1.73137014   5.77917253 #> 2017 -11.29829171   3.87267796  12.70263382 -16.46117829  -1.23604069 #> 2018  -0.22954568  -1.91523237  -4.40614893 -19.41405982  14.15706719 #> 2019 -15.64734714   5.11589918 -15.39661373   3.62795564   7.70735944 #> 2020  -2.58953302   6.77025733  -4.20100735  10.47205425 -15.46576348 #>               Jun          Jul          Aug          Sep          Oct #> 1990  -0.08866413 -29.49083784   0.20358254  -0.98446980   5.89109098 #> 1991  15.97811635  -6.39805078  15.66690553 -14.49155712  -7.91503959 #> 1992  -8.23788240   3.34415250  -0.93490765   3.04062078  -4.76507534 #> 1993  -5.83968954  -1.93449890  -2.69546670   0.73658232   3.57236138 #> 1994   4.35001744   5.48833492   6.47418304   8.78463454   3.50797869 #> 1995  -5.49435319   6.92949838  -0.60843916 -11.93540930  -1.19908059 #> 1996  12.52529118  -2.09395701  -6.39033687   3.98902937  13.41973500 #> 1997   6.82633090   4.96913333  14.39660656  12.07358558   2.38514694 #> 1998 -10.19265181  -6.12249656  -2.89068749  15.06983292   3.67722694 #> 1999  14.75092459   8.45004185  12.93994431   2.98161142  -4.05682490 #> 2000   1.66175673  11.53387369   0.14748302   0.21440845  -8.26352170 #> 2001  -1.66854367  -2.27980619   2.42666056  -9.28482969  15.15406678 #> 2002  -4.74058606 -18.60461283   2.53690073  -2.14401713 -23.70181451 #> 2003 -14.36087478  -3.14552745  -4.80542811   8.36254248  -0.52349287 #> 2004  -4.06909625  -4.60935206  22.14908426  14.86967820  -3.55098858 #> 2005  11.97977461   9.81193912  11.91749205   6.32833568   5.32825947 #> 2006   4.19785146  17.11661220 -22.15632715  -1.84878197   6.71168243 #> 2007  -4.43773736   2.68589741 -12.28216829   4.78528762  16.69859573 #> 2008  25.75396587   0.94259964  -5.19949532   7.74428621  12.28289259 #> 2009 -12.50949663  -0.46336042  11.37387771  12.64449891  -5.48742076 #> 2010  10.51229395   3.26977400   7.87037444   4.41559619 -10.19304514 #> 2011 -18.05527531   1.78383232  -5.25777309   4.00186316  -1.22587586 #> 2012   3.65792190  -0.34132882   2.96227003  -2.21059772   1.87706159 #> 2013   5.38638152   5.19672613 -24.22911275  -8.06290253  -4.84679992 #> 2014  -5.20598538  23.65811636 -16.96474415   6.82585584  13.61561976 #> 2015  -8.80400798  -7.97730162  -8.86130974  -2.94827785  -8.86651693 #> 2016  -1.16008707   9.04521145  -0.16586710  -9.22297409 -10.60114550 #> 2017  -9.71640654  10.68587364  23.16252874 -16.82873392   1.35875428 #> 2018   5.96399657  -6.52922289  -1.54144673  -4.43645660  -5.18233778 #> 2019 -12.88986224  -7.13194370  -1.02383386  -6.47611750  -3.73253836 #> 2020 -10.46005681 -22.72669757  -3.16651938 -14.76190645  -1.00387827 #>               Nov          Dec #> 1990  -4.25751629   6.34658985 #> 1991  -5.04480733   4.01826700 #> 1992  -2.41311717   8.24155833 #> 1993   5.50428418   0.38401793 #> 1994   0.49879720   8.35749446 #> 1995  -7.08107950 -16.16663973 #> 1996  -0.37607422   5.43670114 #> 1997  -2.98837878  13.84621050 #> 1998  -0.20034941  -9.79921959 #> 1999  -1.38807578  -2.22592731 #> 2000   0.47399133  -2.93107372 #> 2001  -8.11598824  13.11247408 #> 2002   0.03258078   6.69745568 #> 2003   9.51957625  14.94512798 #> 2004   8.76203737  -2.14696646 #> 2005  -8.20121900  -1.59325676 #> 2006  -7.95140242 -15.66257835 #> 2007  -0.36455545  -4.40936271 #> 2008  18.80606885  -1.25241723 #> 2009   6.82391430  -9.29773363 #> 2010  -1.58698326 -16.37701292 #> 2011  -0.71345032  20.95734365 #> 2012  -4.38062172  -0.88733579 #> 2013  -6.53077284  -2.93764247 #> 2014  19.05955757  -6.72838542 #> 2015   0.99084673   7.20546895 #> 2016 -17.87199640 -10.66551779 #> 2017   4.98437767  13.33462968 #> 2018   2.06107064  16.39453666 #> 2019   0.83347213   9.17216273 #> 2020  -7.46222611   2.03645883 #>  #> $description #>              type coeff #> userdef Undefined     2 #>    # Pre-specified ARMA coefficients myspec1 <- regarima_spec_x13(spec = \"RG5c\", automdl.enabled =FALSE,              arima.p = 1, arima.q = 1, arima.bp = 0, arima.bq = 1,              arima.coefEnabled = TRUE, arima.coef = c(-0.8, -0.6, 0),              arima.coefType = c(rep(\"Fixed\", 2), \"Undefined\"))  s_arimaCoef(myspec1) #>                Type Value #> Phi(1)        Fixed  -0.8 #> Theta(1)      Fixed  -0.6 #> BTheta(1) Undefined   0.0 myreg1 <- regarima(myseries, myspec1) myreg1 #> y = regression model + arima (1, 1, 1, 0, 1, 1) #> Log-transformation: yes #> Coefficients: #>           Estimate Std. Error #> Phi(1)     -0.8000       0.00 #> Theta(1)   -0.6000       0.00 #> BTheta(1)  -0.6977       0.04 #>  #>              Estimate Std. Error #> Monday       0.006317      0.002 #> Tuesday      0.007824      0.002 #> Wednesday    0.010528      0.002 #> Thursday     0.001857      0.002 #> Friday       0.010099      0.002 #> Saturday    -0.018439      0.002 #> Easter [1]  -0.020593      0.004 #> TC (4-2020) -0.475720      0.031 #> AO (3-2020) -0.213355      0.023 #> AO (5-2011)  0.143705      0.016 #>  #>  #> Residual standard error: 0.0256 on 347 degrees of freedom #> Log likelihood = 802.3, aic =  1733 aicc =  1734, bic(corrected for length) = -7.15 #>  # }"},{"path":"/reference/save_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Saving and loading a model specification, SA and pre-adjustment in X13 and TRAMO-SEATS — save_spec","title":"Saving and loading a model specification, SA and pre-adjustment in X13 and TRAMO-SEATS — save_spec","text":"save_spec saves SA RegARIMA model specification. load_spec loads previously saved model specification.","code":""},{"path":"/reference/save_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saving and loading a model specification, SA and pre-adjustment in X13 and TRAMO-SEATS — save_spec","text":"","code":"save_spec(object, file = file.path(tempdir(), \"spec.RData\"))  load_spec(file = \"spec.RData\")"},{"path":"/reference/save_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saving and loading a model specification, SA and pre-adjustment in X13 and TRAMO-SEATS — save_spec","text":"object object one following classes: c(\"SA_spec\",\"X13\"), c(\"SA_spec\",\"TRAMO_SEATS\"), c(\"SA\",\"X13\"), c(\"SA\",\"TRAMO_SEATS\"), c(\"regarima_spec\",\"X13\"), c(\"regarima_spec\",\"TRAMO_SEATS\"), c(\"regarima\",\"X13\"), c(\"regarima\",\"TRAMO_SEATS\"). file (path ) name file model specification /saved.","code":""},{"path":"/reference/save_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saving and loading a model specification, SA and pre-adjustment in X13 and TRAMO-SEATS — save_spec","text":"load_spec returns object class \"SA_spec\" \"regarima_spec\".","code":""},{"path":"/reference/save_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Saving and loading a model specification, SA and pre-adjustment in X13 and TRAMO-SEATS — save_spec","text":"save_spec saves final model specification \"SA_spec\", \"SA\", \"regarima_spec\" \"regarima\" class object. load_spec loads previously saved model specification. creates c(\"SA_spec\",\"X13\"), c(\"sA_spec\",\"TRAMO_SEATS\"), c(\"regarima_spec\",\"X13\") c(\"regarima_spec\",\"TRAMO_SEATS\") class object, line class previously saved model specification.","code":""},{"path":"/reference/save_spec.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Saving and loading a model specification, SA and pre-adjustment in X13 and TRAMO-SEATS — save_spec","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":"/reference/save_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saving and loading a model specification, SA and pre-adjustment in X13 and TRAMO-SEATS — save_spec","text":"","code":"# \\donttest{ myseries <- ipi_c_eu[, \"FR\"] myreg1 <- regarima_x13(myseries, spec = \"RG5c\") myspec2 <- regarima_spec_x13(myreg1, estimate.from = \"2005-10-01\", outlier.from = \"2010-03-01\") myreg2 <- regarima(myseries, myspec2)  myreg3 <- regarima_tramoseats(myseries, spec = \"TRfull\") myspec4 <-regarima_spec_tramoseats(myreg3, tradingdays.mauto = \"Unused\",                                   tradingdays.option =\"WorkingDays\",                                   easter.type = \"Standard\",                                   automdl.enabled = FALSE, arima.mu = TRUE) myreg4 <-regarima(myseries, myspec4)  myspec6 <- x13_spec(\"RSA5c\") mysa6 <- x13(myseries, myspec6)  myspec7 <- tramoseats_spec(\"RSAfull\") mysa7 <- tramoseats(myseries, myspec7)  dir <- tempdir()   # To save the model specification of a c(\"regarima_spec\",\"X13\") class object save_spec(myspec2, file.path(dir, \"specx13.RData\"))  # To save the model specification of a c(\"regarima\",\"X13\") class object save_spec(myreg2, file.path(dir,\"regx13.RData\"))  # To save the model specification of a c(\"regarima_spec\",\"TRAMO_SEATS\") class object save_spec(myspec4, file.path(dir,\"specTS.RData\"))  # To save the model specification of a c(\"regarima\",\"TRAMO_SEATS\") class object save_spec(myreg4, file.path(dir,\"regTS.RData\"))  # To save the model of a c(\"SA_spec\",\"X13\") class object save_spec(myspec6, file.path(dir,\"specFullx13.RData\"))  # To save the model of a c(\"SA\",\"X13\") class object save_spec(mysa6, file.path(dir,\"sax13.RData\"))  # To save the model of a c(\"SA_spec\",\"TRAMO_SEATS\") class object save_spec(myspec7, file.path(dir,\"specFullTS.RData\"))  # To save the model of a c(\"SA\",\"TRAMO_SEATS\") class object save_spec(mysa7, file.path(dir,\"saTS.RData\"))   # To load a model specification: myspec2a <- load_spec(file.path(dir,\"specx13.RData\")) myspec2b <- load_spec(file.path(dir,\"regx13.RData\")) myspec4a <- load_spec(file.path(dir,\"specTS.RData\")) myspec4b <- load_spec(file.path(dir,\"regTS.RData\")) myspec6a <- load_spec(file.path(dir,\"specFullx13.RData\")) myspec6b <- load_spec(file.path(dir,\"sax13.RData\")) myspec7a <- load_spec(file.path(dir,\"specFullTS.RData\")) myspec7b <- load_spec(file.path(dir,\"saTS.RData\"))  # To use the re-loaded specifications and models: regarima(myseries, myspec2a) #> y = regression model + arima (0, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Theta(1)   -0.2211      0.077 #> BTheta(1)  -0.6911      0.060 #>  #>              Estimate Std. Error #> Monday        1.32698      0.340 #> Tuesday       1.10991      0.346 #> Wednesday     0.68412      0.351 #> Thursday      0.04219      0.348 #> Friday        1.43827      0.348 #> Saturday     -1.99253      0.345 #> Leap year     2.01847      1.152 #> Easter [8]   -2.11412      0.702 #> LS (3-2020) -21.59400      2.876 #> AO (4-2020) -16.22087      2.287 #> AO (5-2011)  13.50260      2.048 #>  #>  #> Residual standard error: 2.656 on 156 degrees of freedom #> Log likelihood = -411.2, aic = 850.3 aicc = 853.1, bic(corrected for length) = 2.346 #>  x13(myseries, myspec6a) #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>             Estimate Std. Error #> Phi(1)     0.0003269      0.108 #> Phi(2)     0.1688192      0.074 #> Theta(1)  -0.5485606      0.102 #> BTheta(1) -0.6660849      0.042 #>  #>               Estimate Std. Error #> Monday         0.55932      0.228 #> Tuesday        0.88221      0.228 #> Wednesday      1.03996      0.229 #> Thursday       0.04943      0.229 #> Friday         0.91132      0.230 #> Saturday      -1.57769      0.228 #> Leap year      2.15403      0.705 #> Easter [1]    -2.37950      0.454 #> TC (4-2020)  -35.59245      2.173 #> AO (3-2020)  -20.89026      2.180 #> AO (5-2011)   13.49850      1.857 #> LS (11-2008) -12.54901      1.636 #>  #>  #> Residual standard error: 2.218 on 342 degrees of freedom #> Log likelihood = -799.1, aic =  1632 aicc =  1634, bic(corrected for length) = 1.855 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.163 #> M(2)    0.089 #> M(3)    1.181 #> M(4)    0.558 #> M(5)    1.020 #> M(6)    0.090 #> M(7)    0.083 #> M(8)    0.244 #> M(9)    0.062 #> M(10)   0.272 #> M(11)   0.256 #> Q       0.368 #> Q-M2    0.402 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t            s             i #> Jan 2020 101.0 102.95613 102.9586  -1.95613209  -0.002494203 #> Feb 2020 100.1 103.50876 102.9592  -3.40875640   0.549602816 #> Mar 2020  91.8  82.87617 103.1664   8.92382800 -20.290271773 #> Apr 2020  66.7  66.65243 103.5971   0.04756625 -36.944710027 #> May 2020  73.7  78.87836 104.0393  -5.17835604 -25.160905985 #> Jun 2020  98.2  87.34544 104.3804  10.85456021 -17.034985133 #> Jul 2020  97.4  92.47436 104.5319   4.92563707 -12.057551871 #> Aug 2020  71.7  97.47245 104.3751 -25.77244698  -6.902636199 #> Sep 2020 104.7  97.37717 103.9182   7.32282919  -6.541070626 #> Oct 2020 106.7  98.24194 103.3047   8.45805540  -5.062719500 #> Nov 2020 101.6 100.26862 102.7746   1.33138152  -2.506014899 #> Dec 2020  96.6  99.66730 102.5133  -3.06729670  -2.845961796 #>  #> Forecasts: #>                y_f     sa_f      t_f          s_f        i_f #> Jan 2021  94.53021 101.0902 102.4794  -6.56002888 -1.3891608 #> Feb 2021  97.90024 101.7395 102.5246  -3.83928384 -0.7850772 #> Mar 2021 114.09983 102.3065 102.5087  11.79328397 -0.2021598 #> Apr 2021 102.16781 102.2220 102.3759  -0.05422341 -0.1538967 #> May 2021  96.01612 101.5450 102.2100  -5.52888123 -0.6650098 #> Jun 2021 112.76658 101.3438 102.0725  11.42275939 -0.7286526 #> Jul 2021 104.13805 101.6681 102.0297   2.46989932 -0.3615193 #> Aug 2021  79.13003 102.3617 102.1360 -23.23171595  0.2257112 #> Sep 2021 109.06438 102.4772 102.3249   6.58713572  0.1523168 #> Oct 2021 108.64207 102.1329 102.5185   6.50921416 -0.3856588 #> Nov 2021 106.46022 102.5908 102.6996   3.86943752 -0.1088338 #> Dec 2021  99.79901 103.0831 102.8580  -3.28410831  0.2251086 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         2.251 #>  Seasonal     59.750 #>  Irregular     1.067 #>  TD & Hol.     2.610 #>  Others       33.718 #>  Total        99.395 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.034 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          0.985 #>  qs test on i                           0.865 #>  f-test on sa (seasonal dummies)        0.958 #>  f-test on i (seasonal dummies)         0.893 #>  Residual seasonality (entire series)   0.876 #>  Residual seasonality (last 3 years)    0.906 #>  f-test on sa (td)                      0.987 #>  f-test on i (td)                       0.993 #>  #>  #> Additional output variables tramoseats(myseries, myspec7a) #> RegARIMA #> y = regression model + arima (2, 1, 0, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)      0.4032      0.051 #> Phi(2)      0.2883      0.051 #> BTheta(1)  -0.6641      0.042 #>  #>             Estimate Std. Error #> Week days     0.6994      0.032 #> Leap year     2.3231      0.690 #> Easter [6]   -2.5154      0.436 #> AO (5-2011)  13.4679      1.787 #> TC (4-2020) -22.2128      2.205 #> TC (3-2020) -21.0391      2.217 #> AO (5-2000)   6.7386      1.794 #>  #>  #> Residual standard error: 2.326 on 348 degrees of freedom #> Log likelihood = -816.1, aic =  1654 aicc =  1655, bic(corrected for length) = 1.852 #>  #>  #>  #> Decomposition #> Model #> AR :  1 + 0.403230 B + 0.288342 B^2  #> D :  1 - B - B^12 + B^13  #> MA :  1 - 0.664088 B^12  #>  #>  #> SA #> AR :  1 + 0.403230 B + 0.288342 B^2  #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 0.970348 B + 0.005940 B^2 - 0.005813 B^3 + 0.003576 B^4  #> Innovation variance:  0.7043507  #>  #> Trend #> D :  1 - 2.000000 B + B^2  #> MA :  1 + 0.033519 B - 0.966481 B^2  #> Innovation variance:  0.06093642  #>  #> Seasonal #> D :  1 + B + B^2 + B^3 + B^4 + B^5 + B^6 + B^7 + B^8 + B^9 + B^10 + B^11  #> MA :  1 + 1.328957 B + 1.105787 B^2 + 1.185470 B^3 + 1.067845 B^4 + 0.820748 B^5 + 0.632456 B^6 + 0.404457 B^7 + 0.245256 B^8 + 0.001615 B^9 - 0.055617 B^10 - 0.203557 B^11  #> Innovation variance:  0.04290744  #>  #> Transitory #> AR :  1 + 0.403230 B + 0.288342 B^2  #> MA :  1 - 0.260079 B - 0.739921 B^2  #> Innovation variance:  0.05287028  #>  #> Irregular #> Innovation variance:  0.2032994  #>  #>  #>  #> Final #> Last observed values #>              y        sa        t           s            i #> Jan 2020 101.0 102.93775 103.0182  -1.9377453  -0.08043801 #> Feb 2020 100.1 103.53944 103.2312  -3.4394383   0.30818847 #> Mar 2020  91.8  82.47698 103.4998   9.3230241 -21.02286361 #> Apr 2020  66.7  65.77310 103.9608   0.9268969 -38.18766871 #> May 2020  73.7  79.43342 104.7269  -5.7334221 -25.29345247 #> Jun 2020  98.2  88.07766 105.3319  10.1223443 -17.25422206 #> Jul 2020  97.4  92.71048 105.4216   4.6895154 -12.71111705 #> Aug 2020  71.7  97.32129 104.9801 -25.6212858  -7.65880696 #> Sep 2020 104.7  97.44274 104.0807   7.2572622  -6.63793072 #> Oct 2020 106.7  98.20925 103.1711   8.4907485  -4.96183772 #> Nov 2020 101.6  99.98044 102.4813   1.6195550  -2.50088282 #> Dec 2020  96.6  98.99458 101.9735  -2.3945790  -2.97892307 #>  #> Forecasts: #>                y_f     sa_f      t_f        s_f         i_f #> Jan 2021  93.22264 100.1984 101.7578  -6.975740 -1.55946363 #> Feb 2021  96.81455 100.8845 101.7113  -4.069924 -0.82679910 #> Mar 2021 111.72198 100.8668 101.6647  10.855228 -0.79795880 #> Apr 2021 102.76178 101.0716 101.6181   1.690178 -0.54654378 #> May 2021  95.52744 101.2474 101.5716  -5.719910 -0.32422597 #> Jun 2021 111.44221 101.2711 101.5250  10.171157 -0.25395653 #> Jul 2021 103.57813 101.2947 101.4784   2.283395 -0.18370915 #> Aug 2021  78.21363 101.3135 101.4319 -23.099833 -0.11841662 #> Sep 2021 108.57631 101.3000 101.3853   7.276282 -0.08528380 #> Oct 2021 107.32040 101.2771 101.3387   6.043321 -0.06166933 #> Nov 2021 105.33458 101.2505 101.2922   4.084088 -0.04168414 #> Dec 2021  98.79675 101.2164 101.2456  -2.419656 -0.02920922 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         6.087 #>  Seasonal     80.528 #>  Irregular     0.965 #>  TD & Hol.     3.590 #>  Others        8.102 #>  Total        99.271 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                       0.00 #>    Test for the presence of seasonality assuming stability    0.00 #>    Evolutive seasonality test                                 0.01 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           1.000 #>  f-test on sa (seasonal dummies)        1.000 #>  f-test on i (seasonal dummies)         1.000 #>  Residual seasonality (entire series)   1.000 #>  Residual seasonality (last 3 years)    0.974 #>  f-test on sa (td)                      0.152 #>  f-test on i (td)                       0.224 #>  #>  #> Additional output variables  regarima(myseries, myspec4a) #> y = regression model + arima (0, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Theta(1)   -0.6221      0.043 #> BTheta(1)  -0.6720      0.042 #>  #>                Estimate Std. Error #> Mean           0.001332      0.016 #> Monday         0.577428      0.239 #> Tuesday        0.842975      0.238 #> Wednesday      1.073966      0.240 #> Thursday       0.030442      0.239 #> Friday         0.872297      0.241 #> Saturday      -1.555483      0.238 #> Leap year      2.136324      0.726 #> Easter [6]    -2.170391      0.484 #> TC (4-2020)  -21.181047      2.222 #> TC (3-2020)  -21.228566      2.217 #> AO (5-2011)   12.919433      1.907 #> LS (11-2008) -12.465765      1.648 #>  #>  #> Residual standard error: 2.243 on 343 degrees of freedom #> Log likelihood = -803.2, aic =  1638 aicc =  1640, bic(corrected for length) = 1.861 #>  x13(myseries, myspec6b) #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>             Estimate Std. Error #> Phi(1)     0.0003269      0.108 #> Phi(2)     0.1688192      0.074 #> Theta(1)  -0.5485606      0.102 #> BTheta(1) -0.6660849      0.042 #>  #>               Estimate Std. Error #> Monday         0.55932      0.228 #> Tuesday        0.88221      0.228 #> Wednesday      1.03996      0.229 #> Thursday       0.04943      0.229 #> Friday         0.91132      0.230 #> Saturday      -1.57769      0.228 #> Leap year      2.15403      0.705 #> Easter [1]    -2.37950      0.454 #> TC (4-2020)  -35.59245      2.173 #> AO (3-2020)  -20.89026      2.180 #> AO (5-2011)   13.49850      1.857 #> LS (11-2008) -12.54901      1.636 #>  #>  #> Residual standard error: 2.218 on 342 degrees of freedom #> Log likelihood = -799.1, aic =  1632 aicc =  1634, bic(corrected for length) = 1.855 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.163 #> M(2)    0.089 #> M(3)    1.181 #> M(4)    0.558 #> M(5)    1.020 #> M(6)    0.090 #> M(7)    0.083 #> M(8)    0.244 #> M(9)    0.062 #> M(10)   0.272 #> M(11)   0.256 #> Q       0.368 #> Q-M2    0.402 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t            s             i #> Jan 2020 101.0 102.95613 102.9586  -1.95613209  -0.002494203 #> Feb 2020 100.1 103.50876 102.9592  -3.40875640   0.549602816 #> Mar 2020  91.8  82.87617 103.1664   8.92382800 -20.290271773 #> Apr 2020  66.7  66.65243 103.5971   0.04756625 -36.944710027 #> May 2020  73.7  78.87836 104.0393  -5.17835604 -25.160905985 #> Jun 2020  98.2  87.34544 104.3804  10.85456021 -17.034985133 #> Jul 2020  97.4  92.47436 104.5319   4.92563707 -12.057551871 #> Aug 2020  71.7  97.47245 104.3751 -25.77244698  -6.902636199 #> Sep 2020 104.7  97.37717 103.9182   7.32282919  -6.541070626 #> Oct 2020 106.7  98.24194 103.3047   8.45805540  -5.062719500 #> Nov 2020 101.6 100.26862 102.7746   1.33138152  -2.506014899 #> Dec 2020  96.6  99.66730 102.5133  -3.06729670  -2.845961796 #>  #> Forecasts: #>                y_f     sa_f      t_f          s_f        i_f #> Jan 2021  94.53021 101.0902 102.4794  -6.56002888 -1.3891608 #> Feb 2021  97.90024 101.7395 102.5246  -3.83928384 -0.7850772 #> Mar 2021 114.09983 102.3065 102.5087  11.79328397 -0.2021598 #> Apr 2021 102.16781 102.2220 102.3759  -0.05422341 -0.1538967 #> May 2021  96.01612 101.5450 102.2100  -5.52888123 -0.6650098 #> Jun 2021 112.76658 101.3438 102.0725  11.42275939 -0.7286526 #> Jul 2021 104.13805 101.6681 102.0297   2.46989932 -0.3615193 #> Aug 2021  79.13003 102.3617 102.1360 -23.23171595  0.2257112 #> Sep 2021 109.06438 102.4772 102.3249   6.58713572  0.1523168 #> Oct 2021 108.64207 102.1329 102.5185   6.50921416 -0.3856588 #> Nov 2021 106.46022 102.5908 102.6996   3.86943752 -0.1088338 #> Dec 2021  99.79901 103.0831 102.8580  -3.28410831  0.2251086 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         2.251 #>  Seasonal     59.750 #>  Irregular     1.067 #>  TD & Hol.     2.610 #>  Others       33.718 #>  Total        99.395 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.034 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          0.985 #>  qs test on i                           0.865 #>  f-test on sa (seasonal dummies)        0.958 #>  f-test on i (seasonal dummies)         0.893 #>  Residual seasonality (entire series)   0.876 #>  Residual seasonality (last 3 years)    0.906 #>  f-test on sa (td)                      0.987 #>  f-test on i (td)                       0.993 #>  #>  #> Additional output variables tramoseats(myseries, myspec7b) #> RegARIMA #> y = regression model + arima (2, 1, 0, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)      0.4032      0.051 #> Phi(2)      0.2883      0.051 #> BTheta(1)  -0.6641      0.042 #>  #>             Estimate Std. Error #> Week days     0.6994      0.032 #> Leap year     2.3231      0.690 #> Easter [6]   -2.5154      0.436 #> AO (5-2011)  13.4679      1.787 #> TC (4-2020) -22.2128      2.205 #> TC (3-2020) -21.0391      2.217 #> AO (5-2000)   6.7386      1.794 #>  #>  #> Residual standard error: 2.326 on 348 degrees of freedom #> Log likelihood = -816.1, aic =  1654 aicc =  1655, bic(corrected for length) = 1.852 #>  #>  #>  #> Decomposition #> Model #> AR :  1 + 0.403230 B + 0.288342 B^2  #> D :  1 - B - B^12 + B^13  #> MA :  1 - 0.664088 B^12  #>  #>  #> SA #> AR :  1 + 0.403230 B + 0.288342 B^2  #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 0.970348 B + 0.005940 B^2 - 0.005813 B^3 + 0.003576 B^4  #> Innovation variance:  0.7043507  #>  #> Trend #> D :  1 - 2.000000 B + B^2  #> MA :  1 + 0.033519 B - 0.966481 B^2  #> Innovation variance:  0.06093642  #>  #> Seasonal #> D :  1 + B + B^2 + B^3 + B^4 + B^5 + B^6 + B^7 + B^8 + B^9 + B^10 + B^11  #> MA :  1 + 1.328957 B + 1.105787 B^2 + 1.185470 B^3 + 1.067845 B^4 + 0.820748 B^5 + 0.632456 B^6 + 0.404457 B^7 + 0.245256 B^8 + 0.001615 B^9 - 0.055617 B^10 - 0.203557 B^11  #> Innovation variance:  0.04290744  #>  #> Transitory #> AR :  1 + 0.403230 B + 0.288342 B^2  #> MA :  1 - 0.260079 B - 0.739921 B^2  #> Innovation variance:  0.05287028  #>  #> Irregular #> Innovation variance:  0.2032994  #>  #>  #>  #> Final #> Last observed values #>              y        sa        t           s            i #> Jan 2020 101.0 102.93775 103.0182  -1.9377453  -0.08043801 #> Feb 2020 100.1 103.53944 103.2312  -3.4394383   0.30818847 #> Mar 2020  91.8  82.47698 103.4998   9.3230241 -21.02286361 #> Apr 2020  66.7  65.77310 103.9608   0.9268969 -38.18766871 #> May 2020  73.7  79.43342 104.7269  -5.7334221 -25.29345247 #> Jun 2020  98.2  88.07766 105.3319  10.1223443 -17.25422206 #> Jul 2020  97.4  92.71048 105.4216   4.6895154 -12.71111705 #> Aug 2020  71.7  97.32129 104.9801 -25.6212858  -7.65880696 #> Sep 2020 104.7  97.44274 104.0807   7.2572622  -6.63793072 #> Oct 2020 106.7  98.20925 103.1711   8.4907485  -4.96183772 #> Nov 2020 101.6  99.98044 102.4813   1.6195550  -2.50088282 #> Dec 2020  96.6  98.99458 101.9735  -2.3945790  -2.97892307 #>  #> Forecasts: #>                y_f     sa_f      t_f        s_f         i_f #> Jan 2021  93.22264 100.1984 101.7578  -6.975740 -1.55946363 #> Feb 2021  96.81455 100.8845 101.7113  -4.069924 -0.82679910 #> Mar 2021 111.72198 100.8668 101.6647  10.855228 -0.79795880 #> Apr 2021 102.76178 101.0716 101.6181   1.690178 -0.54654378 #> May 2021  95.52744 101.2474 101.5716  -5.719910 -0.32422597 #> Jun 2021 111.44221 101.2711 101.5250  10.171157 -0.25395653 #> Jul 2021 103.57813 101.2947 101.4784   2.283395 -0.18370915 #> Aug 2021  78.21363 101.3135 101.4319 -23.099833 -0.11841662 #> Sep 2021 108.57631 101.3000 101.3853   7.276282 -0.08528380 #> Oct 2021 107.32040 101.2771 101.3387   6.043321 -0.06166933 #> Nov 2021 105.33458 101.2505 101.2922   4.084088 -0.04168414 #> Dec 2021  98.79675 101.2164 101.2456  -2.419656 -0.02920922 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         6.087 #>  Seasonal     80.528 #>  Irregular     0.965 #>  TD & Hol.     3.590 #>  Others        8.102 #>  Total        99.271 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                       0.00 #>    Test for the presence of seasonality assuming stability    0.00 #>    Evolutive seasonality test                                 0.01 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           1.000 #>  f-test on sa (seasonal dummies)        1.000 #>  f-test on i (seasonal dummies)         1.000 #>  Residual seasonality (entire series)   1.000 #>  Residual seasonality (last 3 years)    0.974 #>  f-test on sa (td)                      0.152 #>  f-test on i (td)                       0.224 #>  #>  #> Additional output variables # }"},{"path":"/reference/save_workspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a workspace — save_workspace","title":"Save a workspace — save_workspace","text":"Function save workspace object 'JDemetra+' workspace.","code":""},{"path":"/reference/save_workspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a workspace — save_workspace","text":"","code":"save_workspace(workspace, file)"},{"path":"/reference/save_workspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a workspace — save_workspace","text":"workspace workspace object export file path export 'JDemetra+' workspace (.xml file). default, specified, dialog box opens.","code":""},{"path":"/reference/save_workspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a workspace — save_workspace","text":"boolean indicating whether export successful.","code":""},{"path":[]},{"path":"/reference/save_workspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a workspace — save_workspace","text":"","code":"# \\donttest{ dir <- tempdir() # Creation and export of an empty 'JDemetra+' workspace wk <- new_workspace() new_multiprocessing(wk, \"sa1\") save_workspace(wk, file.path(dir, \"workspace.xml\")) # }"},{"path":"/reference/specification.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a model specification, a SA or a pre-adjustment model in X13 and TRAMO-SEATS — specification","title":"Access a model specification, a SA or a pre-adjustment model in X13 and TRAMO-SEATS — specification","text":"following functions enable access different parts final model specification, included \"SA\", \"regarima\", \"SA_spec\" \"regarima_spec\" S3 class objects.","code":""},{"path":"/reference/specification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a model specification, a SA or a pre-adjustment model in X13 and TRAMO-SEATS — specification","text":"","code":"s_estimate(object = NA)  s_transform(object = NA)  s_usrdef(object = NA)  s_preOut(object = NA)  s_preVar(object = NA)  s_td(object = NA)  s_easter(object = NA)  s_out(object = NA)  s_arima(object = NA)  s_arimaCoef(object = NA)  s_fcst(object = NA)  s_span(object = NA)  s_x11(object = NA)  s_benchmarking(object = NA)  s_seats(object = NA)"},{"path":"/reference/specification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a model specification, a SA or a pre-adjustment model in X13 and TRAMO-SEATS — specification","text":"object object one following classes: c(\"SA\",\"X13\"), c(\"SA\",\"TRAMO_SEATS\"), c(\"SA_spec\",\"X13\"), c(\"SA_spec\",\"TRAMO_SEATS\"), c(\"regarima\",\"X13\"), c(\"regarima\",\"TRAMO_SEATS\"), c(\"regarima_spec\",\"X13\"), c(\"regarima_spec\",\"TRAMO_SEATS\").","code":""},{"path":"/reference/specification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a model specification, a SA or a pre-adjustment model in X13 and TRAMO-SEATS — specification","text":"s_estimate returns data.frame estimate variables s_transform returns data.frame transform variables s_usrdef returns data.frame user-defined regressors (outliers variables) model specification, indicating variables included model coefficients pre-specified s_preOut returns data.frame pre-specified outliers s_preVar returns list information user-defined variables, including: series - time series description - data.frame variable type coefficients s_td returns data.frame trading.days variables s_easter returns data.frame easter variable s_out returns data.frame outliers detection variables s_arima returns data.frame arima variables s_arimaCoef returns data.frame user-specified ARMA coefficients s_fcst returns data.frame forecast horizon s_span returns data.frame span variables s_x11 returns data.frame x11 variables s_seats returns data.frame seats variables","code":""},{"path":"/reference/specification.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access a model specification, a SA or a pre-adjustment model in X13 and TRAMO-SEATS — specification","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":"/reference/specification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access a model specification, a SA or a pre-adjustment model in X13 and TRAMO-SEATS — specification","text":"","code":"# \\donttest{ myseries <- ipi_c_eu[, \"FR\"] myreg1 <- regarima_x13(myseries, spec = \"RG5c\") myspec1 <- regarima_spec_x13(myreg1,              estimate.from = \"2005-10-01\",              outlier.from = \"2010-03-01\")  s_estimate(myreg1) #>  preliminary.check span tolerance #>               TRUE  All     1e-07 s_estimate(myspec1) #>  preliminary.check            span tolerance #>               TRUE From 2005-10-01     1e-07  s_transform(myreg1) #>  tfunction adjust aicdiff #>       Auto   None      -2 s_transform(myspec1) #>  tfunction adjust aicdiff #>       Auto   None      -2  s_usrdef(myreg1) #>   outlier outlier.coef variables variables.coef #> 1   FALSE        FALSE     FALSE          FALSE s_usrdef(myspec1) #>  outlier outlier.coef variables variables.coef #>    FALSE        FALSE     FALSE          FALSE  myspec2 <- regarima_spec_x13(myreg1, usrdef.outliersEnabled = TRUE,              usrdef.outliersType = c(\"LS\", \"AO\"),              usrdef.outliersDate = c(\"2009-10-01\", \"2005-02-01\")) myreg2 <- regarima(myseries, myspec2)  s_preOut(myreg2) #>   type       date coeff #> 1   LS 2009-10-01    NA #> 2   AO 2005-02-01    NA s_preOut(myspec2) #>   type       date coeff #> 1   LS 2009-10-01    NA #> 2   AO 2005-02-01    NA  var1 <- ts(rnorm(length(myseries))*10, start = start(myseries), frequency = 12) var2 <- ts(rnorm(length(myseries))*100, start = start(myseries), frequency = 12) var3 <- ts.union(var1, var2) myspec3 <- regarima_spec_x13(spec = \"RG5c\",                              usrdef.varEnabled = TRUE,                              usrdef.var = var3) myreg3 <- regarima(myseries, myspec3)  s_preVar(myspec3) #> $series #>                  var1         var2 #> Jan 1990 -10.67709165 -229.9484409 #> Feb 1990 -11.80488666  -43.8727684 #> Mar 1990  21.59175760  -64.9680607 #> Apr 1990  -4.17812648   42.4040947 #> May 1990   0.87654958    4.7049728 #> Jun 1990  -5.43709068 -128.5044066 #> Jul 1990  -1.19867022    4.5532358 #> Aug 1990  18.00624858 -144.9429700 #> Sep 1990  -7.94247350 -163.3704403 #> Oct 1990  -3.60360559  -51.7284962 #> Nov 1990   6.31460646  -99.1151430 #> Dec 1990 -16.63279352  -72.8485045 #> Jan 1991  -4.88005245   45.1951634 #> Feb 1991  -0.20752219   88.7181335 #> Mar 1991   9.33871038  126.4573401 #> Apr 1991  -2.32670878 -129.1419391 #> May 1991 -10.19630064   18.2510306 #> Jun 1991 -16.80328321   -8.9809675 #> Jul 1991  22.81394917  -11.2629276 #> Aug 1991 -10.42285303   16.2801338 #> Sep 1991   7.12307192   55.5861006 #> Oct 1991  12.20747981   85.3394680 #> Nov 1991   3.36018683  -19.4899361 #> Dec 1991  -2.79147937   -4.3411909 #> Jan 1992   0.76422131  -52.9438316 #> Feb 1992  -3.54509030  -59.8510599 #> Mar 1992  14.32658547   14.9297682 #> Apr 1992   0.02671474  125.5820916 #> May 1992   3.44012511  -23.4369528 #> Jun 1992  -8.30323380  142.2340276 #> Jul 1992   4.82115591   29.2127542 #> Aug 1992  -6.88660369  -73.6886751 #> Sep 1992 -10.93359720  -12.9996552 #> Oct 1992   8.41060978  220.0885652 #> Nov 1992  14.54136238  161.3081286 #> Dec 1992   1.37240272  -26.7499583 #> Jan 1993   3.25544925   12.7603168 #> Feb 1993  12.23728019  -37.0892736 #> Mar 1993 -10.53314136  -45.2402281 #> Apr 1993  18.40332640  119.7478248 #> May 1993 -22.31484275   96.1339696 #> Jun 1993  -5.95844719  109.9244552 #> Jul 1993  -2.30472754    5.3534542 #> Aug 1993  17.56315261   -7.1082557 #> Sep 1993   4.75705566  -26.5212622 #> Oct 1993   7.82644366 -108.7472787 #> Nov 1993 -11.46245649   11.2995341 #> Dec 1993   9.50180682  -36.8761608 #> Jan 1994  -3.45227990 -181.3818422 #> Feb 1994 -24.73551488  -72.7994368 #> Mar 1994  13.76264164  -32.3343456 #> Apr 1994  24.77145067   11.8178061 #> May 1994 -13.37234198   52.2721179 #> Jun 1994  20.24155203  -39.4712044 #> Jul 1994   8.59593181  -73.8262361 #> Aug 1994   7.28471344  131.9700103 #> Sep 1994  17.02971138  -54.7717472 #> Oct 1994 -13.49671966  211.6530743 #> Nov 1994   0.85960972   23.8889683 #> Dec 1994   2.04207089  -51.5969374 #> Jan 1995  -9.79050445  115.8752180 #> Feb 1995   5.94650797  -63.4357812 #> Mar 1995  10.39317096   86.2710827 #> Apr 1995 -12.78834279 -168.1573026 #> May 1995  -3.19978820 -163.6792119 #> Jun 1995 -18.72828606  143.0290161 #> Jul 1995   0.91322657  153.9376495 #> Aug 1995   7.12363770   -7.7210862 #> Sep 1995  -1.10119494   72.2232423 #> Oct 1995 -10.51575816   76.2012389 #> Nov 1995  -8.91401342 -110.5216744 #> Dec 1995  -6.19138043 -146.1168585 #> Jan 1996   2.55199046   29.5561895 #> Feb 1996  -4.39315917   65.8526506 #> Mar 1996  14.68149212   64.5142725 #> Apr 1996   8.32506126   62.3653458 #> May 1996  -9.13787407  231.5849301 #> Jun 1996  -2.72595426  -38.1598877 #> Jul 1996   7.51086555    3.1688164 #> Aug 1996  -0.76856255   77.6625400 #> Sep 1996   1.47101528 -198.3047831 #> Oct 1996  -3.21238201   -0.5446710 #> Nov 1996 -17.03140073   70.2411713 #> Dec 1996  -7.61038444  122.3164016 #> Jan 1997  -7.59025393  -14.1397453 #> Feb 1997   2.92608648  -49.5379010 #> Mar 1997   3.32236386   84.0522626 #> Apr 1997  -2.31934768   56.0050141 #> May 1997  -8.15807168  113.7045939 #> Jun 1997   2.16074797   47.3801310 #> Jul 1997 -11.38865785  -15.0440355 #> Aug 1997   1.40105007  213.8995235 #> Sep 1997  -6.62133906   21.7996549 #> Oct 1997  -5.34391766 -189.5969181 #> Nov 1997 -14.12830881  -14.2738393 #> Dec 1997  12.17203500  146.2425734 #> Jan 1998   4.25531888  107.4657122 #> Feb 1998  -1.20928613   65.5056672 #> Mar 1998   6.51430723  -12.3133658 #> Apr 1998   4.90205565  -92.9721805 #> May 1998   7.05192456  151.6556529 #> Jun 1998   8.05650671   -7.6792959 #> Jul 1998  -1.79990583  -36.9791935 #> Aug 1998  10.72861877   60.6232668 #> Sep 1998  -0.82523465  152.6737997 #> Oct 1998  10.72598758   -8.1510851 #> Nov 1998  -0.02079741  142.8358850 #> Dec 1998  -8.59905321  101.3571835 #> Jan 1999   7.48074130  -67.6577827 #> Feb 1999  13.56515448  -23.6565665 #> Mar 1999   4.00001599   50.5599115 #> Apr 1999   6.36256611 -252.7752928 #> May 1999 -18.66035907  -70.0668673 #> Jun 1999  -5.80927235    9.1607577 #> Jul 1999  10.93896134   85.2173585 #> Aug 1999  -5.32691097  112.3909322 #> Sep 1999   6.83984092   82.7869298 #> Oct 1999  -6.84263667 -136.8112810 #> Nov 1999  16.25943271   18.9759677 #> Dec 1999  -6.31734454  196.0755931 #> Jan 2000 -13.53779986  -80.6017715 #> Feb 2000   3.87122228   24.7350268 #> Mar 2000  -9.67667515   50.7828231 #> Apr 2000  -3.58785321  -49.5801751 #> May 2000  -5.86397434  -90.2102368 #> Jun 2000  16.12913478  101.2532538 #> Jul 2000   5.05671343  163.6540567 #> Aug 2000   0.24106090  -82.5520511 #> Sep 2000   2.95359647 -130.1284005 #> Oct 2000  12.75350360  -48.4042607 #> Nov 2000   2.04477180  -19.1561941 #> Dec 2000   1.86747913 -120.3991350 #> Jan 2001   7.09749842 -155.4565833 #> Feb 2001   3.75846729  -14.9289700 #> Mar 2001   4.05413237  -98.8248953 #> Apr 2001   3.30985753 -130.0530931 #> May 2001  15.93760511   76.4001921 #> Jun 2001   5.55075757  -76.4220023 #> Jul 2001 -12.09478318  105.9842219 #> Aug 2001  -2.25557951   57.4400444 #> Sep 2001  -3.42381835  145.4354816 #> Oct 2001 -17.36559496  192.6606505 #> Nov 2001   1.63560903   37.7693133 #> Dec 2001   2.98293513   45.7817317 #> Jan 2002   1.75870029  -31.4478166 #> Feb 2002 -14.05601011  -19.6337224 #> Mar 2002  -2.15255891   53.2207247 #> Apr 2002  -5.02680266 -129.6930815 #> May 2002  16.83881702  -11.6459881 #> Jun 2002 -17.25036625 -179.1435814 #> Jul 2002  -2.52554758  103.7638450 #> Aug 2002 -16.04868007  -75.1737315 #> Sep 2002  11.53376302  144.3320207 #> Oct 2002 -12.66363058   73.4189087 #> Nov 2002  -2.50127880 -105.4557986 #> Dec 2002  -5.38988584    3.0424727 #> Jan 2003  -6.11159385  -62.0591656 #> Feb 2003   8.07837347  -19.3502015 #> Mar 2003  13.57967557   39.3606874 #> Apr 2003  10.00928446   -3.3226158 #> May 2003 -12.58705305  -52.8722573 #> Jun 2003 -13.95429138  307.1007147 #> Jul 2003   3.26775093 -142.4723774 #> Aug 2003  -5.66269784   33.0701264 #> Sep 2003  -0.40093207 -175.9479023 #> Oct 2003  10.07425936 -101.6384201 #> Nov 2003 -13.73520862  103.6862040 #> Dec 2003   3.30858231    3.4712279 #> Jan 2004  11.43623543 -169.3691356 #> Feb 2004 -13.81713624  -37.4082127 #> Mar 2004  -8.44069552 -125.8362453 #> Apr 2004 -18.36583479  -60.8105630 #> May 2004  10.44170831 -136.8707861 #> Jun 2004   2.15210107  -94.2163446 #> Jul 2004   8.00349614   73.9857730 #> Aug 2004   7.14933031    2.2094341 #> Sep 2004  -3.17171209   54.8882732 #> Oct 2004 -22.52045124 -135.0698058 #> Nov 2004  15.05248197  -64.4467633 #> Dec 2004  -4.19147872  104.7844734 #> Jan 2005  -2.08179987  -32.1393364 #> Feb 2005  10.25008622    3.4325883 #> Mar 2005 -21.09352248  106.3948370 #> Apr 2005   5.81155983 -158.7608154 #> May 2005   4.27476044 -158.3462404 #> Jun 2005   3.09712183   11.0531327 #> Jul 2005  -3.48680801   24.6298837 #> Aug 2005   4.72684011    5.7149917 #> Sep 2005   7.02742649 -108.3303495 #> Oct 2005 -15.43797498   21.6301111 #> Nov 2005 -11.39419424  -82.3685525 #> Dec 2005   3.70802634 -150.0780397 #> Jan 2006   2.49291812  122.6567010 #> Feb 2006  12.40415284  -21.5867461 #> Mar 2006  -3.71594045  173.3784762 #> Apr 2006   9.08843016 -143.2535684 #> May 2006   7.72073385  -17.6478952 #> Jun 2006   3.66647135   75.6314868 #> Jul 2006   2.34063054  -98.0007712 #> Aug 2006  -8.24637494  -38.6424379 #> Sep 2006   7.93613760   38.1516254 #> Oct 2006   8.15375576  134.5768539 #> Nov 2006  -6.40412559   98.3748677 #> Dec 2006   1.54668564    8.6637298 #> Jan 2007 -13.19062104   46.9669925 #> Feb 2007  -5.59444239  -89.2900170 #> Mar 2007 -12.78683713    0.2229617 #> Apr 2007  -1.61854635   15.0747679 #> May 2007 -12.12698055  -57.4554552 #> Jun 2007  13.71345622   23.5160435 #> Jul 2007   0.82627704  126.5858408 #> Aug 2007 -12.65853773 -139.0298039 #> Sep 2007  11.74275795   11.5795724 #> Oct 2007   6.95991675   89.2577296 #> Nov 2007   8.00070376    3.8752879 #> Dec 2007 -10.02196891   -3.8372698 #> Jan 2008  -6.77115667   81.1453346 #> Feb 2008   7.20963599    3.3486905 #> Mar 2008   9.60168144   66.3318866 #> Apr 2008  -1.45665667  -22.0091795 #> May 2008  15.05255540   -1.5736545 #> Jun 2008   6.78180406  208.7713501 #> Jul 2008  -2.65552196  149.6586647 #> Aug 2008  -4.58132537  -30.9764025 #> Sep 2008  17.38431533  158.4290933 #> Oct 2008  -0.13105949 -114.7278380 #> Nov 2008  -7.94353354   93.7994138 #> Dec 2008   2.55333393 -117.6473378 #> Jan 2009  -8.78777648  140.2133012 #> Feb 2009  -5.02384014  -17.7175377 #> Mar 2009   9.18235108  -65.0604263 #> Apr 2009  -4.15556110 -122.9364408 #> May 2009  -4.97454127   25.1325895 #> Jun 2009   1.22983974 -156.3215351 #> Jul 2009  -9.94093841   81.3079991 #> Aug 2009   4.85937859  -11.0848678 #> Sep 2009  -5.51041758  -76.1172061 #> Oct 2009   1.66600822   82.9512582 #> Nov 2009   0.95564919 -105.5171964 #> Dec 2009   9.37361737   22.2967963 #> Jan 2010  -7.78592244  244.1195038 #> Feb 2010  -3.46014963  200.0641700 #> Mar 2010   1.45927947  -75.4805825 #> Apr 2010  -6.79378277 -130.3238961 #> May 2010  -6.13698253   24.6026158 #> Jun 2010  22.02935147   54.8893707 #> Jul 2010  -3.28772531   48.6414289 #> Aug 2010  17.51776850  -85.7244463 #> Sep 2010  -9.71651737  -20.8889627 #> Oct 2010 -16.89546894   -2.1828351 #> Nov 2010 -14.81386178   37.1728862 #> Dec 2010  24.26894783 -230.0614875 #> Jan 2011  -2.28460020  -68.6391490 #> Feb 2011  11.13283521   82.3954712 #> Mar 2011  -4.37063852   67.1560953 #> Apr 2011  12.64884610  -13.6811085 #> May 2011  14.36597731  -32.4855419 #> Jun 2011  -9.18664322  116.5364420 #> Jul 2011 -19.14602512  -90.3741440 #> Aug 2011   1.14969531   98.5612115 #> Sep 2011  15.10348121  -12.6323527 #> Oct 2011  -0.09052613 -144.3967173 #> Nov 2011  -1.35856744    3.2154077 #> Dec 2011  -3.36250668 -211.7716447 #> Jan 2012   3.57796527  166.5816928 #> Feb 2012   3.40498580   57.5671055 #> Mar 2012  30.97230704   -0.2235961 #> Apr 2012   6.77352741  -72.2014992 #> May 2012   3.85994964   44.8672361 #> Jun 2012  -8.38842632    5.1736240 #> Jul 2012  -5.30027590 -125.3649454 #> Aug 2012 -22.93182084   55.8374959 #> Sep 2012  18.55263642   29.8702402 #> Oct 2012  -6.24714964  -41.5528828 #> Nov 2012   1.75872582 -162.5374469 #> Dec 2012 -13.65788853   29.9647475 #> Jan 2013 -13.45518474  -14.6007948 #> Feb 2013   9.47265271   33.0470436 #> Mar 2013  -1.15739671  -34.4358479 #> Apr 2013  -4.29404494   89.1762344 #> May 2013   0.79631976  -13.6294335 #> Jun 2013  10.06463994   28.1191185 #> Jul 2013  17.54518747  -11.0812460 #> Aug 2013  -1.19361311   -3.6247432 #> Sep 2013  16.43998625    2.4977216 #> Oct 2013 -13.10997765   13.1053564 #> Nov 2013   3.62701424  259.5523922 #> Dec 2013  13.69665491   41.9283992 #> Jan 2014  -3.48512400  -28.1698421 #> Feb 2014  -5.45470652   54.4863114 #> Mar 2014  -0.20519678   86.8230689 #> Apr 2014  -3.38849889  -20.6675268 #> May 2014   1.85592100    7.4947320 #> Jun 2014   3.45862657 -225.0901330 #> Jul 2014  -7.93332374  150.0961160 #> Aug 2014  -7.48631612  -48.2768943 #> Sep 2014 -18.46666644   60.5210639 #> Oct 2014 -15.56824415   80.0685483 #> Nov 2014   0.02354941   31.8362191 #> Dec 2014  14.70206284   10.3472107 #> Jan 2015  -7.77484495  -65.7636600 #> Feb 2015   7.04613433    3.3874701 #> Mar 2015   6.96606398  -64.9756559 #> Apr 2015   9.31972929   91.1239650 #> May 2015  26.16178688   -4.7272921 #> Jun 2015 -14.77492275 -117.8515013 #> Jul 2015   0.74677229  224.2660967 #> Aug 2015  -6.40770175  146.7485607 #> Sep 2015   1.14925465   55.2061735 #> Oct 2015   7.47021300   35.9622515 #> Nov 2015 -11.18479256  183.7521669 #> Dec 2015   3.41004819   88.3273304 #> Jan 2016   1.25031186 -171.3201462 #> Feb 2016   3.11369721   29.3728600 #> Mar 2016   4.26443804  133.0807535 #> Apr 2016 -12.69579318    0.1025496 #> May 2016   8.69811052   94.4012124 #> Jun 2016  -0.23574630  -16.3110155 #> Jul 2016   6.46068260    2.0936334 #> Aug 2016  12.32672999   55.1059233 #> Sep 2016 -12.80410543   75.4814726 #> Oct 2016  -1.76086170 -101.7904646 #> Nov 2016  11.48912321  -32.0525550 #> Dec 2016   1.06409425  -45.7239570 #> Jan 2017  10.52599358 -216.8675688 #> Feb 2017   0.63508668    6.6409650 #> Mar 2017   7.60288668  151.3114967 #> Apr 2017  -5.83391234   24.2563643 #> May 2017  -8.33176971   19.6097401 #> Jun 2017  -9.55279258  -65.6023781 #> Jul 2017   4.68197456  -47.8355050 #> Aug 2017  14.89361598   56.8878744 #> Sep 2017   8.45637803 -210.2626810 #> Oct 2017  -0.90330359   -0.3301496 #> Nov 2017  -7.60974092   41.6918015 #> Dec 2017  -4.22703485   47.3867599 #> Jan 2018 -11.16990551   -6.2925119 #> Feb 2018 -13.73205437 -163.6219349 #> Mar 2018  -4.64627202  116.8229652 #> Apr 2018  -7.51982369  -40.8686195 #> May 2018  -4.07974543   -9.4117059 #> Jun 2018   1.77182569   46.7589309 #> Jul 2018   9.99326344  -82.8195377 #> Aug 2018   1.16269256   39.6813229 #> Sep 2018 -18.35065315   24.4475509 #> Oct 2018  -2.98695682   62.7437586 #> Nov 2018   3.14652720  -80.5206472 #> Dec 2018 -10.82466160 -193.2053070 #> Jan 2019   2.21793014   71.7082011 #> Feb 2019  -0.49851303  179.2486559 #> Mar 2019  11.07534869  112.3194865 #> Apr 2019  -9.93360619  160.9947684 #> May 2019  19.24843474  173.2799496 #> Jun 2019  -5.56762404  127.5703717 #> Jul 2019   3.29474662   42.4007988 #> Aug 2019  17.58286351  -13.7778131 #> Sep 2019  12.73909790  -59.7937324 #> Oct 2019  -5.83885195  -72.2073272 #> Nov 2019  -3.27692378    7.2762483 #> Dec 2019   1.45241262  147.3362511 #> Jan 2020   2.14101138  -31.6206077 #> Feb 2020   0.11554669 -141.4721408 #> Mar 2020  12.19699084 -198.6179040 #> Apr 2020 -10.30643641   70.5734028 #> May 2020   7.64734975  -79.0427631 #> Jun 2020  -5.14982604   75.8480158 #> Jul 2020  17.40986972  207.8375621 #> Aug 2020  10.05845241  191.9134900 #> Sep 2020 -11.07352945    7.5529822 #> Oct 2020  -6.27882790   26.7751527 #> Nov 2020 -14.79501948   43.6290736 #> Dec 2020   1.54343173  120.9748781 #>  #> $description #>           type coeff #> var1 Undefined    NA #> var2 Undefined    NA #>  s_preVar(myreg3) #> $series #>                  var1         var2 #> Jan 1990 -10.67709165 -229.9484409 #> Feb 1990 -11.80488666  -43.8727684 #> Mar 1990  21.59175760  -64.9680607 #> Apr 1990  -4.17812648   42.4040947 #> May 1990   0.87654958    4.7049728 #> Jun 1990  -5.43709068 -128.5044066 #> Jul 1990  -1.19867022    4.5532358 #> Aug 1990  18.00624858 -144.9429700 #> Sep 1990  -7.94247350 -163.3704403 #> Oct 1990  -3.60360559  -51.7284962 #> Nov 1990   6.31460646  -99.1151430 #> Dec 1990 -16.63279352  -72.8485045 #> Jan 1991  -4.88005245   45.1951634 #> Feb 1991  -0.20752219   88.7181335 #> Mar 1991   9.33871038  126.4573401 #> Apr 1991  -2.32670878 -129.1419391 #> May 1991 -10.19630064   18.2510306 #> Jun 1991 -16.80328321   -8.9809675 #> Jul 1991  22.81394917  -11.2629276 #> Aug 1991 -10.42285303   16.2801338 #> Sep 1991   7.12307192   55.5861006 #> Oct 1991  12.20747981   85.3394680 #> Nov 1991   3.36018683  -19.4899361 #> Dec 1991  -2.79147937   -4.3411909 #> Jan 1992   0.76422131  -52.9438316 #> Feb 1992  -3.54509030  -59.8510599 #> Mar 1992  14.32658547   14.9297682 #> Apr 1992   0.02671474  125.5820916 #> May 1992   3.44012511  -23.4369528 #> Jun 1992  -8.30323380  142.2340276 #> Jul 1992   4.82115591   29.2127542 #> Aug 1992  -6.88660369  -73.6886751 #> Sep 1992 -10.93359720  -12.9996552 #> Oct 1992   8.41060978  220.0885652 #> Nov 1992  14.54136238  161.3081286 #> Dec 1992   1.37240272  -26.7499583 #> Jan 1993   3.25544925   12.7603168 #> Feb 1993  12.23728019  -37.0892736 #> Mar 1993 -10.53314136  -45.2402281 #> Apr 1993  18.40332640  119.7478248 #> May 1993 -22.31484275   96.1339696 #> Jun 1993  -5.95844719  109.9244552 #> Jul 1993  -2.30472754    5.3534542 #> Aug 1993  17.56315261   -7.1082557 #> Sep 1993   4.75705566  -26.5212622 #> Oct 1993   7.82644366 -108.7472787 #> Nov 1993 -11.46245649   11.2995341 #> Dec 1993   9.50180682  -36.8761608 #> Jan 1994  -3.45227990 -181.3818422 #> Feb 1994 -24.73551488  -72.7994368 #> Mar 1994  13.76264164  -32.3343456 #> Apr 1994  24.77145067   11.8178061 #> May 1994 -13.37234198   52.2721179 #> Jun 1994  20.24155203  -39.4712044 #> Jul 1994   8.59593181  -73.8262361 #> Aug 1994   7.28471344  131.9700103 #> Sep 1994  17.02971138  -54.7717472 #> Oct 1994 -13.49671966  211.6530743 #> Nov 1994   0.85960972   23.8889683 #> Dec 1994   2.04207089  -51.5969374 #> Jan 1995  -9.79050445  115.8752180 #> Feb 1995   5.94650797  -63.4357812 #> Mar 1995  10.39317096   86.2710827 #> Apr 1995 -12.78834279 -168.1573026 #> May 1995  -3.19978820 -163.6792119 #> Jun 1995 -18.72828606  143.0290161 #> Jul 1995   0.91322657  153.9376495 #> Aug 1995   7.12363770   -7.7210862 #> Sep 1995  -1.10119494   72.2232423 #> Oct 1995 -10.51575816   76.2012389 #> Nov 1995  -8.91401342 -110.5216744 #> Dec 1995  -6.19138043 -146.1168585 #> Jan 1996   2.55199046   29.5561895 #> Feb 1996  -4.39315917   65.8526506 #> Mar 1996  14.68149212   64.5142725 #> Apr 1996   8.32506126   62.3653458 #> May 1996  -9.13787407  231.5849301 #> Jun 1996  -2.72595426  -38.1598877 #> Jul 1996   7.51086555    3.1688164 #> Aug 1996  -0.76856255   77.6625400 #> Sep 1996   1.47101528 -198.3047831 #> Oct 1996  -3.21238201   -0.5446710 #> Nov 1996 -17.03140073   70.2411713 #> Dec 1996  -7.61038444  122.3164016 #> Jan 1997  -7.59025393  -14.1397453 #> Feb 1997   2.92608648  -49.5379010 #> Mar 1997   3.32236386   84.0522626 #> Apr 1997  -2.31934768   56.0050141 #> May 1997  -8.15807168  113.7045939 #> Jun 1997   2.16074797   47.3801310 #> Jul 1997 -11.38865785  -15.0440355 #> Aug 1997   1.40105007  213.8995235 #> Sep 1997  -6.62133906   21.7996549 #> Oct 1997  -5.34391766 -189.5969181 #> Nov 1997 -14.12830881  -14.2738393 #> Dec 1997  12.17203500  146.2425734 #> Jan 1998   4.25531888  107.4657122 #> Feb 1998  -1.20928613   65.5056672 #> Mar 1998   6.51430723  -12.3133658 #> Apr 1998   4.90205565  -92.9721805 #> May 1998   7.05192456  151.6556529 #> Jun 1998   8.05650671   -7.6792959 #> Jul 1998  -1.79990583  -36.9791935 #> Aug 1998  10.72861877   60.6232668 #> Sep 1998  -0.82523465  152.6737997 #> Oct 1998  10.72598758   -8.1510851 #> Nov 1998  -0.02079741  142.8358850 #> Dec 1998  -8.59905321  101.3571835 #> Jan 1999   7.48074130  -67.6577827 #> Feb 1999  13.56515448  -23.6565665 #> Mar 1999   4.00001599   50.5599115 #> Apr 1999   6.36256611 -252.7752928 #> May 1999 -18.66035907  -70.0668673 #> Jun 1999  -5.80927235    9.1607577 #> Jul 1999  10.93896134   85.2173585 #> Aug 1999  -5.32691097  112.3909322 #> Sep 1999   6.83984092   82.7869298 #> Oct 1999  -6.84263667 -136.8112810 #> Nov 1999  16.25943271   18.9759677 #> Dec 1999  -6.31734454  196.0755931 #> Jan 2000 -13.53779986  -80.6017715 #> Feb 2000   3.87122228   24.7350268 #> Mar 2000  -9.67667515   50.7828231 #> Apr 2000  -3.58785321  -49.5801751 #> May 2000  -5.86397434  -90.2102368 #> Jun 2000  16.12913478  101.2532538 #> Jul 2000   5.05671343  163.6540567 #> Aug 2000   0.24106090  -82.5520511 #> Sep 2000   2.95359647 -130.1284005 #> Oct 2000  12.75350360  -48.4042607 #> Nov 2000   2.04477180  -19.1561941 #> Dec 2000   1.86747913 -120.3991350 #> Jan 2001   7.09749842 -155.4565833 #> Feb 2001   3.75846729  -14.9289700 #> Mar 2001   4.05413237  -98.8248953 #> Apr 2001   3.30985753 -130.0530931 #> May 2001  15.93760511   76.4001921 #> Jun 2001   5.55075757  -76.4220023 #> Jul 2001 -12.09478318  105.9842219 #> Aug 2001  -2.25557951   57.4400444 #> Sep 2001  -3.42381835  145.4354816 #> Oct 2001 -17.36559496  192.6606505 #> Nov 2001   1.63560903   37.7693133 #> Dec 2001   2.98293513   45.7817317 #> Jan 2002   1.75870029  -31.4478166 #> Feb 2002 -14.05601011  -19.6337224 #> Mar 2002  -2.15255891   53.2207247 #> Apr 2002  -5.02680266 -129.6930815 #> May 2002  16.83881702  -11.6459881 #> Jun 2002 -17.25036625 -179.1435814 #> Jul 2002  -2.52554758  103.7638450 #> Aug 2002 -16.04868007  -75.1737315 #> Sep 2002  11.53376302  144.3320207 #> Oct 2002 -12.66363058   73.4189087 #> Nov 2002  -2.50127880 -105.4557986 #> Dec 2002  -5.38988584    3.0424727 #> Jan 2003  -6.11159385  -62.0591656 #> Feb 2003   8.07837347  -19.3502015 #> Mar 2003  13.57967557   39.3606874 #> Apr 2003  10.00928446   -3.3226158 #> May 2003 -12.58705305  -52.8722573 #> Jun 2003 -13.95429138  307.1007147 #> Jul 2003   3.26775093 -142.4723774 #> Aug 2003  -5.66269784   33.0701264 #> Sep 2003  -0.40093207 -175.9479023 #> Oct 2003  10.07425936 -101.6384201 #> Nov 2003 -13.73520862  103.6862040 #> Dec 2003   3.30858231    3.4712279 #> Jan 2004  11.43623543 -169.3691356 #> Feb 2004 -13.81713624  -37.4082127 #> Mar 2004  -8.44069552 -125.8362453 #> Apr 2004 -18.36583479  -60.8105630 #> May 2004  10.44170831 -136.8707861 #> Jun 2004   2.15210107  -94.2163446 #> Jul 2004   8.00349614   73.9857730 #> Aug 2004   7.14933031    2.2094341 #> Sep 2004  -3.17171209   54.8882732 #> Oct 2004 -22.52045124 -135.0698058 #> Nov 2004  15.05248197  -64.4467633 #> Dec 2004  -4.19147872  104.7844734 #> Jan 2005  -2.08179987  -32.1393364 #> Feb 2005  10.25008622    3.4325883 #> Mar 2005 -21.09352248  106.3948370 #> Apr 2005   5.81155983 -158.7608154 #> May 2005   4.27476044 -158.3462404 #> Jun 2005   3.09712183   11.0531327 #> Jul 2005  -3.48680801   24.6298837 #> Aug 2005   4.72684011    5.7149917 #> Sep 2005   7.02742649 -108.3303495 #> Oct 2005 -15.43797498   21.6301111 #> Nov 2005 -11.39419424  -82.3685525 #> Dec 2005   3.70802634 -150.0780397 #> Jan 2006   2.49291812  122.6567010 #> Feb 2006  12.40415284  -21.5867461 #> Mar 2006  -3.71594045  173.3784762 #> Apr 2006   9.08843016 -143.2535684 #> May 2006   7.72073385  -17.6478952 #> Jun 2006   3.66647135   75.6314868 #> Jul 2006   2.34063054  -98.0007712 #> Aug 2006  -8.24637494  -38.6424379 #> Sep 2006   7.93613760   38.1516254 #> Oct 2006   8.15375576  134.5768539 #> Nov 2006  -6.40412559   98.3748677 #> Dec 2006   1.54668564    8.6637298 #> Jan 2007 -13.19062104   46.9669925 #> Feb 2007  -5.59444239  -89.2900170 #> Mar 2007 -12.78683713    0.2229617 #> Apr 2007  -1.61854635   15.0747679 #> May 2007 -12.12698055  -57.4554552 #> Jun 2007  13.71345622   23.5160435 #> Jul 2007   0.82627704  126.5858408 #> Aug 2007 -12.65853773 -139.0298039 #> Sep 2007  11.74275795   11.5795724 #> Oct 2007   6.95991675   89.2577296 #> Nov 2007   8.00070376    3.8752879 #> Dec 2007 -10.02196891   -3.8372698 #> Jan 2008  -6.77115667   81.1453346 #> Feb 2008   7.20963599    3.3486905 #> Mar 2008   9.60168144   66.3318866 #> Apr 2008  -1.45665667  -22.0091795 #> May 2008  15.05255540   -1.5736545 #> Jun 2008   6.78180406  208.7713501 #> Jul 2008  -2.65552196  149.6586647 #> Aug 2008  -4.58132537  -30.9764025 #> Sep 2008  17.38431533  158.4290933 #> Oct 2008  -0.13105949 -114.7278380 #> Nov 2008  -7.94353354   93.7994138 #> Dec 2008   2.55333393 -117.6473378 #> Jan 2009  -8.78777648  140.2133012 #> Feb 2009  -5.02384014  -17.7175377 #> Mar 2009   9.18235108  -65.0604263 #> Apr 2009  -4.15556110 -122.9364408 #> May 2009  -4.97454127   25.1325895 #> Jun 2009   1.22983974 -156.3215351 #> Jul 2009  -9.94093841   81.3079991 #> Aug 2009   4.85937859  -11.0848678 #> Sep 2009  -5.51041758  -76.1172061 #> Oct 2009   1.66600822   82.9512582 #> Nov 2009   0.95564919 -105.5171964 #> Dec 2009   9.37361737   22.2967963 #> Jan 2010  -7.78592244  244.1195038 #> Feb 2010  -3.46014963  200.0641700 #> Mar 2010   1.45927947  -75.4805825 #> Apr 2010  -6.79378277 -130.3238961 #> May 2010  -6.13698253   24.6026158 #> Jun 2010  22.02935147   54.8893707 #> Jul 2010  -3.28772531   48.6414289 #> Aug 2010  17.51776850  -85.7244463 #> Sep 2010  -9.71651737  -20.8889627 #> Oct 2010 -16.89546894   -2.1828351 #> Nov 2010 -14.81386178   37.1728862 #> Dec 2010  24.26894783 -230.0614875 #> Jan 2011  -2.28460020  -68.6391490 #> Feb 2011  11.13283521   82.3954712 #> Mar 2011  -4.37063852   67.1560953 #> Apr 2011  12.64884610  -13.6811085 #> May 2011  14.36597731  -32.4855419 #> Jun 2011  -9.18664322  116.5364420 #> Jul 2011 -19.14602512  -90.3741440 #> Aug 2011   1.14969531   98.5612115 #> Sep 2011  15.10348121  -12.6323527 #> Oct 2011  -0.09052613 -144.3967173 #> Nov 2011  -1.35856744    3.2154077 #> Dec 2011  -3.36250668 -211.7716447 #> Jan 2012   3.57796527  166.5816928 #> Feb 2012   3.40498580   57.5671055 #> Mar 2012  30.97230704   -0.2235961 #> Apr 2012   6.77352741  -72.2014992 #> May 2012   3.85994964   44.8672361 #> Jun 2012  -8.38842632    5.1736240 #> Jul 2012  -5.30027590 -125.3649454 #> Aug 2012 -22.93182084   55.8374959 #> Sep 2012  18.55263642   29.8702402 #> Oct 2012  -6.24714964  -41.5528828 #> Nov 2012   1.75872582 -162.5374469 #> Dec 2012 -13.65788853   29.9647475 #> Jan 2013 -13.45518474  -14.6007948 #> Feb 2013   9.47265271   33.0470436 #> Mar 2013  -1.15739671  -34.4358479 #> Apr 2013  -4.29404494   89.1762344 #> May 2013   0.79631976  -13.6294335 #> Jun 2013  10.06463994   28.1191185 #> Jul 2013  17.54518747  -11.0812460 #> Aug 2013  -1.19361311   -3.6247432 #> Sep 2013  16.43998625    2.4977216 #> Oct 2013 -13.10997765   13.1053564 #> Nov 2013   3.62701424  259.5523922 #> Dec 2013  13.69665491   41.9283992 #> Jan 2014  -3.48512400  -28.1698421 #> Feb 2014  -5.45470652   54.4863114 #> Mar 2014  -0.20519678   86.8230689 #> Apr 2014  -3.38849889  -20.6675268 #> May 2014   1.85592100    7.4947320 #> Jun 2014   3.45862657 -225.0901330 #> Jul 2014  -7.93332374  150.0961160 #> Aug 2014  -7.48631612  -48.2768943 #> Sep 2014 -18.46666644   60.5210639 #> Oct 2014 -15.56824415   80.0685483 #> Nov 2014   0.02354941   31.8362191 #> Dec 2014  14.70206284   10.3472107 #> Jan 2015  -7.77484495  -65.7636600 #> Feb 2015   7.04613433    3.3874701 #> Mar 2015   6.96606398  -64.9756559 #> Apr 2015   9.31972929   91.1239650 #> May 2015  26.16178688   -4.7272921 #> Jun 2015 -14.77492275 -117.8515013 #> Jul 2015   0.74677229  224.2660967 #> Aug 2015  -6.40770175  146.7485607 #> Sep 2015   1.14925465   55.2061735 #> Oct 2015   7.47021300   35.9622515 #> Nov 2015 -11.18479256  183.7521669 #> Dec 2015   3.41004819   88.3273304 #> Jan 2016   1.25031186 -171.3201462 #> Feb 2016   3.11369721   29.3728600 #> Mar 2016   4.26443804  133.0807535 #> Apr 2016 -12.69579318    0.1025496 #> May 2016   8.69811052   94.4012124 #> Jun 2016  -0.23574630  -16.3110155 #> Jul 2016   6.46068260    2.0936334 #> Aug 2016  12.32672999   55.1059233 #> Sep 2016 -12.80410543   75.4814726 #> Oct 2016  -1.76086170 -101.7904646 #> Nov 2016  11.48912321  -32.0525550 #> Dec 2016   1.06409425  -45.7239570 #> Jan 2017  10.52599358 -216.8675688 #> Feb 2017   0.63508668    6.6409650 #> Mar 2017   7.60288668  151.3114967 #> Apr 2017  -5.83391234   24.2563643 #> May 2017  -8.33176971   19.6097401 #> Jun 2017  -9.55279258  -65.6023781 #> Jul 2017   4.68197456  -47.8355050 #> Aug 2017  14.89361598   56.8878744 #> Sep 2017   8.45637803 -210.2626810 #> Oct 2017  -0.90330359   -0.3301496 #> Nov 2017  -7.60974092   41.6918015 #> Dec 2017  -4.22703485   47.3867599 #> Jan 2018 -11.16990551   -6.2925119 #> Feb 2018 -13.73205437 -163.6219349 #> Mar 2018  -4.64627202  116.8229652 #> Apr 2018  -7.51982369  -40.8686195 #> May 2018  -4.07974543   -9.4117059 #> Jun 2018   1.77182569   46.7589309 #> Jul 2018   9.99326344  -82.8195377 #> Aug 2018   1.16269256   39.6813229 #> Sep 2018 -18.35065315   24.4475509 #> Oct 2018  -2.98695682   62.7437586 #> Nov 2018   3.14652720  -80.5206472 #> Dec 2018 -10.82466160 -193.2053070 #> Jan 2019   2.21793014   71.7082011 #> Feb 2019  -0.49851303  179.2486559 #> Mar 2019  11.07534869  112.3194865 #> Apr 2019  -9.93360619  160.9947684 #> May 2019  19.24843474  173.2799496 #> Jun 2019  -5.56762404  127.5703717 #> Jul 2019   3.29474662   42.4007988 #> Aug 2019  17.58286351  -13.7778131 #> Sep 2019  12.73909790  -59.7937324 #> Oct 2019  -5.83885195  -72.2073272 #> Nov 2019  -3.27692378    7.2762483 #> Dec 2019   1.45241262  147.3362511 #> Jan 2020   2.14101138  -31.6206077 #> Feb 2020   0.11554669 -141.4721408 #> Mar 2020  12.19699084 -198.6179040 #> Apr 2020 -10.30643641   70.5734028 #> May 2020   7.64734975  -79.0427631 #> Jun 2020  -5.14982604   75.8480158 #> Jul 2020  17.40986972  207.8375621 #> Aug 2020  10.05845241  191.9134900 #> Sep 2020 -11.07352945    7.5529822 #> Oct 2020  -6.27882790   26.7751527 #> Nov 2020 -14.79501948   43.6290736 #> Dec 2020   1.54343173  120.9748781 #>  #> $description #>           type coeff #> var1 Undefined    NA #> var2 Undefined    NA #>   s_td(myreg1) #>       option autoadjust leapyear stocktd   test #>  TradingDays       TRUE LeapYear       0 Remove s_td(myspec1) #>       option autoadjust leapyear stocktd   test #>  TradingDays       TRUE LeapYear       0 Remove  s_easter(myreg1) #>  enabled julian duration test #>     TRUE  FALSE        8  Add s_easter(myspec1) #>  enabled julian duration test #>     TRUE  FALSE        8  Add  s_out(myreg1) #>  enabled span   ao   tc   ls    so usedefcv cv method tcrate #>     TRUE  All TRUE TRUE TRUE FALSE     TRUE  4 AddOne    0.7 s_out(myspec1) #>  enabled            span   ao   tc   ls    so usedefcv cv method tcrate #>     TRUE From 2010-03-01 TRUE TRUE TRUE FALSE     TRUE  4 AddOne    0.7  s_arima(myreg1) #>  enabled automdl.acceptdefault automdl.cancel automdl.ub1 automdl.ub2 #>     TRUE                 FALSE            0.1    1.041667        0.88 #>  automdl.mixed automdl.balanced automdl.armalimit automdl.reducecv #>           TRUE            FALSE                 1          0.14286 #>  automdl.ljungboxlimit automdl.ubfinal arima.mu arima.p arima.d arima.q #>                   0.95            1.05    FALSE       0       1       1 #>  arima.bp arima.bd arima.bq arima.coef #>         0        1        1      FALSE s_arima(myspec1) #>  enabled automdl.acceptdefault automdl.cancel automdl.ub1 automdl.ub2 #>     TRUE                 FALSE            0.1    1.041667        0.88 #>  automdl.mixed automdl.balanced automdl.armalimit automdl.reducecv #>           TRUE            FALSE                 1          0.14286 #>  automdl.ljungboxlimit automdl.ubfinal arima.mu arima.p arima.d arima.q #>                   0.95            1.05    FALSE       0       1       1 #>  arima.bp arima.bd arima.bq arima.coef #>         0        1        1      FALSE  myspec4 <- regarima_spec_x13(myreg1, automdl.enabled = FALSE,              arima.coefEnabled = TRUE,              arima.p = 1,arima.q = 1, arima.bp = 1, arima.bq = 1,              arima.coef = rep(0.2, 4),              arima.coefType = rep(\"Initial\", 4)) myreg4 <- regarima(myseries, myspec4)  s_arimaCoef(myreg4) #>              Type Value #> Phi(1)    Initial   0.2 #> Theta(1)  Initial   0.2 #> BPhi(1)   Initial   0.2 #> BTheta(1) Initial   0.2 s_arimaCoef(myspec4) #>              Type Value #> Phi(1)    Initial   0.2 #> Theta(1)  Initial   0.2 #> BPhi(1)   Initial   0.2 #> BTheta(1) Initial   0.2  s_fcst(myreg1) #>  horizon #>       -2 s_fcst(myspec1) #>  horizon #>       -2  s_span(myreg1) #>          type d0 d1 n0 n1 #> estimate  All NA NA  0  0 #> outlier   All NA NA  0  0 s_span(myspec1) #>          type         d0 d1 n0 n1 #> estimate From 2005-10-01 NA  0  0 #> outlier  From 2010-03-01 NA  0  0  myspec5 <- x13_spec(spec = \"RSA5c\", x11.seasonalComp = FALSE) mysa5 <- x13(myseries, myspec5)  s_x11(mysa5) #>   x11.mode x11.seasonalComp x11.lsigma x11.usigma x11.trendAuto x11.trendma #>  Undefined            FALSE        1.5        2.5          TRUE          13 #>  x11.seasonalma x11.fcasts x11.bcasts x11.calendarSigma x11.sigmaVector #>             Msr         -1          0              None              NA #>  x11.excludeFcasts #>              FALSE s_x11(myspec5) #>   x11.mode x11.seasonalComp x11.lsigma x11.usigma x11.trendAuto x11.trendma #>  Undefined            FALSE        1.5        2.5          TRUE          13 #>  x11.seasonalma x11.fcasts x11.bcasts x11.calendarSigma x11.sigmaVector #>             Msr         -1          0              None              NA #>  x11.excludeFcasts #>              FALSE  myspec6 <- tramoseats_spec(spec = \"RSAfull\", seats.approx = \"Noisy\") mysa6 <- tramoseats(myseries, myspec6)  s_seats(mysa6) #>  seats.predictionLength seats.approx seats.maBoundary seats.trendBoundary #>                      -1        Noisy             0.95                 0.5 #>  seats.seasdBoundary seats.seasdBoundary1 seats.seasTol seats.method #>                  0.8                  0.8             2       Burman s_seats(mysa6) #>  seats.predictionLength seats.approx seats.maBoundary seats.trendBoundary #>                      -1        Noisy             0.95                 0.5 #>  seats.seasdBoundary seats.seasdBoundary1 seats.seasTol seats.method #>                  0.8                  0.8             2       Burman # }"},{"path":"/reference/tramoseats.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal Adjustment with TRAMO-SEATS — tramoseats","title":"Seasonal Adjustment with TRAMO-SEATS — tramoseats","text":"Functions estimate seasonally adjusted series (sa) TRAMO-SEATS method. achieved decomposing time series (y) trend-cycle (t), seasonal component (s) irregular component (). Calendar-related movements can corrected pre-treatment (TRAMO) step. tramoseats returns preformatted result jtramoseats returns Java objects seasonal adjustment.","code":""},{"path":"/reference/tramoseats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal Adjustment with TRAMO-SEATS — tramoseats","text":"","code":"jtramoseats(   series,   spec = c(\"RSAfull\", \"RSA0\", \"RSA1\", \"RSA2\", \"RSA3\", \"RSA4\", \"RSA5\"),   userdefined = NULL )  tramoseats(   series,   spec = c(\"RSAfull\", \"RSA0\", \"RSA1\", \"RSA2\", \"RSA3\", \"RSA4\", \"RSA5\"),   userdefined = NULL )"},{"path":"/reference/tramoseats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal Adjustment with TRAMO-SEATS — tramoseats","text":"series univariate time series spec TRAMO-SEATS model specification. can name (character) pre-defined TRAMO-SEATS 'JDemetra+' model specification (see Details), object class c(\"SA_spec\",\"TRAMO_SEATS\"). default value \"RSAfull\". userdefined character vector containing additional output variables (see user_defined_variables).","code":""},{"path":"/reference/tramoseats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal Adjustment with TRAMO-SEATS — tramoseats","text":"jtramoseats returns jSA object contains results seasonal adjustment without formatting. Therefore, computation faster function tramoseats. results seasonal adjustment can extracted function get_indicators. tramoseats returns object class c(\"SA\",\"TRAMO_SEATS\"), , list containing : regarima object class c(\"regarima\",\"TRAMO_SEATS\"). info Value section function regarima. decomposition object class \"decomposition_SEATS\", five-element list: specification list SEATS algorithm specification. See also function tramoseats_spec. mode decomposition mode model SEATS model list: model, sa, trend, seasonal, transitory, irregular, element matrix estimated coefficients. linearized time series matrix (mts) stochastic series decomposition (input series y_lin, seasonally adjusted series sa_lin, trend t_lin, seasonal s_lin, irregular i_lin) components time series matrix (mts) decomposition components (input series y_cmp, seasonally adjusted series sa_cmp, trend t_cmp, seasonal component s_cmp, irregular i_cmp) final object class c(\"final\",\"mts\",\"ts\",\"matrix\"). matrix contains final results seasonal adjustment: original time series (y)forecast (y_f), trend (t) forecast (t_f), seasonally adjusted series (sa) forecast (sa_f), seasonal component (s)forecast (s_f), irregular component () forecast (i_f). diagnostics object class \"diagnostics\", list containing three types tests results: variance_decomposition data.frame tests results relative contribution components stationary portion variance original series, removal long term trend; residuals_test data.frame tests results presence seasonality residuals (including statistic test values, corresponding p-values parameters description); combined_test combined tests stable seasonality entire series. format two-element list : tests_for_stable_seasonality, data.frame containing tests results (including statistic test value, p-value parameters description), combined_seasonality_test, summary. user_defined object class \"user_defined\": list containing additional userdefined variables.","code":""},{"path":"/reference/tramoseats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Seasonal Adjustment with TRAMO-SEATS — tramoseats","text":"first step seasonal adjustment consists pre-adjusting time series TRAMO. done removing deterministic effects (calendar outliers), using regression model ARIMA noise (RegARIMA, see: regarima). second part, pre-adjusted series decomposed SEATS algorithm following components: trend-cycle (t), seasonal component (s) irregular component (). decomposition can : additive  (\\(y = t + s + \\)) multiplicative (\\(y = t * s * \\), latter case pre-adjustment decomposition performed (\\(log(y) = log(t) + log(s) + log()\\)). TRAMO-SEATS method, second step - SEATS (\"Signal Extraction ARIMA Time Series\") - performs ARIMA-based decomposition observed time series unobserved components. information method https://jdemetra-new-documentation.netlify.app/m-seats-decomposition. available predefined 'JDemetra+' TRAMO-SEATS model specifications described table :","code":""},{"path":"/reference/tramoseats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Seasonal Adjustment with TRAMO-SEATS — tramoseats","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/ BOX G.E.P. JENKINS G.M. (1970), \"Time Series Analysis: Forecasting Control\", Holden-Day, San Francisco. BOX G.E.P., JENKINS G.M., REINSEL G.C. LJUNG G.M. (2015), \"Time Series Analysis: Forecasting Control\", John Wiley & Sons, Hoboken, N. J., 5th edition.","code":""},{"path":[]},{"path":"/reference/tramoseats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seasonal Adjustment with TRAMO-SEATS — tramoseats","text":"","code":"# \\donttest{ #Example 1 myseries <- ipi_c_eu[, \"FR\"] myspec <- tramoseats_spec(\"RSAfull\") mysa <- tramoseats(myseries, myspec) mysa #> RegARIMA #> y = regression model + arima (2, 1, 0, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)      0.4032      0.051 #> Phi(2)      0.2883      0.051 #> BTheta(1)  -0.6641      0.042 #>  #>             Estimate Std. Error #> Week days     0.6994      0.032 #> Leap year     2.3231      0.690 #> Easter [6]   -2.5154      0.436 #> AO (5-2011)  13.4679      1.787 #> TC (4-2020) -22.2128      2.205 #> TC (3-2020) -21.0391      2.217 #> AO (5-2000)   6.7386      1.794 #>  #>  #> Residual standard error: 2.326 on 348 degrees of freedom #> Log likelihood = -816.1, aic =  1654 aicc =  1655, bic(corrected for length) = 1.852 #>  #>  #>  #> Decomposition #> Model #> AR :  1 + 0.403230 B + 0.288342 B^2  #> D :  1 - B - B^12 + B^13  #> MA :  1 - 0.664088 B^12  #>  #>  #> SA #> AR :  1 + 0.403230 B + 0.288342 B^2  #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 0.970348 B + 0.005940 B^2 - 0.005813 B^3 + 0.003576 B^4  #> Innovation variance:  0.7043507  #>  #> Trend #> D :  1 - 2.000000 B + B^2  #> MA :  1 + 0.033519 B - 0.966481 B^2  #> Innovation variance:  0.06093642  #>  #> Seasonal #> D :  1 + B + B^2 + B^3 + B^4 + B^5 + B^6 + B^7 + B^8 + B^9 + B^10 + B^11  #> MA :  1 + 1.328957 B + 1.105787 B^2 + 1.185470 B^3 + 1.067845 B^4 + 0.820748 B^5 + 0.632456 B^6 + 0.404457 B^7 + 0.245256 B^8 + 0.001615 B^9 - 0.055617 B^10 - 0.203557 B^11  #> Innovation variance:  0.04290744  #>  #> Transitory #> AR :  1 + 0.403230 B + 0.288342 B^2  #> MA :  1 - 0.260079 B - 0.739921 B^2  #> Innovation variance:  0.05287028  #>  #> Irregular #> Innovation variance:  0.2032994  #>  #>  #>  #> Final #> Last observed values #>              y        sa        t           s            i #> Jan 2020 101.0 102.93775 103.0182  -1.9377453  -0.08043801 #> Feb 2020 100.1 103.53944 103.2312  -3.4394383   0.30818847 #> Mar 2020  91.8  82.47698 103.4998   9.3230241 -21.02286361 #> Apr 2020  66.7  65.77310 103.9608   0.9268969 -38.18766871 #> May 2020  73.7  79.43342 104.7269  -5.7334221 -25.29345247 #> Jun 2020  98.2  88.07766 105.3319  10.1223443 -17.25422206 #> Jul 2020  97.4  92.71048 105.4216   4.6895154 -12.71111705 #> Aug 2020  71.7  97.32129 104.9801 -25.6212858  -7.65880696 #> Sep 2020 104.7  97.44274 104.0807   7.2572622  -6.63793072 #> Oct 2020 106.7  98.20925 103.1711   8.4907485  -4.96183772 #> Nov 2020 101.6  99.98044 102.4813   1.6195550  -2.50088282 #> Dec 2020  96.6  98.99458 101.9735  -2.3945790  -2.97892307 #>  #> Forecasts: #>                y_f     sa_f      t_f        s_f         i_f #> Jan 2021  93.22264 100.1984 101.7578  -6.975740 -1.55946363 #> Feb 2021  96.81455 100.8845 101.7113  -4.069924 -0.82679910 #> Mar 2021 111.72198 100.8668 101.6647  10.855228 -0.79795880 #> Apr 2021 102.76178 101.0716 101.6181   1.690178 -0.54654378 #> May 2021  95.52744 101.2474 101.5716  -5.719910 -0.32422597 #> Jun 2021 111.44221 101.2711 101.5250  10.171157 -0.25395653 #> Jul 2021 103.57813 101.2947 101.4784   2.283395 -0.18370915 #> Aug 2021  78.21363 101.3135 101.4319 -23.099833 -0.11841662 #> Sep 2021 108.57631 101.3000 101.3853   7.276282 -0.08528380 #> Oct 2021 107.32040 101.2771 101.3387   6.043321 -0.06166933 #> Nov 2021 105.33458 101.2505 101.2922   4.084088 -0.04168414 #> Dec 2021  98.79675 101.2164 101.2456  -2.419656 -0.02920922 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         6.087 #>  Seasonal     80.528 #>  Irregular     0.965 #>  TD & Hol.     3.590 #>  Others        8.102 #>  Total        99.271 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                       0.00 #>    Test for the presence of seasonality assuming stability    0.00 #>    Evolutive seasonality test                                 0.01 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           1.000 #>  f-test on sa (seasonal dummies)        1.000 #>  f-test on i (seasonal dummies)         1.000 #>  Residual seasonality (entire series)   1.000 #>  Residual seasonality (last 3 years)    0.974 #>  f-test on sa (td)                      0.152 #>  f-test on i (td)                       0.224 #>  #>  #> Additional output variables  # Equivalent to: mysa1 <- tramoseats(myseries, spec = \"RSAfull\") mysa1 #> RegARIMA #> y = regression model + arima (2, 1, 0, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)      0.4032      0.051 #> Phi(2)      0.2883      0.051 #> BTheta(1)  -0.6641      0.042 #>  #>             Estimate Std. Error #> Week days     0.6994      0.032 #> Leap year     2.3231      0.690 #> Easter [6]   -2.5154      0.436 #> AO (5-2011)  13.4679      1.787 #> TC (4-2020) -22.2128      2.205 #> TC (3-2020) -21.0391      2.217 #> AO (5-2000)   6.7386      1.794 #>  #>  #> Residual standard error: 2.326 on 348 degrees of freedom #> Log likelihood = -816.1, aic =  1654 aicc =  1655, bic(corrected for length) = 1.852 #>  #>  #>  #> Decomposition #> Model #> AR :  1 + 0.403230 B + 0.288342 B^2  #> D :  1 - B - B^12 + B^13  #> MA :  1 - 0.664088 B^12  #>  #>  #> SA #> AR :  1 + 0.403230 B + 0.288342 B^2  #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 0.970348 B + 0.005940 B^2 - 0.005813 B^3 + 0.003576 B^4  #> Innovation variance:  0.7043507  #>  #> Trend #> D :  1 - 2.000000 B + B^2  #> MA :  1 + 0.033519 B - 0.966481 B^2  #> Innovation variance:  0.06093642  #>  #> Seasonal #> D :  1 + B + B^2 + B^3 + B^4 + B^5 + B^6 + B^7 + B^8 + B^9 + B^10 + B^11  #> MA :  1 + 1.328957 B + 1.105787 B^2 + 1.185470 B^3 + 1.067845 B^4 + 0.820748 B^5 + 0.632456 B^6 + 0.404457 B^7 + 0.245256 B^8 + 0.001615 B^9 - 0.055617 B^10 - 0.203557 B^11  #> Innovation variance:  0.04290744  #>  #> Transitory #> AR :  1 + 0.403230 B + 0.288342 B^2  #> MA :  1 - 0.260079 B - 0.739921 B^2  #> Innovation variance:  0.05287028  #>  #> Irregular #> Innovation variance:  0.2032994  #>  #>  #>  #> Final #> Last observed values #>              y        sa        t           s            i #> Jan 2020 101.0 102.93775 103.0182  -1.9377453  -0.08043801 #> Feb 2020 100.1 103.53944 103.2312  -3.4394383   0.30818847 #> Mar 2020  91.8  82.47698 103.4998   9.3230241 -21.02286361 #> Apr 2020  66.7  65.77310 103.9608   0.9268969 -38.18766871 #> May 2020  73.7  79.43342 104.7269  -5.7334221 -25.29345247 #> Jun 2020  98.2  88.07766 105.3319  10.1223443 -17.25422206 #> Jul 2020  97.4  92.71048 105.4216   4.6895154 -12.71111705 #> Aug 2020  71.7  97.32129 104.9801 -25.6212858  -7.65880696 #> Sep 2020 104.7  97.44274 104.0807   7.2572622  -6.63793072 #> Oct 2020 106.7  98.20925 103.1711   8.4907485  -4.96183772 #> Nov 2020 101.6  99.98044 102.4813   1.6195550  -2.50088282 #> Dec 2020  96.6  98.99458 101.9735  -2.3945790  -2.97892307 #>  #> Forecasts: #>                y_f     sa_f      t_f        s_f         i_f #> Jan 2021  93.22264 100.1984 101.7578  -6.975740 -1.55946363 #> Feb 2021  96.81455 100.8845 101.7113  -4.069924 -0.82679910 #> Mar 2021 111.72198 100.8668 101.6647  10.855228 -0.79795880 #> Apr 2021 102.76178 101.0716 101.6181   1.690178 -0.54654378 #> May 2021  95.52744 101.2474 101.5716  -5.719910 -0.32422597 #> Jun 2021 111.44221 101.2711 101.5250  10.171157 -0.25395653 #> Jul 2021 103.57813 101.2947 101.4784   2.283395 -0.18370915 #> Aug 2021  78.21363 101.3135 101.4319 -23.099833 -0.11841662 #> Sep 2021 108.57631 101.3000 101.3853   7.276282 -0.08528380 #> Oct 2021 107.32040 101.2771 101.3387   6.043321 -0.06166933 #> Nov 2021 105.33458 101.2505 101.2922   4.084088 -0.04168414 #> Dec 2021  98.79675 101.2164 101.2456  -2.419656 -0.02920922 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         6.087 #>  Seasonal     80.528 #>  Irregular     0.965 #>  TD & Hol.     3.590 #>  Others        8.102 #>  Total        99.271 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                       0.00 #>    Test for the presence of seasonality assuming stability    0.00 #>    Evolutive seasonality test                                 0.01 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           1.000 #>  f-test on sa (seasonal dummies)        1.000 #>  f-test on i (seasonal dummies)         1.000 #>  Residual seasonality (entire series)   1.000 #>  Residual seasonality (last 3 years)    0.974 #>  f-test on sa (td)                      0.152 #>  f-test on i (td)                       0.224 #>  #>  #> Additional output variables  #Example 2 var1 <- ts(rnorm(length(myseries))*10, start = start(myseries), frequency = 12) var2 <- ts(rnorm(length(myseries))*100, start = start(myseries), frequency = 12) var <- ts.union(var1, var2) myspec2 <- tramoseats_spec(myspec, tradingdays.mauto = \"Unused\",                            tradingdays.option = \"WorkingDays\",                            easter.type = \"Standard\",                            automdl.enabled = FALSE, arima.mu = TRUE,                            usrdef.varEnabled = TRUE, usrdef.var = var) s_preVar(myspec2) #> $series #>                  var1         var2 #> Jan 1990 -12.53055561  116.7948978 #> Feb 1990  17.65028630   76.9885462 #> Mar 1990  -1.59322027  -16.3115808 #> Apr 1990   8.98874217  127.5265346 #> May 1990  -7.04995332   18.0887984 #> Jun 1990  11.26896570  147.4360522 #> Jul 1990 -19.74322214 -151.7434724 #> Aug 1990 -12.44772830   30.4400356 #> Sep 1990  10.31250388   10.7467387 #> Oct 1990   5.79097050 -122.4792573 #> Nov 1990 -10.37890010   44.8519979 #> Dec 1990  15.61622325   50.8070951 #> Jan 1991   1.01959622   35.0212641 #> Feb 1991  23.24238302   75.8213674 #> Mar 1991  23.25851550   29.0928722 #> Apr 1991 -12.93149956    2.2859592 #> May 1991  -0.45018855  -20.8143110 #> Jun 1991   1.95694234  -26.3611625 #> Jul 1991   4.80623395 -198.4135796 #> Aug 1991  20.17342464  -35.7620220 #> Sep 1991  11.95608651  -45.4297352 #> Oct 1991   6.56575520   28.6157701 #> Nov 1991  10.26297846  -28.9179390 #> Dec 1991   5.20192659   51.1904574 #> Jan 1992  11.20615649 -110.4334548 #> Feb 1992   3.99897655  -22.2474789 #> Mar 1992  -9.84527658 -145.2151487 #> Apr 1992  -5.02562184   39.9298770 #> May 1992   9.87148440  142.8571193 #> Jun 1992  21.91481010  -48.2140994 #> Jul 1992  -1.65042212   99.2388183 #> Aug 1992  -6.86040800 -116.3700651 #> Sep 1992   9.41399410  162.0789124 #> Oct 1992  -1.64042843  -10.7448152 #> Nov 1992 -13.02339410  -77.3206773 #> Dec 1992  -7.23484004  -73.6278805 #> Jan 1993  13.90088740   81.5706680 #> Feb 1993   6.81840626  220.3036444 #> Mar 1993   4.68260280  -67.1046628 #> Apr 1993   4.20921089  -42.1589604 #> May 1993  -8.00331265  -77.7749125 #> Jun 1993  -4.88457510   56.1542375 #> Jul 1993   5.39004516 -222.2507056 #> Aug 1993  14.35171017  -69.5413671 #> Sep 1993  -2.61838719  -38.3549957 #> Oct 1993 -14.18623721  205.8566983 #> Nov 1993  -5.13792720 -110.7988264 #> Dec 1993   7.72301225  -95.5938774 #> Jan 1994  14.03682339  -63.5768417 #> Feb 1994  -0.15804912   76.6757452 #> Mar 1994 -10.23289556   68.6958102 #> Apr 1994 -21.16392160  172.1426693 #> May 1994   1.50371437   85.1309252 #> Jun 1994  -5.20871198   42.9908280 #> Jul 1994  -9.05454844 -105.5277738 #> Aug 1994  -7.49986903   -4.5880971 #> Sep 1994  -7.86576021  -13.1881384 #> Oct 1994  -5.59681870  -31.9463558 #> Nov 1994 -13.90851305   47.3606163 #> Dec 1994  -2.82630602   81.2516099 #> Jan 1995  -4.80284997   25.6612328 #> Feb 1995  -9.67621014 -214.8765835 #> Mar 1995  17.77940980   69.0108551 #> Apr 1995  -0.69089037 -177.2443831 #> May 1995  -4.26188249   54.6294039 #> Jun 1995 -22.51403727    1.8945820 #> Jul 1995  -9.14170952  -74.8702215 #> Aug 1995  -8.00524582  -79.4321035 #> Sep 1995  -7.53305904   30.0784394 #> Oct 1995   6.60649173    5.4665853 #> Nov 1995  17.27695639   36.4229108 #> Dec 1995   7.82678579 -116.5186698 #> Jan 1996  -7.81818406   26.0555826 #> Feb 1996  -1.25797549 -241.7116277 #> Mar 1996  10.15236070  114.9085017 #> Apr 1996   2.94676272  120.6579247 #> May 1996  -2.96458790  -43.1982134 #> Jun 1996  -8.22289822   10.6856739 #> Jul 1996  16.91546077   48.6195719 #> Aug 1996 -14.76545705 -155.3458324 #> Sep 1996   9.29693563 -108.3142387 #> Oct 1996  -6.13832093  -51.6012028 #> Nov 1996   6.17598091  -20.7770980 #> Dec 1996  -8.30615177   90.7281411 #> Jan 1997 -11.33375927   81.1425127 #> Feb 1997  -1.56378319  -99.1193254 #> Mar 1997  -2.43091747  -45.4306958 #> Apr 1997 -11.29264413  -31.5728538 #> May 1997  -0.62192485 -100.6333083 #> Jun 1997   4.87082631 -101.6594660 #> Jul 1997  -0.54636953  202.9964782 #> Aug 1997  -1.98624209  -68.7638434 #> Sep 1997 -14.53375000 -158.7906854 #> Oct 1997   1.98434624  101.6938102 #> Nov 1997 -13.91001690  -72.3102186 #> Dec 1997 -22.44235104 -145.3485040 #> Jan 1998  -2.31792440 -214.0815482 #> Feb 1998  -6.86551360   13.4854427 #> Mar 1998  -4.82915280   66.1997776 #> Apr 1998 -22.43508266   49.4613170 #> May 1998  -3.81078571 -152.6643655 #> Jun 1998   1.16047733  -11.0216005 #> Jul 1998   8.92492885  246.8741282 #> Aug 1998  18.08520401  -56.3543434 #> Sep 1998  10.79663512 -144.5853422 #> Oct 1998  14.52055280  -47.6555776 #> Nov 1998  25.56923589  101.4600468 #> Dec 1998  10.72728070  -11.8020034 #> Jan 1999 -11.78914989  -35.4321844 #> Feb 1999  10.75417132   28.7255843 #> Mar 1999   0.53855088    1.8012616 #> Apr 1999  -2.34343833  -89.8423976 #> May 1999   9.50759734  144.4736492 #> Jun 1999   0.73021934  -53.7799146 #> Jul 1999   6.63527998  -48.2359998 #> Aug 1999  -8.16198742  -73.5619613 #> Sep 1999   2.95544263   -1.5235256 #> Oct 1999  13.46357662  -28.5060838 #> Nov 1999  -2.80015436  -77.0895994 #> Dec 1999  -0.63043628 -191.1522944 #> Jan 2000  -1.32833831   17.7899655 #> Feb 2000   6.29361770   19.6320685 #> Mar 2000  -6.41231532    5.0044155 #> Apr 2000  -1.04018599 -104.5274438 #> May 2000 -13.88668827  -13.6682386 #> Jun 2000   4.37214206  122.7500609 #> Jul 2000   3.15862087  -19.3865193 #> Aug 2000   1.94610535 -199.3071105 #> Sep 2000  -4.55762127  -42.9905670 #> Oct 2000   8.12534989  -65.1916325 #> Nov 2000   2.75042593 -132.2755316 #> Dec 2000   0.06009411  -61.1002356 #> Jan 2001  20.10186412  -43.3484772 #> Feb 2001   3.13808823   22.1131620 #> Mar 2001  -8.46162712   41.4635297 #> Apr 2001  -1.34641045  100.3519632 #> May 2001  14.70832200 -262.6042237 #> Jun 2001 -14.75125736  -87.3534926 #> Jul 2001   2.04499683  -77.3710833 #> Aug 2001  -3.41768421   59.3058550 #> Sep 2001  18.42157648   45.3563341 #> Oct 2001  -2.05909535  -48.9626711 #> Nov 2001  15.02231278  -66.6085502 #> Dec 2001   2.42188060 -108.9654228 #> Jan 2002   0.53455720 -104.0906952 #> Feb 2002  -1.25146310   50.1606680 #> Mar 2002   2.47787238    4.1353765 #> Apr 2002  -6.26612578   -5.3081681 #> May 2002   6.82877534 -152.7399081 #> Jun 2002   5.89606056  -16.3568520 #> Jul 2002  -8.14967320 -213.5094918 #> Aug 2002  -3.45798987  -13.6833591 #> Sep 2002   0.56529047 -290.4220640 #> Oct 2002  -5.66766181   33.7012645 #> Nov 2002  -0.42837457   76.4510656 #> Dec 2002 -12.81559297  -66.9378190 #> Jan 2003   9.67582242  -16.0968872 #> Feb 2003  10.29048853  150.7261029 #> Mar 2003 -21.66425254  -12.1693844 #> Apr 2003  -3.03348223  -24.3414776 #> May 2003   1.79268039   70.8157194 #> Jun 2003  14.27395820  -48.0039667 #> Jul 2003  -6.19946595  -31.6551268 #> Aug 2003  -1.31842450   51.0471244 #> Sep 2003   2.67551749  -26.6264354 #> Oct 2003 -14.56778518   63.6432097 #> Nov 2003   2.34340520 -101.3955594 #> Dec 2003  -9.51528054   93.2230747 #> Jan 2004  18.98439401  -65.0788332 #> Feb 2004 -10.42770546   43.6178180 #> Mar 2004 -13.33746286  -16.4089402 #> Apr 2004  17.64724810  126.8656386 #> May 2004   5.06063430   41.5432504 #> Jun 2004  -6.55292217   -4.8104283 #> Jul 2004   6.67508839   19.8292951 #> Aug 2004  13.72876146  -38.8687305 #> Sep 2004   5.94581979  -45.2232286 #> Oct 2004   8.09307437  -13.9421427 #> Nov 2004  -9.29351716 -132.5197658 #> Dec 2004  -9.68882573   75.4069518 #> Jan 2005  -5.63483049  135.7852830 #> Feb 2005  18.88488707 -122.0784861 #> Mar 2005  -1.16769607  -56.7918662 #> Apr 2005  -0.49778439 -118.8849569 #> May 2005   4.12530895 -101.2275885 #> Jun 2005   3.39006216  -43.2531486 #> Jul 2005  -2.19463937   34.5706392 #> Aug 2005  -2.79921977   19.0927596 #> Sep 2005  -1.84466622  128.7488578 #> Oct 2005 -11.31041190  -21.3504255 #> Nov 2005   5.99068143   59.3561305 #> Dec 2005  -3.45024460 -181.5799874 #> Jan 2006   3.28683628  -46.0524573 #> Feb 2006  -0.02001793   74.6337982 #> Mar 2006 -16.43640470   89.8995877 #> Apr 2006   8.30144580 -115.5462161 #> May 2006  13.11300782  -28.2423821 #> Jun 2006  -7.25708977   -0.3256871 #> Jul 2006  -3.88345065  151.5028276 #> Aug 2006 -10.42408354   30.9380270 #> Sep 2006   7.39965537  -46.0958821 #> Oct 2006  -3.79227989   29.3447573 #> Nov 2006   8.55040406    7.0972006 #> Dec 2006   9.29726811 -231.3759365 #> Jan 2007  -5.11420306   19.2706032 #> Feb 2007   5.75606727  -35.2441451 #> Mar 2007 -11.79760738 -153.3292787 #> Apr 2007   8.73922726 -173.4069209 #> May 2007   7.52654962   14.1892735 #> Jun 2007   6.31952946  -21.9599601 #> Jul 2007   4.89051671   59.1564494 #> Aug 2007   4.93466172   24.0247909 #> Sep 2007 -20.24668739  -37.2564160 #> Oct 2007  -1.15346633   26.4545865 #> Nov 2007   4.02961199   65.1544488 #> Dec 2007 -13.29553215  -41.8319774 #> Jan 2008   8.50032275 -207.8760627 #> Feb 2008  11.05681923   59.0955041 #> Mar 2008   4.04141906  -70.5640744 #> Apr 2008  -1.23141511   98.6688400 #> May 2008   4.48847720    3.2359045 #> Jun 2008  20.68153748  -49.6043573 #> Jul 2008 -12.49536842  167.3249059 #> Aug 2008  -2.19531175 -105.1266614 #> Sep 2008  10.32002706    2.8015821 #> Oct 2008 -15.82876585   52.6890091 #> Nov 2008   0.84967784  127.0786920 #> Dec 2008  12.10794619  -58.7592446 #> Jan 2009  -0.23462572  -43.0471444 #> Feb 2009   0.84693918   -2.2966263 #> Mar 2009  -3.25065508    7.4873923 #> Apr 2009   5.05923564 -208.9995616 #> May 2009   4.15272046  102.3897173 #> Jun 2009 -11.77413897   62.3240132 #> Jul 2009   0.33445330 -136.7330008 #> Aug 2009  -6.79873381    4.4589523 #> Sep 2009   9.77814031   36.6273799 #> Oct 2009  17.72477385  -17.8469697 #> Nov 2009   2.77933293  210.1677593 #> Dec 2009  -4.81019306  -24.2409658 #> Jan 2010 -17.91060602    1.1717215 #> Feb 2010   5.30663702 -277.8433689 #> Mar 2010 -11.24766175   27.4491395 #> Apr 2010   0.40226151  -62.2731928 #> May 2010 -11.87967396 -102.7831717 #> Jun 2010  22.48831114   72.8990109 #> Jul 2010  15.53161749  -39.2461437 #> Aug 2010   3.23021948   35.7845575 #> Sep 2010   0.22759699  -75.5189860 #> Oct 2010  -2.49427874    6.6689713 #> Nov 2010 -21.72319120   25.7355650 #> Dec 2010 -13.39659118   -9.0963056 #> Jan 2011  -9.80485754  -73.0508027 #> Feb 2011 -17.92780676  -39.5841246 #> Mar 2011   5.22812809 -141.5808515 #> Apr 2011 -15.91328479  -10.8938918 #> May 2011   8.06263133    7.4299910 #> Jun 2011  -6.83813068   45.0190145 #> Jul 2011   3.34388057   38.7345818 #> Aug 2011   9.43006421  -25.8295014 #> Sep 2011  -8.98387674  152.3490603 #> Oct 2011   7.67335868   55.1343438 #> Nov 2011   0.92338676   32.9901773 #> Dec 2011  -3.51696026   17.2922695 #> Jan 2012   1.15373005   42.6641536 #> Feb 2012  -1.43261353  -81.3699585 #> Mar 2012 -24.19820346   65.1355094 #> Apr 2012 -11.63794035   91.9981796 #> May 2012   1.03426653   39.0101788 #> Jun 2012  -1.26143326   95.6724098 #> Jul 2012  -1.41743410  -16.9973563 #> Aug 2012   9.10437035  -37.9977916 #> Sep 2012  14.77617914   14.4207957 #> Oct 2012  16.46242603  -71.8284089 #> Nov 2012  -1.79993025   20.6108648 #> Dec 2012   9.76856385  -36.7334361 #> Jan 2013  -1.86602735   78.8442877 #> Feb 2013  -0.34098393  -31.0952795 #> Mar 2013  14.88732203  -85.9140099 #> Apr 2013  -1.89839298  108.5279663 #> May 2013 -10.89309617  -78.4779324 #> Jun 2013   3.71089482 -122.0960234 #> Jul 2013 -10.27770114 -105.6691432 #> Aug 2013   0.14915848  -99.6890554 #> Sep 2013  -5.20298562  -67.2605085 #> Oct 2013  -0.52244428   66.5268367 #> Nov 2013 -14.35079571  223.6077683 #> Dec 2013  -3.27979065  -60.1798169 #> Jan 2014 -12.85347619  -29.1617742 #> Feb 2014  -4.25537239  -84.0974862 #> Mar 2014   2.57475661  203.1699515 #> Apr 2014   2.01319396   42.9372125 #> May 2014   4.82077401   81.1017521 #> Jun 2014   5.06636590  -17.4299949 #> Jul 2014  -5.26691357  -31.6371483 #> Aug 2014  -5.64773980  -49.3001895 #> Sep 2014   0.40398035   19.0778474 #> Oct 2014  -2.00781380 -110.3744984 #> Nov 2014  -9.04217194  -10.6413314 #> Dec 2014   1.66655524  145.8992713 #> Jan 2015  -5.24284783  -30.7474298 #> Feb 2015   0.17563903   75.7181411 #> Mar 2015   9.48517187 -171.0825390 #> Apr 2015   2.70265784   59.5309608 #> May 2015  -1.60941404 -206.7966650 #> Jun 2015  19.65199507   -8.5739756 #> Jul 2015   3.95548042    3.2286550 #> Aug 2015   8.73719370   28.9686397 #> Sep 2015   4.72324156   80.8938069 #> Oct 2015 -14.85226449   32.6262471 #> Nov 2015  -8.36162299 -170.3857479 #> Dec 2015  -6.46269212   52.5504589 #> Jan 2016  -0.47437037  -80.3033850 #> Feb 2016   1.67759989  -23.7655721 #> Mar 2016  -0.99738669   85.5349059 #> Apr 2016   0.85996455  -46.9487045 #> May 2016  -3.72574031   11.8012784 #> Jun 2016   1.81332543  124.7441555 #> Jul 2016  -9.06806411  -68.8397299 #> Aug 2016   5.91157152 -138.3569575 #> Sep 2016   7.92513233   -4.2932415 #> Oct 2016   0.76872383  -20.9234230 #> Nov 2016  -0.67837199 -146.6993454 #> Dec 2016   4.33288047  223.5778380 #> Jan 2017   0.49095403  -62.5144963 #> Feb 2017  -0.32800048 -116.7913785 #> Mar 2017  -5.10924776   14.9528831 #> Apr 2017   3.56430539   86.1319900 #> May 2017   4.17946136 -104.6203407 #> Jun 2017   5.79205261   17.2260011 #> Jul 2017 -14.75158654  -30.7020751 #> Aug 2017  13.23805231   90.3345610 #> Sep 2017  10.30621466   98.5248694 #> Oct 2017   3.17373893  164.3828484 #> Nov 2017 -11.11903788   81.4559724 #> Dec 2017   6.21211169   82.5113161 #> Jan 2018  18.09108552  -34.5773922 #> Feb 2018  11.13986006   41.1147335 #> Mar 2018   4.65350534  -64.3214383 #> Apr 2018 -10.68629729   94.2059477 #> May 2018   2.55940284   46.9591784 #> Jun 2018  -7.77218934  -66.2112238 #> Jul 2018  -9.50318237  -30.9471102 #> Aug 2018  12.30516332   79.4574264 #> Sep 2018  -2.90321330  -91.4850956 #> Oct 2018 -12.45249585  -46.5520309 #> Nov 2018  -9.25110623   81.9669363 #> Dec 2018  -3.51758271  152.1035738 #> Jan 2019  -0.41630828   26.5354790 #> Feb 2019   7.29297422   61.9066940 #> Mar 2019   2.93403029   47.1080837 #> Apr 2019  35.86945476   46.3144213 #> May 2019   7.55743006  -16.0161363 #> Jun 2019   4.00127303   -3.5685472 #> Jul 2019   8.29345713  -57.4684816 #> Aug 2019  -3.05136243   84.5350017 #> Sep 2019   7.10103322  -58.1766123 #> Oct 2019   4.38613817  -50.2357106 #> Nov 2019   3.58223697  108.8076265 #> Dec 2019  -1.24237651  -39.2953019 #> Jan 2020  -6.93216085  -66.0461119 #> Feb 2020   5.74346528  -14.9025127 #> Mar 2020  -2.17159515  -87.5485298 #> Apr 2020  30.37581163  169.9001571 #> May 2020 -15.91667131    6.8190262 #> Jun 2020  -6.73689236   53.3187580 #> Jul 2020   7.28572805   -8.0948993 #> Aug 2020 -11.51562235  244.6781428 #> Sep 2020 -11.50775213   38.3899034 #> Oct 2020  -1.32075277 -105.2171578 #> Nov 2020  -5.81046358 -172.2233827 #> Dec 2020  16.61350032  -63.0819250 #>  #> $description #>           type coeff #> var1 Undefined    NA #> var2 Undefined    NA #>  mysa2 <- tramoseats(myseries, myspec2,                     userdefined = c(\"decomposition.sa_lin_f\",                                     \"decomposition.sa_lin_e\")) mysa2 #> RegARIMA #> y = regression model + arima (0, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Theta(1)   -0.6217      0.043 #> BTheta(1)  -0.6693      0.042 #>  #>                Estimate Std. Error #> Mean          1.388e-03      0.016 #> r.var1        2.032e-03      0.011 #> r.var2        7.035e-04      0.001 #> Monday        5.799e-01      0.239 #> Tuesday       8.439e-01      0.239 #> Wednesday     1.068e+00      0.240 #> Thursday      3.851e-02      0.240 #> Friday        8.572e-01      0.242 #> Saturday     -1.549e+00      0.238 #> Leap year     2.161e+00      0.727 #> Easter [6]   -2.175e+00      0.496 #> TC (4-2020)  -2.133e+01      2.238 #> TC (3-2020)  -2.119e+01      2.223 #> AO (5-2011)   1.287e+01      1.916 #> LS (11-2008) -1.249e+01      1.655 #>  #>  #> Residual standard error: 2.241 on 341 degrees of freedom #> Log likelihood = -802.9, aic =  1642 aicc =  1644, bic(corrected for length) = 1.893 #>  #>  #>  #> Decomposition #> Model #> D :  1 - B - B^12 + B^13  #> MA :  1 - 0.621691 B - 0.669330 B^12 + 0.416116 B^13  #>  #>  #> SA #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 1.591988 B + 0.604331 B^2  #> Innovation variance:  0.7134019  #>  #> Trend #> D :  1 - 2.000000 B + B^2  #> MA :  1 + 0.032818 B - 0.967182 B^2  #> Innovation variance:  0.02522463  #>  #> Seasonal #> D :  1 + B + B^2 + B^3 + B^4 + B^5 + B^6 + B^7 + B^8 + B^9 + B^10 + B^11  #> MA :  1 + 0.843770 B + 0.604408 B^2 + 0.338179 B^3 + 0.083129 B^4 - 0.136631 B^5 - 0.307818 B^6 - 0.425620 B^7 - 0.491945 B^8 - 0.514346 B^9 - 0.505950 B^10 - 0.487176 B^11  #> Innovation variance:  0.03081912  #>  #> Irregular #> Innovation variance:  0.4555274  #>  #>  #>  #> Final #> Last observed values #>              y        sa        t           s             i #> Jan 2020 101.0 102.81851 103.3050  -1.8185112  -0.486470495 #> Feb 2020 100.1 103.40318 103.4075  -3.3031783  -0.004340668 #> Mar 2020  91.8  82.29661 103.5385   9.5033890 -21.241901161 #> Apr 2020  66.7  66.06809 103.7556   0.6319142 -37.687541289 #> May 2020  73.7  79.34590 104.1076  -5.6458990 -24.761732349 #> Jun 2020  98.2  88.14489 104.4019  10.0551101 -16.257054491 #> Jul 2020  97.4  92.97395 104.4587   4.4260520 -11.484778092 #> Aug 2020  71.7  97.35139 104.2406 -25.6513919  -6.889254716 #> Sep 2020 104.7  97.14200 103.8112   7.5580020  -6.669192528 #> Oct 2020 106.7  98.51739 103.3804   8.1826079  -4.863017170 #> Nov 2020 101.6 100.22161 103.0371   1.3783873  -2.815453896 #> Dec 2020  96.6  99.16099 102.7914  -2.5609868  -3.630382907 #>  #> Forecasts: #>                y_f     sa_f      t_f        s_f         i_f #> Jan 2021  94.94239 101.2431 102.7025  -6.384568 -1.45941514 #> Feb 2021  97.76857 101.6750 102.6965  -3.955806 -1.02159060 #> Mar 2021 113.34558 101.9756 102.6907  11.294470 -0.71511342 #> Apr 2021 103.58903 102.1844 102.6849   1.443977 -0.50057939 #> May 2021  96.50160 102.3289 102.6793  -5.901187 -0.35040557 #> Jun 2021 113.08768 102.4285 102.6738  10.609817 -0.24528390 #> Jul 2021 104.43952 102.4967 102.6684   1.863487 -0.17169873 #> Aug 2021  79.35314 102.5429 102.6631 -23.174022 -0.12018911 #> Sep 2021 109.38591 102.5738 102.6580   6.750815 -0.08413238 #> Oct 2021 108.97962 102.5940 102.6529   6.296152 -0.05889266 #> Nov 2021 106.76502 102.6067 102.6480   4.072512 -0.04122487 #> Dec 2021 100.05011 102.6143 102.6431  -2.598606 -0.02885741 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         1.828 #>  Seasonal     58.835 #>  Irregular     0.999 #>  TD & Hol.     2.524 #>  Others       33.791 #>  Total        97.976 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.068 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           1.000 #>  f-test on sa (seasonal dummies)        1.000 #>  f-test on i (seasonal dummies)         1.000 #>  Residual seasonality (entire series)   1.000 #>  Residual seasonality (last 3 years)    0.961 #>  f-test on sa (td)                      0.929 #>  f-test on i (td)                       1.000 #>  #>  #> Additional output variables #> Names of additional variables (2): #> decomposition.sa_lin_f, decomposition.sa_lin_e plot(mysa2)   plot(mysa2$regarima)       plot(mysa2$decomposition)  # }"},{"path":"/reference/tramoseats_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"TRAMO-SEATS model specification — tramoseats_spec","title":"TRAMO-SEATS model specification — tramoseats_spec","text":"Function create (/modify) c(\"SA_spec\", \"TRAMO_SEATS\") class object SA model specification TRAMO-SEATS method. can done pre-defined 'JDemetra+' model specification (character), previous specification (c(\"SA_spec\", \"TRAMO_SEATS\") object) seasonal adjustment model (c(\"SA\", \"TRAMO_SEATS\") object).","code":""},{"path":"/reference/tramoseats_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TRAMO-SEATS model specification — tramoseats_spec","text":"","code":"tramoseats_spec(   spec = c(\"RSAfull\", \"RSA0\", \"RSA1\", \"RSA2\", \"RSA3\", \"RSA4\", \"RSA5\"),   preliminary.check = NA,   estimate.from = NA_character_,   estimate.to = NA_character_,   estimate.first = NA_integer_,   estimate.last = NA_integer_,   estimate.exclFirst = NA_integer_,   estimate.exclLast = NA_integer_,   estimate.tol = NA_integer_,   estimate.eml = NA,   estimate.urfinal = NA_integer_,   transform.function = c(NA, \"Auto\", \"None\", \"Log\"),   transform.fct = NA_integer_,   usrdef.outliersEnabled = NA,   usrdef.outliersType = NA,   usrdef.outliersDate = NA,   usrdef.outliersCoef = NA,   usrdef.varEnabled = NA,   usrdef.var = NA,   usrdef.varType = NA,   usrdef.varCoef = NA,   tradingdays.mauto = c(NA, \"Unused\", \"FTest\", \"WaldTest\"),   tradingdays.pftd = NA_integer_,   tradingdays.option = c(NA, \"TradingDays\", \"WorkingDays\", \"UserDefined\", \"None\"),   tradingdays.leapyear = NA,   tradingdays.stocktd = NA_integer_,   tradingdays.test = c(NA, \"Separate_T\", \"Joint_F\", \"None\"),   easter.type = c(NA, \"Unused\", \"Standard\", \"IncludeEaster\", \"IncludeEasterMonday\"),   easter.julian = NA,   easter.duration = NA_integer_,   easter.test = NA,   outlier.enabled = NA,   outlier.from = NA_character_,   outlier.to = NA_character_,   outlier.first = NA_integer_,   outlier.last = NA_integer_,   outlier.exclFirst = NA_integer_,   outlier.exclLast = NA_integer_,   outlier.ao = NA,   outlier.tc = NA,   outlier.ls = NA,   outlier.so = NA,   outlier.usedefcv = NA,   outlier.cv = NA_integer_,   outlier.eml = NA,   outlier.tcrate = NA_integer_,   automdl.enabled = NA,   automdl.acceptdefault = NA,   automdl.cancel = NA_integer_,   automdl.ub1 = NA_integer_,   automdl.ub2 = NA_integer_,   automdl.armalimit = NA_integer_,   automdl.reducecv = NA_integer_,   automdl.ljungboxlimit = NA_integer_,   automdl.compare = NA,   arima.mu = NA,   arima.p = NA_integer_,   arima.d = NA_integer_,   arima.q = NA_integer_,   arima.bp = NA_integer_,   arima.bd = NA_integer_,   arima.bq = NA_integer_,   arima.coefEnabled = NA,   arima.coef = NA,   arima.coefType = NA,   fcst.horizon = NA_integer_,   seats.predictionLength = NA_integer_,   seats.approx = c(NA, \"None\", \"Legacy\", \"Noisy\"),   seats.trendBoundary = NA_integer_,   seats.seasdBoundary = NA_integer_,   seats.seasdBoundary1 = NA_integer_,   seats.seasTol = NA_integer_,   seats.maBoundary = NA_integer_,   seats.method = c(NA, \"Burman\", \"KalmanSmoother\", \"McElroyMatrix\"),   benchmarking.enabled = NA,   benchmarking.target = c(NA, \"Original\", \"CalendarAdjusted\"),   benchmarking.useforecast = NA,   benchmarking.rho = NA_real_,   benchmarking.lambda = NA_real_ )"},{"path":"/reference/tramoseats_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TRAMO-SEATS model specification — tramoseats_spec","text":"spec TRAMO-SEATS model specification. can 'JDemetra+' name (character) predefined TRAMO-SEATS model specification (see Details), object class c(\"SA_spec\",\"TRAMO_SEATS\") object class c(\"SA\", \"TRAMO_SEATS\"). default \"RSAfull\". preliminary.check logical check quality input series exclude highly problematic series e.g. series number identical observations /missing values pre-specified threshold values. time span series, (sub)period used estimate regarima model, controlled following six variables: estimate., estimate., estimate.first, estimate.last, estimate.exclFirst estimate.exclLast; estimate.estimate.priority remaining span control variables, estimate.last estimate.first priority estimate.exclFirst estimate.exclLast, estimate.last priority estimate.first. Default= \"\". estimate.character format \"YYYY-MM-DD\" indicating start time span (e.g. \"1900-01-01\"). can combined parameter estimate.. estimate.character format \"YYYY-MM-DD\" indicating end time span (e.g. \"2020-12-31\"). can combined parameter estimate.. estimate.first numeric, number periods considered beginning series. estimate.last numeric, number periods considered end series. estimate.exclFirst numeric, number periods excluded beginning series. can combined parameter estimate.exclLast. estimate.exclLast numeric, number periods excluded end series. can combined parameter estimate.exclFirst. estimate.tol numeric, convergence tolerance. absolute changes log-likelihood function compared value check convergence estimation iterations. estimate.eml logical, exact maximum likelihood estimation. TRUE, program performs exact maximum likelihood estimation. FASLE, Unconditional Least Squares method used. estimate.urfinal numeric, final unit root limit. threshold value final unit root test identification differencing orders. magnitude AR root final model smaller number,  unit root assumed, order AR polynomial reduced one appropriate order differencing  (non-seasonal, seasonal) increased. transform.function transformation input series: \"None\" = transformation series; \"Log\" = takes log series; \"Auto\" = program tests log-level specification. transform.fct numeric controlling bias log/level pre-test:  transform.fct > 1 favours levels, transform.fct< 1 favours logs. Considered transform.function set \"Auto\". Control variables pre-specified outliers. Said pre-specified outliers used model  enabled (usrdef.outliersEnabled=TRUE) outliers' type (usrdef.outliersType) date (usrdef.outliersDate) provided. usrdef.outliersEnabled logical. TRUE, program uses pre-specified outliers. usrdef.outliersType vector defining outliers' type. Possible types : (\"AO\") = additive, (\"LS\") = level shift, (\"TC\") = transitory change, (\"\") = seasonal outlier. E.g.:  usrdef.outliersType= c(\"AO\",\"AO\",\"LS\"). usrdef.outliersDate vector defining outliers' date. dates characters format \"YYYY-MM-DD\". E.g.: usrdef.outliersDate= c(\"2009-10-01\",\"2005-02-01\",\"2003-04-01\"). usrdef.outliersCoef vector providing fixed coefficients outliers. coefficients fixed parameter  transform.function set \"Auto\" (.e. series transformation needs pre-defined.) E.g.: usrdef.outliersCoef= c(200,170,20). Control variables user-defined variables: usrdef.varEnabled logical TRUE, program uses user-defined variables. usrdef.var time series (ts) matrix time series (mts) containing user-defined variables. usrdef.varType vector character(s) defining user-defined variables component type. Possible types : \"Undefined\", \"Series\", \"Trend\", \"Seasonal\", \"SeasonallyAdjusted\", \"Irregular\", \"Calendar\". use user-defined calendar regressors, type \"Calendar\" must defined conjunction tradingdays.option = \"UserDefined\". Otherwise, program automatically set usrdef.varType = \"Undefined\". usrdef.varCoef vector providing fixed coefficients user-defined variables. coefficients fixed  transform.function set \"Auto\" (.e. series transformation needs pre-defined). tradingdays.mauto defines whether calendar effects added model manually (\"Unused\") automatically. automatic selection, choice number calendar variables can based F-Test (\"FTest\") Wald Test (\"WaldTest\"); model higher F value chosen, provided higher tradingdays.pftd). tradingdays.pftd numeric. p-value used test specified automatic parameter (tradingdays.mauto) assess significance pre-tested calendar effects variables whether included RegArima model. Control variables manual selection calendar effects variables (tradingdays.mauto set \"Unused\"): tradingdays.option choose trading days regression variables: \"TradingDays\" =  six day---week regression variables; \"WorkingDays\" = one working/non-working day contrast variable; \"None\" = correction trading days working days effects; \"UserDefined\" = user-defined trading days regressors (regressors must defined usrdef.var argument usrdef.varType set \"Calendar\" usrdef.varEnabled = TRUE). \"None\" must also chosen \"day--week effects\" correction (tradingdays.stocktd must modified accordingly). tradingdays.leapyear logical. Specifies leap-year correction included. TRUE, model includes leap-year effect. tradingdays.stocktd numeric indicating day month inventories stock reported (denote last day month set variable 31). Modifications variable taken account tradingdays.option set \"None\". tradingdays.test defines pre-tests trading day effects: \"None\" = calendar variables used model without pre-testing; \"Separate_T\" = t-test applied trading day variable separately trading day variables included RegArima model least one t-statistic greater 2.6 two t-statistics greater 2.0 (absolute terms); \"Joint_F\" = joint F-test significance trading day variables. trading day effect significant F statistic greater 0.95. easter.type acharacter specifies presence length Easter effect: \"Unused\" = Easter effect considered; \"Standard\" = influences period n days strictly Easter Sunday; \"IncludeEaster\" = influences entire period (n) including Easter Sunday; \"IncludeEasterMonday\" = influences entire period (n) including Easter Monday. easter.julian logical. TRUE, program uses Julian Easter (expressed Gregorian calendar). easter.duration numeric indicating duration Easter effect (length days, 1 15). easter.test logical. TRUE, program performs t-test significance Easter effect. Easter effect considered significant modulus t-statistic greater 1.96. outlier.enabled logical. TRUE, automatic detection outliers enabled defined time span. time span series searched outliers controlled following six variables: outlier., outlier., outlier.first, outlier.last, outlier.exclFirst outlier.exclLast; outlier.outlier.priority remaining span control variables, outlier.last outlier.first priority outlier.exclFirst outlier.exclLast, outlier.last priority outlier.first. outlier.character format \"YYYY-MM-DD\" indicating start time span (e.g. \"1900-01-01\"). can combined outlier.. outlier.character format \"YYYY-MM-DD\" indicating end time span (e.g. \"2020-12-31\"). can combined outlier.. outlier.first numeric specifying number periods considered beginning series. outlier.last numeric specifying number periods considered end series. outlier.exclFirst numeric specifying number periods excluded beginning series. can combined outlier.exclLast. outlier.exclLast numeric specifying number periods excluded end series. can combined outlier.exclFirst. outlier.ao logical. TRUE, automatic detection additive outliers enabled (outlier.enabled must also set TRUE). outlier.tc logical. TRUE, automatic detection transitory changes enabled (outlier.enabled must also set TRUE). outlier.ls logical. TRUE, automatic detection level shifts enabled (outlier.enabled must also set TRUE). outlier.logical. TRUE, automatic detection seasonal outliers enabled (outlier.enabled must also set TRUE). outlier.usedefcv logical. TRUE, critical value outliers' detection procedure automatically determined number observations outlier detection time span. FALSE, procedure uses entered critical value (outlier.cv). outlier.cv numeric. entered critical value outliers' detection procedure. modification variable taken account outlier.usedefcv set FALSE. outlier.eml logical exact likelihood estimation method. controls method applied parameter estimation intermediate steps automatic detection correction outliers. TRUE, exact likelihood estimation method used. FALSE, fast Hannan-Rissanen method used. outlier.tcrate numeric. rate decay transitory change outlier. automdl.enabled logical. TRUE, automatic modelling ARIMA model enabled. FALSE, parameters ARIMA model can specified. Control variables automatic modelling ARIMA model (automdl.enabled set TRUE): automdl.acceptdefault logical. TRUE, default model (ARIMA(0,1,1)(0,1,1)) may chosen first step automatic model identification. Ljung-Box Q statistics residuals acceptable, default model accepted attempt made identify another model. automdl.cancel numeric, cancellation limit. difference moduli AR MA roots (estimating ARIMA(1,0,1)(1,0,1) models second step automatic identification differencing orders) smaller cancellation limit, two roots assumed equal canceled . automdl.ub1 numeric, first unit root limit. threshold value initial unit root test automatic differencing procedure. one roots estimation ARIMA(2,0,0)(1,0,0) plus mean model, performed first step automatic model identification procedure, larger first unit root limit modulus, set equal unity. automdl.ub2 numeric, second unit root limit. one roots estimation ARIMA(1,0,1)(1,0,1) plus mean model, performed second step automatic model identification procedure, larger second unit root limit modulus, checked common factor corresponding AR MA polynomials ARMA model can canceled (see automdl.cancel). cancellation, AR root set equal unity (.e. differencing order changes). automdl.armalimit numeric, arma limit. threshold value t-statistics ARMA coefficients constant term used final test model parsimony. highest order ARMA coefficient t-value smaller value magnitude, order model reduced. constant term t-value smaller ARMA limit magnitude, removed set regressors. automdl.reducecv numeric, ReduceCV. percentage outlier critical value reduced identified model found Ljung-Box statistic unacceptable confidence coefficient. parameter 0 1, active automatic outlier identification enabled. reduced critical value set (1-ReduceCV)xCV, CV original critical value. automdl.ljungboxlimit numeric, Ljung Box limit, setting acceptance criterion confidence intervals Ljung-Box Q statistic. LjungBox Q statistics residuals final model greater Ljung Box limit, model rejected, outlier critical value reduced, model outlier identification (specified) redone reduced value. automdl.compare logical. TRUE, program compares model identified automatic procedure default model (ARIMA(0,1,1)(0,1,1)) model best fit selected. Criteria considered residual diagnostics, model structure number outliers. Control variables non-automatic modelling ARIMA model (automdl.enabled set FALSE): arima.mu logical. TRUE, mean considered part ARIMA model. arima.p numeric. order non-seasonal autoregressive (AR) polynomial. arima.d numeric. regular differencing order. arima.q numeric. order non-seasonal moving average (MA) polynomial. arima.bp numeric. order seasonal autoregressive (AR) polynomial. arima.bd numeric. seasonal differencing order. arima.bq numeric. order seasonal moving average (MA) polynomial. Control variables user-defined ARMA coefficients. coefficients can defined regular seasonal autoregressive (AR) polynomials moving average (MA) polynomials. model considers coefficients procedure estimation (arima.coefType) provided, number provided coefficients matches sum (regular seasonal) AR MA orders (p,q,bp,bq). arima.coefEnabled logical. TRUE, program uses user-defined ARMA coefficients. arima.coef vector providing coefficients regular seasonal AR MA polynomials. length vector must equal sum regular seasonal AR MA orders. coefficients shall provided following order: regular AR (Phi - p elements), regular MA  (Theta - q elements), seasonal AR (BPhi - bp elements) seasonal MA (BTheta - bq elements). E.g.: arima.coef=c(0.6,0.7) arima.p=1, arima.q=0,arima.bp=1 arima.bq=0. arima.coefType avector defining ARMA coefficients estimation procedure. Possible procedures : \"Undefined\" = use user-defined input (.e. coefficients estimated), \"Fixed\" = fixes coefficients value provided user, \"Initial\" = value defined user used initial condition. orders coefficients shall defined, arima.coef can set NA 0 arima.coefType can set \"Undefined\". E.g.: arima.coef = c(-0.8,-0.6,NA), arima.coefType = c(\"Fixed\",\"Fixed\",\"Undefined\"). fcst.horizon numeric, forecasting horizon. length forecasts generated RegARIMA model periods (positive values) years (negative values). default, program generates two years forecasts (fcst.horizon set -2). seats.predictionLength integer: number forecasts used decomposition. Negative values correspond number years. Default=-1. seats.approx character: approximation mode. ARIMA model estimated TRAMO accept admissible decomposition, SEATS: \"None\" - performs approximation; \"Legacy\" - replaces model decomposable one; \"Noisy\" - estimates new model adding white noise non-admissible model estimated TRAMO. Default=\"Legacy\". seats.trendBoundary numeric: trend boundary. boundary beyond AR root integrated trend component. modulus inverse real root greater trend boundary, AR root integrated trend component. value, root integrated transitory component. Possible values [0,1]. Default=0.5. seats.seasdBoundary numeric: seasonal boundary. boundary beyond negative AR root integrated seasonal component.  modulus inverse negative real root greater (equal) Seasonal boundary, AR root integrated seasonal component. Otherwise root integrated trend transitory component. Possible values [0,1]. Default=0.8. seats.seasdBoundary1 numeric: seasonal boundary (unique). boundary beyond negative AR root integrated seasonal component, root unique seasonal root. modulus inverse negative real root greater (equal) Seasonal boundary, AR root integrated seasonal component. Otherwise root integrated trend transitory component. Possible values [0,1]. Default=0.8. seats.seasTol numeric: seasonal tolerance. tolerance (measured degrees) allocate AR non-real roots seasonal component (modulus inverse complex AR root greater trend boundary frequency root differs one seasonal frequencies less Seasonal tolerance) transitory component (otherwise). Possible values [0,10]. Default value 2. seats.maBoundary numeric: MA unit root boundary. modulus estimated MA root falls range (xl, 1), set xl. Possible values [0.9,1]. Default=0.95. seats.method character: estimation method unobserved components. choice can made : \"Burman\": default value. May result significant underestimation components' standard deviation, may become numerically unstable roots MA polynomial near 1; \"KalmanSmoother\": disturbed (quasi-) unit roots MA; \"McElroyMatrix\": stability issues Burman's algorithm. benchmarking.enabled logical: enable benchmarking. TRUE, benchmarking enabled. benchmarking.target character: target benchmarking procedure, can raw series (\"Original\") series adjusted calendar effects (\"CalendarAdjusted\"). benchmarking.useforecast logical: TRUE, forecasts seasonally adjusted variable target variable used benchmarking computation benchmarking constrains also applied forecasting period. benchmarking.rho numeric: value AR(1) parameter (set 0 1) function used benchmarking. benchmarking.lambda numeric: parameter used benchmarking relatesto weights regression equation. typically equal 0, 1/2 1.","code":""},{"path":"/reference/tramoseats_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TRAMO-SEATS model specification — tramoseats_spec","text":"two-element list class c(\"SA_spec\", \"TRAMO_SEATS\"), containing: (1) object class c(\"regarima_spec\", \"TRAMO_SEATS\") RegARIMA model specification, (2) object class c(\"seats_spec\", \"data.frame\") SEATS algorithm specification. component refers different part SA model specification, mirroring arguments function (details see function arguments description). lowest-level component (except span, pre-specified outliers, user-defined variables pre-specified ARMA coefficients) structured data frame columns denoting different variables model specification rows referring : first row: base specification, provided within argument spec; second row: user modifications specified remaining arguments function (e.g.: arima.d); third row: final model specification. final specification (third row) shall include user modifications (row two) unless wrongly specified. pre-specified outliers, user-defined variables pre-specified ARMA coefficients consist list Predefined (base model specification) Final values. regarima: object class c(\"regarima_spec\", \"TRAMO_SEATS\"). See Value function regarima_spec_tramoseats. seats: data.frame class c(\"seats_spec\", \"data.frame\"), containing seats variables line names arguments variables. final values can also accessed function s_seats.","code":""},{"path":"/reference/tramoseats_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TRAMO-SEATS model specification — tramoseats_spec","text":"available predefined 'JDemetra+' model specifications described table :","code":""},{"path":"/reference/tramoseats_spec.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"TRAMO-SEATS model specification — tramoseats_spec","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"/reference/tramoseats_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TRAMO-SEATS model specification — tramoseats_spec","text":"","code":"# \\donttest{ myseries <- ipi_c_eu[, \"FR\"] myspec1 <- tramoseats_spec(spec = c(\"RSAfull\")) mysa1 <- tramoseats(myseries, spec = myspec1)  # To modify a pre-specified model specification myspec2 <- tramoseats_spec(spec = \"RSAfull\", tradingdays.mauto = \"Unused\",                            tradingdays.option = \"WorkingDays\",                            easter.type = \"Standard\",                            automdl.enabled = FALSE, arima.mu = TRUE) mysa2 <- tramoseats(myseries, spec = myspec2)  # To modify the model specification of a \"SA\" object myspec3 <- tramoseats_spec(mysa1, tradingdays.mauto = \"Unused\",                            tradingdays.option = \"WorkingDays\",                            easter.type = \"Standard\", automdl.enabled = FALSE, arima.mu = TRUE) mysa3 <- tramoseats(myseries, myspec3)  # To modify the model specification of a \"SA_spec\" object myspec4 <- tramoseats_spec(myspec1, tradingdays.mauto = \"Unused\",                            tradingdays.option = \"WorkingDays\",                            easter.type = \"Standard\", automdl.enabled = FALSE, arima.mu = TRUE) mysa4 <- tramoseats(myseries, myspec4)  # Pre-specified outliers myspec5 <- tramoseats_spec(spec = \"RSAfull\",                            usrdef.outliersEnabled = TRUE,                            usrdef.outliersType = c(\"LS\", \"LS\"),                            usrdef.outliersDate = c(\"2008-10-01\", \"2003-01-01\"),                            usrdef.outliersCoef = c(10,-8), transform.function = \"None\") s_preOut(myspec5) #>   type       date coeff #> 1   LS 2008-10-01    10 #> 2   LS 2003-01-01    -8 mysa5 <- tramoseats(myseries, myspec5) mysa5 #> RegARIMA #> y = regression model + arima (2, 1, 0, 1, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)      0.4872      0.051 #> Phi(2)      0.2964      0.051 #> BPhi(1)    -0.2070      0.071 #> BTheta(1)  -0.8048      0.044 #>  #>              Estimate Std. Error #> Week days      0.6814      0.039 #> Leap year      1.9125      0.726 #> Easter [6]    -2.4901      0.461 #> TC (4-2020)  -22.4492      2.288 #> TC (3-2020)  -21.2013      2.296 #> AO (5-2011)   12.6414      1.908 #> LS (11-2008) -14.2909      1.954 #>  #> Fixed outliers:  #>              Coefficients #> LS (10-2008)           10 #> LS (1-2003)            -8 #>  #>  #> Residual standard error: 2.421 on 347 degrees of freedom #> Log likelihood = -831.3, aic =  1687 aicc =  1688, bic(corrected for length) = 1.949 #>  #>  #>  #> Decomposition #> Model #> AR :  1 + 0.487236 B + 0.296353 B^2 - 0.207019 B^12 - 0.100867 B^13 - 0.061351 B^14  #> D :  1 - B - B^12 + B^13  #> MA :  1 - 0.804783 B^12  #>  #>  #> SA #> AR :  1 - 0.389767 B - 0.130954 B^2 - 0.259902 B^3  #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 1.807789 B + 0.901808 B^2 - 0.269318 B^3 + 0.305238 B^4 - 0.126109 B^5  #> Innovation variance:  0.434195  #>  #> Trend #> AR :  1 - 0.877002 B  #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 0.714788 B - 0.995207 B^2 + 0.719581 B^3  #> Innovation variance:  0.02178125  #>  #> Seasonal #> AR :  1 + 0.877002 B + 0.769133 B^2 + 0.674532 B^3 + 0.591566 B^4 + 0.518805 B^5 + 0.454993 B^6 + 0.399030 B^7 + 0.349950 B^8 + 0.306907 B^9 + 0.269159 B^10 + 0.236053 B^11  #> D :  1 + B + B^2 + B^3 + B^4 + B^5 + B^6 + B^7 + B^8 + B^9 + B^10 + B^11  #> MA :  1 + 2.178999 B + 3.063892 B^2 + 4.121863 B^3 + 5.003640 B^4 + 5.601993 B^5 + 6.042224 B^6 + 6.245708 B^7 + 6.304190 B^8 + 6.112595 B^9 + 5.879629 B^10 + 5.538195 B^11 + 4.649065 B^12 + 3.623707 B^13 + 2.832188 B^14 + 1.903031 B^15 + 1.111724 B^16 + 0.543666 B^17 + 0.100438 B^18 - 0.158107 B^19 - 0.300012 B^20 - 0.253276 B^21 - 0.169309 B^22  #> Innovation variance:  0.2937308  #>  #> Transitory #> AR :  1 + 0.487236 B + 0.296353 B^2  #> MA :  1 + 0.374200 B + B^2  #> Innovation variance:  0.0004441626  #>  #> Irregular #> Innovation variance:  0.2270517  #>  #>  #>  #> Final #> Last observed values #>              y        sa        t           s            i #> Jan 2020 101.0 103.36086 103.6698  -2.3608556  -0.30898902 #> Feb 2020 100.1 103.77440 103.7591  -3.6743960   0.01526074 #> Mar 2020  91.8  82.68181 103.8823   9.1181885 -21.20051445 #> Apr 2020  66.7  66.03104 104.0672   0.6689644 -38.03612893 #> May 2020  73.7  78.40145 104.3488  -4.7014498 -25.94737674 #> Jun 2020  98.2  87.17684 104.5662  11.0231647 -17.38939710 #> Jul 2020  97.4  92.05260 104.5630   5.3474007 -12.51040945 #> Aug 2020  71.7  96.37053 104.3138 -24.6705259  -7.94324202 #> Sep 2020 104.7  97.23252 103.8686   7.4674839  -6.63612508 #> Oct 2020 106.7  98.61143 103.4107   8.0885663  -4.79928434 #> Nov 2020 101.6 100.11916 103.0293   1.4808373  -2.91011190 #> Dec 2020  96.6  99.92823 102.7128  -3.3282284  -2.78459980 #>  #> Forecasts: #>                y_f     sa_f      t_f        s_f         i_f #> Jan 2021  93.59565 100.9960 102.4996  -7.399679 -1.50358792 #> Feb 2021  97.28250 101.2996 102.3539  -4.015335 -1.05431433 #> Mar 2021 111.80873 101.4867 102.2239  10.324214 -0.73723634 #> Apr 2021 103.12191 101.5917 102.1076   1.532091 -0.51591304 #> May 2021  95.98703 101.6419 102.0033  -5.653012 -0.36144565 #> Jun 2021 112.41967 101.6567 101.9096  10.762935 -0.25290781 #> Jul 2021 103.94320 101.6482 101.8251   2.296412 -0.17699539 #> Aug 2021  78.58807 101.6248 101.7488 -23.036711 -0.12394718 #> Sep 2021 109.12657 101.5928 101.6796   7.534699 -0.08675036 #> Oct 2021 107.23292 101.5558 101.6166   5.678242 -0.06071652 #> Nov 2021 105.47170 101.5165 101.5590   3.956022 -0.04250960 #> Dec 2021  99.15981 101.4766 101.5063  -2.317856 -0.02975541 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         3.137 #>  Seasonal     61.551 #>  Irregular     0.352 #>  TD & Hol.     2.592 #>  Others       30.919 #>  Total        98.551 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.243 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           1.000 #>  f-test on sa (seasonal dummies)        1.000 #>  f-test on i (seasonal dummies)         1.000 #>  Residual seasonality (entire series)   1.000 #>  Residual seasonality (last 3 years)    0.990 #>  f-test on sa (td)                      0.024 #>  f-test on i (td)                       0.089 #>  #>  #> Additional output variables s_preOut(mysa5) #>   type       date coeff #> 1   LS 2008-10-01    10 #> 2   LS 2003-01-01    -8  # User-defined calendar regressors var1 <- ts(rnorm(length(myseries))*10, start = start(myseries), frequency = 12) var2 <- ts(rnorm(length(myseries))*100, start = start(myseries), frequency = 12) var<- ts.union(var1, var2)  myspec6 <- tramoseats_spec(spec = \"RSAfull\", tradingdays.option = \"UserDefined\",                            usrdef.varEnabled = TRUE, usrdef.var = var,                            usrdef.varType = c(\"Calendar\", \"Calendar\")) #> Warning: With tradingdays.option = \"UserDefined\", the parameters tradingdays.leapyear and tradingdays.stocktd are ignored. s_preVar(myspec6) #> $series #>                   var1          var2 #> Jan 1990  -9.535959793  206.87405597 #> Feb 1990  -0.799824652 -131.50525575 #> Mar 1990  10.626959023 -110.97503996 #> Apr 1990  13.510568359    5.48967197 #> May 1990   2.332902205  -86.25873906 #> Jun 1990   3.338987914   93.07754912 #> Jul 1990  -7.647702581   57.11704007 #> Aug 1990   7.693844601  123.48319265 #> Sep 1990  -2.150129615   46.20031264 #> Oct 1990   3.833805853  -73.42081944 #> Nov 1990  -5.424953612  132.33606241 #> Dec 1990 -20.945782198   45.72947704 #> Jan 1991   3.780500587  -73.64807522 #> Feb 1991  -7.059342281  214.36128315 #> Mar 1991  -5.871045298  -33.81593680 #> Apr 1991   1.000863593   -7.09703999 #> May 1991  12.020663588   -8.82100204 #> Jun 1991   6.598439960   35.50907169 #> Jul 1991  -6.267453556 -120.48084555 #> Aug 1991  -5.297761060  145.60005038 #> Sep 1991   8.765031871   -0.04656092 #> Oct 1991  -0.501382118  -11.76236571 #> Nov 1991  22.803903528   18.41482138 #> Dec 1991  13.798105639  -86.12007223 #> Jan 1992  -5.736360343   77.93108467 #> Feb 1992 -14.168374281  -45.40641716 #> Mar 1992 -12.449074589 -202.86071844 #> Apr 1992   9.000824800   13.74981227 #> May 1992  19.894302565  -65.31652495 #> Jun 1992 -27.869752864   72.00350979 #> Jul 1992  -0.231353042   80.84364277 #> Aug 1992   2.041608395   96.24521304 #> Sep 1992   0.442285247   10.31380723 #> Oct 1992   6.270974878   68.63601515 #> Nov 1992  -9.472495541  109.51989336 #> Dec 1992 -11.228269438   18.18922153 #> Jan 1993  -0.203236495  -19.68754162 #> Feb 1993  12.250255435  -84.80613844 #> Mar 1993   0.830589847 -187.74430764 #> Apr 1993 -18.859151704 -258.61413063 #> May 1993  10.569271276   10.80672274 #> Jun 1993   6.129121886 -183.83419463 #> Jul 1993   5.896500909  -12.30852580 #> Aug 1993  -0.664513411   14.74878788 #> Sep 1993  -6.081078807 -143.06464098 #> Oct 1993   9.473045743  -10.59880850 #> Nov 1993   3.931699575   50.31819093 #> Dec 1993  -3.852059312  251.26804489 #> Jan 1994  -6.092631219  -44.13813498 #> Feb 1994  -3.843851460 -217.89991293 #> Mar 1994  -9.014236692  -67.81489679 #> Apr 1994   8.729458934   72.88472658 #> May 1994   5.618212586 -124.34327365 #> Jun 1994 -17.572785220  -58.82719769 #> Jul 1994  -8.121160950  110.85391313 #> Aug 1994   2.386905873  -50.23799876 #> Sep 1994  25.060017195   34.72986863 #> Oct 1994  -9.805871650  174.81467948 #> Nov 1994  15.661250555   46.28553413 #> Dec 1994  -7.588674355   76.78697074 #> Jan 1995   4.938451044   45.10162329 #> Feb 1995  -3.271504519  -35.25772249 #> Mar 1995  -4.348790398   36.64544857 #> Apr 1995  15.197231060  -48.81248718 #> May 1995   0.036778033   87.33900144 #> Jun 1995  -4.023399502  179.87806220 #> Jul 1995 -14.954664332  105.07952142 #> Aug 1995  -9.459855132  217.52306395 #> Sep 1995   9.064295082  -18.35628629 #> Oct 1995 -18.138676228  -68.67930022 #> Nov 1995  -9.517754317    2.52921842 #> Dec 1995  11.268520993   77.70312224 #> Jan 1996   1.398890649  135.80460668 #> Feb 1996   1.003399767   31.19454244 #> Mar 1996 -12.045286294   99.11976849 #> Apr 1996  -0.834582964  -38.18986462 #> May 1996  -7.970822469  -88.02615153 #> Jun 1996  11.015245786    2.30683213 #> Jul 1996   1.084104063   70.83967956 #> Aug 1996 -11.905067990  147.10711674 #> Sep 1996   2.799212761  142.31851069 #> Oct 1996   7.774077731  -73.17572527 #> Nov 1996  -2.210897240 -122.78623180 #> Dec 1996  -1.376768354  -84.65572264 #> Jan 1997   1.152300433  164.14782427 #> Feb 1997  15.332695729 -253.69827268 #> Mar 1997  -6.557744602  151.49668186 #> Apr 1997   8.583787007  134.44652874 #> May 1997 -11.876705517   34.22179953 #> Jun 1997   5.395403804  -32.46704812 #> Jul 1997  -2.663621627  -95.09212602 #> Aug 1997   7.581722346   12.25963233 #> Sep 1997 -10.314020292  220.95975457 #> Oct 1997  10.249315104  130.49280363 #> Nov 1997  -1.452615921  -52.55140662 #> Dec 1997   1.092238302  115.16359225 #> Jan 1998 -14.785987947   82.61668965 #> Feb 1998 -22.791912223  115.62448319 #> Mar 1998   6.000768904   41.09726943 #> Apr 1998  -3.465781995   -5.60486435 #> May 1998  -2.851536719   78.01771348 #> Jun 1998  -6.476521580 -192.31777839 #> Jul 1998 -12.722147004  -27.36494881 #> Aug 1998  -1.751731809   60.37177315 #> Sep 1998 -22.013195775 -131.73483134 #> Oct 1998   5.798759794   95.55886301 #> Nov 1998   0.627964711    1.28535381 #> Dec 1998  17.751245181   29.14360940 #> Jan 1999  13.836946999 -201.68055585 #> Feb 1999  16.309602864 -159.64884036 #> Mar 1999  -8.083912981   79.05133025 #> Apr 1999   0.955654515   -5.59537712 #> May 1999   9.168081903  278.46565380 #> Jun 1999   4.738435430   39.54117043 #> Jul 1999  -3.952457160  269.79624187 #> Aug 1999   4.293985438  105.66101329 #> Sep 1999   8.509307909  178.18693119 #> Oct 1999  -1.703946179  131.86880388 #> Nov 1999  -0.007914038  -72.40831537 #> Dec 1999   8.606414955  -26.32911657 #> Jan 2000   6.403423802  -34.85907549 #> Feb 2000   1.068762896  -21.32519004 #> Mar 2000 -14.604777644   74.86664662 #> Apr 2000   4.551713753 -300.45498345 #> May 2000  12.720846841  -20.57101950 #> Jun 2000 -19.151875806  -14.35167183 #> Jul 2000   2.355890946  131.09571969 #> Aug 2000  10.559143097   76.45732607 #> Sep 2000   4.316772438   56.44685721 #> Oct 2000 -17.459432119  -17.53213851 #> Nov 2000  26.345754763   -0.25746856 #> Dec 2000  -0.308035714   58.87499380 #> Jan 2001 -22.561887639   17.53171579 #> Feb 2001  18.368225390  139.69229710 #> Mar 2001   4.985355661   82.54166479 #> Apr 2001   1.562468467   55.47305107 #> May 2001   5.565016905   54.53779827 #> Jun 2001   6.871069775  -53.63845039 #> Jul 2001 -33.041822297 -183.92675089 #> Aug 2001   8.783299631  -71.23421939 #> Sep 2001  14.611756864   -9.45664557 #> Oct 2001  -1.094066808   24.30159689 #> Nov 2001  13.256063791  102.04461058 #> Dec 2001  11.406805737   92.32619914 #> Jan 2002  -9.303642146   26.31799404 #> Feb 2002  -1.946233382  -68.75861883 #> Mar 2002   9.240072693   22.08611800 #> Apr 2002  -2.837713588  -55.41037774 #> May 2002   6.438188432   55.18463880 #> Jun 2002  12.049299753  -16.18329852 #> Jul 2002  -9.864334772  135.14035346 #> Aug 2002  13.629994009   -0.53331422 #> Sep 2002  -6.371366390 -240.51334407 #> Oct 2002 -12.527051445   98.98093589 #> Nov 2002  -5.751377304 -123.30316799 #> Dec 2002 -16.763008174    2.74105624 #> Jan 2003   2.628120182  -39.10052334 #> Feb 2003 -14.208832929  240.18101774 #> Mar 2003   7.738467161   55.41959989 #> Apr 2003  -6.301913980   56.07759451 #> May 2003 -25.232229681 -143.07888081 #> Jun 2003  10.456761237   25.65309367 #> Jul 2003   7.513402330   44.75129842 #> Aug 2003   7.981608534   90.91545502 #> Sep 2003 -15.676418337  -65.76117921 #> Oct 2003 -11.474768636   25.47812926 #> Nov 2003   4.355867220 -136.29594240 #> Dec 2003  10.532004191 -115.16580441 #> Jan 2004   9.635066048    9.23561855 #> Feb 2004   6.939309379  -52.61090352 #> Mar 2004  -2.300709516  -94.12824980 #> Apr 2004  -9.355586095 -116.03851187 #> May 2004  -9.026203778  146.32167885 #> Jun 2004  -0.308600940 -122.70357371 #> Jul 2004  -8.686782246  128.91223057 #> Aug 2004  21.877875041   52.19834145 #> Sep 2004  15.385301545    3.86469118 #> Oct 2004 -18.820726709    0.54809002 #> Nov 2004   9.158750045  205.09627114 #> Dec 2004  -4.017400140   58.40034881 #> Jan 2005 -12.568740002  -71.96403767 #> Feb 2005  11.843968692   31.72919743 #> Mar 2005  10.085724636   16.67156540 #> Apr 2005 -10.661521156  250.26785326 #> May 2005 -10.802139977   40.04087093 #> Jun 2005 -15.265903705  107.21119854 #> Jul 2005 -13.704004261    5.50009631 #> Aug 2005 -12.935694331   -6.13638601 #> Sep 2005 -29.610297132 -107.64435907 #> Oct 2005  11.255956830   50.43042930 #> Nov 2005   0.040275376   53.62245498 #> Dec 2005   1.626711541 -135.49772917 #> Jan 2006 -14.839223699   22.75063071 #> Feb 2006  11.648603184 -252.94187083 #> Mar 2006 -12.724193004  -81.85311433 #> Apr 2006 -11.137786657 -158.95299935 #> May 2006 -13.069370448 -108.24933233 #> Jun 2006  -1.742082303   20.58043597 #> Jul 2006  -6.832515233 -108.11823198 #> Aug 2006  -6.215682860  -18.87925541 #> Sep 2006  -1.551632320   31.27564538 #> Oct 2006 -10.864935828    7.47169985 #> Nov 2006   5.502220067  -60.43448541 #> Dec 2006  13.947806779    4.52466495 #> Jan 2007 -15.883192579  164.85396371 #> Feb 2007  20.675835289  -75.56829840 #> Mar 2007 -16.971130469  -28.81793527 #> Apr 2007   8.605076312  -73.01505059 #> May 2007  -3.796434887   52.41485203 #> Jun 2007  18.476301068  -59.17005292 #> Jul 2007  10.376561791 -118.39119861 #> Aug 2007 -14.695747682  120.03531317 #> Sep 2007 -27.769482100  -90.80713269 #> Oct 2007  -0.769797878 -154.88176869 #> Nov 2007  -9.544920721   40.80449528 #> Dec 2007   7.086794196   87.23428206 #> Jan 2008  17.770868082 -186.04776905 #> Feb 2008   8.663143079   20.61176045 #> Mar 2008   1.530058172 -106.55260009 #> Apr 2008  -0.463890794   44.42791106 #> May 2008 -16.728474148   39.00637392 #> Jun 2008 -10.898906119  -11.94045102 #> Jul 2008  -0.761757047  147.49626484 #> Aug 2008 -13.058317158 -129.46582609 #> Sep 2008  -0.623845628 -146.76126825 #> Oct 2008   3.423715685  -21.13007304 #> Nov 2008  -5.489306150   41.96187254 #> Dec 2008   9.150613267  143.33403558 #> Jan 2009  -0.876039035  -73.74681135 #> Feb 2009  -0.255794707  -12.50153428 #> Mar 2009 -12.543574063   27.98241470 #> Apr 2009  18.801248228  -44.73720260 #> May 2009  -1.409493686    4.79576801 #> Jun 2009  -1.066911374  109.28525350 #> Jul 2009   7.245550904   50.80096757 #> Aug 2009   4.288180835  -86.99107994 #> Sep 2009 -15.802157511  -70.26764757 #> Oct 2009   7.747558144 -135.94072699 #> Nov 2009 -11.642921245   34.56469912 #> Dec 2009   0.088543033   42.18054806 #> Jan 2010  -4.550780017   32.67116657 #> Feb 2010 -10.026900477  -96.35751113 #> Mar 2010   4.280695718   47.86579776 #> Apr 2010   2.025623016   78.05649166 #> May 2010   1.815832754  -18.54254995 #> Jun 2010   5.656938676  -37.14157620 #> Jul 2010  -2.776569799  -37.59064151 #> Aug 2010 -13.642484813 -104.97730923 #> Sep 2010  12.992072495   13.55098866 #> Oct 2010 -19.928465574 -104.19342492 #> Nov 2010  -1.037160872  137.15434613 #> Dec 2010   2.997662573   21.17230202 #> Jan 2011  -4.030004095  -41.99902912 #> Feb 2011   3.384909572  -51.45817426 #> Mar 2011 -14.784270394  -48.11891408 #> Apr 2011  -0.465149259   -2.28961166 #> May 2011   0.316881860  -23.58173751 #> Jun 2011   2.815326072   -4.29158886 #> Jul 2011   8.031952537  -53.34721852 #> Aug 2011  -2.088583488   24.09236569 #> Sep 2011  -3.367281762   27.57879994 #> Oct 2011  -4.563097517   98.73378846 #> Nov 2011  10.242603097  -60.71750184 #> Dec 2011  14.573951507  -24.31552344 #> Jan 2012  -2.249305874  -18.37188962 #> Feb 2012   2.900685098   56.45491125 #> Mar 2012   2.592765437  -64.56633054 #> Apr 2012   0.098922998 -198.41975169 #> May 2012  -1.846739254  -93.28107935 #> Jun 2012  16.542465847  186.45597497 #> Jul 2012   4.368543558   30.76683344 #> Aug 2012   8.473161118 -187.34768073 #> Sep 2012   9.962823002 -138.15863726 #> Oct 2012  10.674524423  121.42810047 #> Nov 2012  -0.533425785   14.14819037 #> Dec 2012   9.929262251    6.31038506 #> Jan 2013  -4.993526848  123.54612674 #> Feb 2013 -11.163933292 -109.65462143 #> Mar 2013  -9.745167645  -67.87837062 #> Apr 2013  27.874035400  -55.98672378 #> May 2013  -7.733134688   21.54763562 #> Jun 2013  34.805397484 -205.54352012 #> Jul 2013  -6.174219736  -52.04086283 #> Aug 2013   5.207824425   25.22639057 #> Sep 2013   5.925402530   15.31564241 #> Oct 2013  -9.003468488   49.21244244 #> Nov 2013  14.742813210   53.38223818 #> Dec 2013  10.851326027  -20.71323619 #> Jan 2014 -17.066874385    3.51198991 #> Feb 2014 -11.686962998 -112.09760249 #> Mar 2014 -14.194533339  -33.19658718 #> Apr 2014   6.459709494 -127.72551270 #> May 2014  -4.271327890   53.86513275 #> Jun 2014  11.898281468  134.88412839 #> Jul 2014  -1.398591424   60.11115022 #> Aug 2014   1.893959765   -1.27195862 #> Sep 2014   0.575844052   71.61389956 #> Oct 2014  -5.872461267   40.56344197 #> Nov 2014  -2.414145797  -35.48522938 #> Dec 2014   7.638003907  -83.12560816 #> Jan 2015  -6.780967332   22.50229021 #> Feb 2015   8.369941394  -68.84118696 #> Mar 2015   0.419394664  -64.87876143 #> Apr 2015   9.793095986   47.17313456 #> May 2015  14.960956543   17.46062477 #> Jun 2015  13.811671565  -39.32748689 #> Jul 2015   1.771868508   12.32405780 #> Aug 2015  -6.045588857 -200.66676498 #> Sep 2015  -0.064125536  120.97835399 #> Oct 2015 -10.309176045   14.03724416 #> Nov 2015  -5.966193013  -87.58278740 #> Dec 2015  12.300053344   96.23647351 #> Jan 2016 -21.252639407  119.02676925 #> Feb 2016   5.465412848   19.19778176 #> Mar 2016  10.114553407 -182.76005309 #> Apr 2016  13.671746024  -84.00768199 #> May 2016   7.078379701  162.33939897 #> Jun 2016  -1.225158540   16.00414539 #> Jul 2016  -7.994091347  160.01512693 #> Aug 2016  -1.793600041   11.42747080 #> Sep 2016   1.094528569 -136.54245494 #> Oct 2016   2.309265529   43.85387343 #> Nov 2016 -12.696631620  -96.15072720 #> Dec 2016   6.205258113  121.63488867 #> Jan 2017  -6.423485204  -78.07119719 #> Feb 2017   6.623578138  -68.22932097 #> Mar 2017   2.458842772 -224.34263707 #> Apr 2017  -8.478936872   18.02763931 #> May 2017  -4.347674107   78.15066352 #> Jun 2017   8.831759490  -95.72313412 #> Jul 2017   5.863186803    9.14070547 #> Aug 2017  -2.566920407  -41.57419781 #> Sep 2017  12.201357048  -66.14235523 #> Oct 2017  23.258879673   68.39716351 #> Nov 2017 -13.070423363   89.23843412 #> Dec 2017   0.002714681  -72.69075674 #> Jan 2018  11.425115700  101.57440260 #> Feb 2018  -2.219401352  -39.55934314 #> Mar 2018  -2.083145925  215.95110680 #> Apr 2018   7.499227118  221.55815780 #> May 2018   1.176056177  -25.57170694 #> Jun 2018   0.990212037   30.22917004 #> Jul 2018  13.616884687  -66.58050504 #> Aug 2018  -8.389882385  -69.60612070 #> Sep 2018 -10.649372190   68.33419337 #> Oct 2018  21.131680157  -58.92748703 #> Nov 2018   5.106671868   -7.40935495 #> Dec 2018  12.002630345 -111.22710265 #> Jan 2019  10.454600553  -59.10622513 #> Feb 2019   7.204436071   85.69446096 #> Mar 2019   5.029684073   50.88933898 #> Apr 2019   9.558412135   39.71038981 #> May 2019   4.921280559   38.67572514 #> Jun 2019  -1.559494684   37.01361846 #> Jul 2019  -4.330621776  103.67230979 #> Aug 2019 -12.234203505  235.87650580 #> Sep 2019  -2.903433729  -91.36020752 #> Oct 2019   3.402319889  127.55994229 #> Nov 2019   2.345520557 -143.90900919 #> Dec 2019   0.118239369    3.81422070 #> Jan 2020   6.047329872  -50.35721949 #> Feb 2020   7.375097630 -171.31774452 #> Mar 2020  -8.981034882   75.24516306 #> Apr 2020   1.718213563  -88.34021094 #> May 2020   9.132347891   13.65187786 #> Jun 2020 -11.051534547   42.62818848 #> Jul 2020   3.934501445  -92.51397505 #> Aug 2020 -13.698426711  -96.90957364 #> Sep 2020   7.394716153  -22.65827784 #> Oct 2020   6.383709370  -97.82239636 #> Nov 2020 -22.803538615  -53.33541279 #> Dec 2020 -20.112246984   86.63929336 #>  #> $description #>          type coeff #> var1 Calendar    NA #> var2 Calendar    NA #>  mysa6 <- tramoseats(myseries, myspec6) #> Warning: [decomposition.Model decomposition: Parameters cut off]  myspec7 <- tramoseats_spec(spec = \"RSAfull\", usrdef.varEnabled = TRUE,                            usrdef.var = var, usrdef.varCoef = c(17,-1),                            transform.function = \"None\") mysa7 <- tramoseats(myseries, myspec7)  # Pre-specified ARMA coefficients myspec8 <- tramoseats_spec(spec = \"RSAfull\",                            arima.coefEnabled = TRUE, automdl.enabled = FALSE,                            arima.p = 2, arima.q = 0,                            arima.bp = 1, arima.bq = 1,                            arima.coef = c(-0.12, -0.12, -0.3, -0.99),                            arima.coefType = rep(\"Fixed\", 4)) mysa8 <- tramoseats(myseries, myspec8) #> Warning: [decomposition.Model decomposition: Parameters cut off] mysa8 #> RegARIMA #> y = regression model + arima (2, 1, 0, 1, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)       -0.12          0 #> Phi(2)       -0.12          0 #> BPhi(1)      -0.30          0 #> BTheta(1)    -0.99          0 #>  #>                Estimate Std. Error #> Mean          -0.007018      0.029 #> Week days      0.704716      0.029 #> Leap year      2.163501      0.675 #> Easter [6]    -2.360603      0.385 #> TC (4-2020)  -25.280857      2.517 #> TC (3-2020)  -21.581618      2.569 #> AO (5-2011)   14.219490      1.749 #> LS (11-2008)  -6.225300      2.608 #>  #>  #> Residual standard error: 2.712 on 350 degrees of freedom #> Log likelihood = -882.9, aic =  1784 aicc =  1784, bic(corrected for length) = 2.127 #>  #>  #>  #> Decomposition #> Model #> AR :  1 - 0.120000 B - 0.120000 B^2 - 0.300000 B^12 + 0.036000 B^13 + 0.036000 B^14  #> D :  1 - B - B^12 + B^13  #> MA :  1 - 0.950000 B^12  #>  #>  #> SA #> AR :  1 - 1.024538 B - 0.011455 B^2 + 0.108545 B^3  #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 1.941460 B + 0.995458 B^2 + 0.036596 B^3 - 0.098708 B^4 + 0.008921 B^5  #> Innovation variance:  0.4957156  #>  #> Trend #> AR :  1 - 0.904538 B  #> D :  1 - 2.000000 B + B^2  #> MA :  1 - 0.722193 B - 0.998833 B^2 + 0.723360 B^3  #> Innovation variance:  0.1026625  #>  #> Seasonal #> AR :  1 + 0.904538 B + 0.818189 B^2 + 0.740083 B^3 + 0.669433 B^4 + 0.605527 B^5 + 0.547723 B^6 + 0.495436 B^7 + 0.448140 B^8 + 0.405360 B^9 + 0.366664 B^10 + 0.331661 B^11  #> D :  1 + B + B^2 + B^3 + B^4 + B^5 + B^6 + B^7 + B^8 + B^9 + B^10 + B^11  #> MA :  1 + 2.915179 B + 5.617938 B^2 + 8.595374 B^3 + 11.505684 B^4 + 14.135215 B^5 + 16.348945 B^6 + 18.036965 B^7 + 19.197199 B^8 + 19.965176 B^9 + 20.301074 B^10 + 20.149549 B^11 + 19.110304 B^12 + 17.206569 B^13 + 14.558551 B^14 + 11.650924 B^15 + 8.806927 B^16 + 6.228869 B^17 + 4.044510 B^18 + 2.357558 B^19 + 1.170033 B^20 + 0.354583 B^21 - 0.052292 B^22  #> Innovation variance:  0.2584115  #>  #> Transitory #> AR :  1 - 0.120000 B - 0.120000 B^2  #> MA :  1 + 1.287572 B + 0.287572 B^2  #> Innovation variance:  9.66767e-06  #>  #> Irregular #> Innovation variance:  0.1228651  #>  #>  #>  #> Final #> Last observed values #>              y        sa        t          s            i #> Jan 2020 101.0 104.26082 104.1042  -3.260821   0.15661216 #> Feb 2020 100.1 104.61371 104.5530  -4.513714   0.06076253 #> Mar 2020  91.8  83.22384 104.8133   8.576159 -21.58942879 #> Apr 2020  66.7  64.54936 105.1877   2.150645 -40.63830016 #> May 2020  73.7  77.68315 105.6408  -3.983146 -27.95763593 #> Jun 2020  98.2  85.98531 105.6977  12.214693 -19.71243272 #> Jul 2020  97.4  91.30785 105.6878   6.092154 -14.37997103 #> Aug 2020  71.7  96.93855 105.3429 -25.238546  -8.40432490 #> Sep 2020 104.7  96.44550 104.0342   8.254501  -7.58868184 #> Oct 2020 106.7  97.99258 103.1705   8.707420  -5.17788550 #> Nov 2020 101.6 100.37821 102.7766   1.221785  -2.39834446 #> Dec 2020  96.6  98.88800 101.7659  -2.287995  -2.87795452 #>  #> Forecasts: #>                y_f     sa_f       t_f         s_f         i_f #> Jan 2021  90.45630 99.25146 100.88131  -8.3529406 -1.62984885 #> Feb 2021  92.96291 99.26414 100.40502  -5.6858753 -1.14087970 #> Mar 2021 107.94414 99.16721  99.96582   9.4108234 -0.79860872 #> Apr 2021 100.06082 99.00111  99.56013   1.7251675 -0.55902344 #> May 2021  92.32683 98.79338  99.18469  -5.8047774 -0.39131514 #> Jun 2021 109.76210 98.56264  98.83656  11.5896516 -0.27391913 #> Jul 2021  99.28583 98.32134  98.51308   1.7410215 -0.19174293 #> Aug 2021  72.73390 98.07763  98.21185 -24.3850120 -0.13421991 #> Sep 2021 105.42789 97.83673  97.93068   8.1237153 -0.09395290 #> Oct 2021 103.20722 97.60185  97.66762   6.1153709 -0.06576632 #> Nov 2021 101.03104 97.37483  97.42087   4.2605212 -0.04603637 #> Dec 2021  96.56590 97.15661  97.18883  -0.4705564 -0.03222456 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         3.408 #>  Seasonal     72.835 #>  Irregular     0.303 #>  TD & Hol.     3.240 #>  Others       18.296 #>  Total        98.081 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.072 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           1.000 #>  f-test on sa (seasonal dummies)        1.000 #>  f-test on i (seasonal dummies)         1.000 #>  Residual seasonality (entire series)   1.000 #>  Residual seasonality (last 3 years)    0.881 #>  f-test on sa (td)                      0.008 #>  f-test on i (td)                       0.052 #>  #>  #> Additional output variables s_arimaCoef(myspec8) #>            Type Value #> Phi(1)    Fixed -0.12 #> Phi(2)    Fixed -0.12 #> BPhi(1)   Fixed -0.30 #> BTheta(1) Fixed -0.99 s_arimaCoef(mysa8) #>            Type Value #> Phi(1)    Fixed -0.12 #> Phi(2)    Fixed -0.12 #> BPhi(1)   Fixed -0.30 #> BTheta(1) Fixed -0.99 # }"},{"path":"/reference/user_defined_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a list of all the available output objects (series, parameters, diagnostics) — user_defined_variables","title":"Display a list of all the available output objects (series, parameters, diagnostics) — user_defined_variables","text":"Function generating comprehensive list available output variables (series, parameters, diagnostics) estimation process x13 tramoseats. items available default estimation output remainder can added using userdefined parameter.","code":""},{"path":"/reference/user_defined_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a list of all the available output objects (series, parameters, diagnostics) — user_defined_variables","text":"","code":"user_defined_variables(sa_object = c(\"X13-ARIMA\", \"TRAMO-SEATS\"))"},{"path":"/reference/user_defined_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a list of all the available output objects (series, parameters, diagnostics) — user_defined_variables","text":"sa_object character: \"X13-ARIMA\" retrieve additional output variables available X13-ARIMA method \"TRAMO-SEATS\" TRAMO-SEATS method.","code":""},{"path":"/reference/user_defined_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a list of all the available output objects (series, parameters, diagnostics) — user_defined_variables","text":"vector containing names available output objects (series, diagnostics, parameters)","code":""},{"path":"/reference/user_defined_variables.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Display a list of all the available output objects (series, parameters, diagnostics) — user_defined_variables","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":"/reference/user_defined_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a list of all the available output objects (series, parameters, diagnostics) — user_defined_variables","text":"","code":"y<- ipi_c_eu[, \"FR\"] user_defined_variables(\"X13-ARIMA\") #>   [1] \"y\"                                               #>   [2] \"y_f\"                                             #>   [3] \"t\"                                               #>   [4] \"t_f\"                                             #>   [5] \"sa\"                                              #>   [6] \"sa_f\"                                            #>   [7] \"s\"                                               #>   [8] \"s_f\"                                             #>   [9] \"i\"                                               #>  [10] \"i_f\"                                             #>  [11] \"mode\"                                            #>  [12] \"preprocessing.model.span.start\"                  #>  [13] \"preprocessing.model.span.end\"                    #>  [14] \"preprocessing.model.span.n\"                      #>  [15] \"preprocessing.model.espan.start\"                 #>  [16] \"preprocessing.model.espan.end\"                   #>  [17] \"preprocessing.model.espan.n\"                     #>  [18] \"preprocessing.model.log\"                         #>  [19] \"preprocessing.model.adjust\"                      #>  [20] \"preprocessing.model.y\"                           #>  [21] \"preprocessing.model.y_f\"                         #>  [22] \"preprocessing.model.y_ef\"                        #>  [23] \"preprocessing.model.yc\"                          #>  [24] \"preprocessing.model.yc_f\"                        #>  [25] \"preprocessing.model.yc_ef\"                       #>  [26] \"preprocessing.model.l\"                           #>  [27] \"preprocessing.model.y_lin\"                       #>  [28] \"preprocessing.model.y_lin_f\"                     #>  [29] \"preprocessing.model.ycal\"                        #>  [30] \"preprocessing.model.ycal_f\"                      #>  [31] \"preprocessing.model.det\"                         #>  [32] \"preprocessing.model.det_f\"                       #>  [33] \"preprocessing.model.l_f\"                         #>  [34] \"preprocessing.model.l_b\"                         #>  [35] \"preprocessing.model.cal\"                         #>  [36] \"preprocessing.model.cal_f\"                       #>  [37] \"preprocessing.model.tde\"                         #>  [38] \"preprocessing.model.tde_f\"                       #>  [39] \"preprocessing.model.mhe\"                         #>  [40] \"preprocessing.model.mhe_f\"                       #>  [41] \"preprocessing.model.ee\"                          #>  [42] \"preprocessing.model.ee_f\"                        #>  [43] \"preprocessing.model.omhe\"                        #>  [44] \"preprocessing.model.omhe_f\"                      #>  [45] \"preprocessing.model.out(*)\"                      #>  [46] \"preprocessing.model.out_f\"                       #>  [47] \"preprocessing.model.out_i\"                       #>  [48] \"preprocessing.model.out_i_f\"                     #>  [49] \"preprocessing.model.out_t\"                       #>  [50] \"preprocessing.model.out_t_f\"                     #>  [51] \"preprocessing.model.out_s\"                       #>  [52] \"preprocessing.model.out_s_f\"                     #>  [53] \"preprocessing.model.reg\"                         #>  [54] \"preprocessing.model.reg_f\"                       #>  [55] \"preprocessing.model.reg_t\"                       #>  [56] \"preprocessing.model.reg_t_f\"                     #>  [57] \"preprocessing.model.reg_s\"                       #>  [58] \"preprocessing.model.reg_s_f\"                     #>  [59] \"preprocessing.model.reg_i\"                       #>  [60] \"preprocessing.model.reg_i_f\"                     #>  [61] \"preprocessing.model.reg_sa\"                      #>  [62] \"preprocessing.model.reg_sa_f\"                    #>  [63] \"preprocessing.model.reg_y\"                       #>  [64] \"preprocessing.model.reg_y_f\"                     #>  [65] \"preprocessing.model.reg_u\"                       #>  [66] \"preprocessing.model.reg_u_f\"                     #>  [67] \"preprocessing.model.fullresiduals\"               #>  [68] \"preprocessing.model.lp\"                          #>  [69] \"preprocessing.model.ntd\"                         #>  [70] \"preprocessing.model.nmh\"                         #>  [71] \"preprocessing.model.td(*)\"                       #>  [72] \"preprocessing.model.easter\"                      #>  [73] \"preprocessing.model.nout\"                        #>  [74] \"preprocessing.model.noutao\"                      #>  [75] \"preprocessing.model.noutls\"                      #>  [76] \"preprocessing.model.nouttc\"                      #>  [77] \"preprocessing.model.noutso\"                      #>  [78] \"preprocessing.model.coefficients\"                #>  [79] \"preprocessing.model.description\"                 #>  [80] \"preprocessing.model.covar\"                       #>  [81] \"preprocessing.model.pcovar\"                      #>  [82] \"preprocessing.model.fcasts(?)\"                   #>  [83] \"preprocessing.model.bcasts(?)\"                   #>  [84] \"preprocessing.model.lin_fcasts(?)\"               #>  [85] \"preprocessing.model.lin_bcasts(?)\"               #>  [86] \"preprocessing.model.efcasts(?)\"                  #>  [87] \"preprocessing.arima.parameters\"                  #>  [88] \"preprocessing.arima.p\"                           #>  [89] \"preprocessing.arima.d\"                           #>  [90] \"preprocessing.arima.q\"                           #>  [91] \"preprocessing.arima.bp\"                          #>  [92] \"preprocessing.arima.bd\"                          #>  [93] \"preprocessing.arima.bq\"                          #>  [94] \"preprocessing.likelihood.neffectiveobs\"          #>  [95] \"preprocessing.likelihood.np\"                     #>  [96] \"preprocessing.likelihood.logvalue\"               #>  [97] \"preprocessing.likelihood.adjustedlogvalue\"       #>  [98] \"preprocessing.likelihood.ssqerr\"                 #>  [99] \"preprocessing.likelihood.aic\"                    #> [100] \"preprocessing.likelihood.aicc\"                   #> [101] \"preprocessing.likelihood.bic\"                    #> [102] \"preprocessing.likelihood.bicc\"                   #> [103] \"preprocessing.likelihood.ser\"                    #> [104] \"preprocessing.likelihood.ser-ml\"                 #> [105] \"preprocessing.residuals.res\"                     #> [106] \"preprocessing.residuals.mean\"                    #> [107] \"preprocessing.residuals.skewness\"                #> [108] \"preprocessing.residuals.kurtosis\"                #> [109] \"preprocessing.residuals.dh\"                      #> [110] \"preprocessing.residuals.lb\"                      #> [111] \"preprocessing.residuals.lb2\"                     #> [112] \"preprocessing.residuals.seaslb\"                  #> [113] \"preprocessing.residuals.bp\"                      #> [114] \"preprocessing.residuals.bp2\"                     #> [115] \"preprocessing.residuals.seasbp\"                  #> [116] \"preprocessing.residuals.nruns\"                   #> [117] \"preprocessing.residuals.lruns\"                   #> [118] \"mstats.M(*)\"                                     #> [119] \"mstats.Q\"                                        #> [120] \"mstats.Q-M2\"                                     #> [121] \"decomposition.a1\"                                #> [122] \"decomposition.a1a\"                               #> [123] \"decomposition.a1b\"                               #> [124] \"decomposition.a6\"                                #> [125] \"decomposition.a7\"                                #> [126] \"decomposition.a8\"                                #> [127] \"decomposition.a8t\"                               #> [128] \"decomposition.a8s\"                               #> [129] \"decomposition.a8i\"                               #> [130] \"decomposition.a9\"                                #> [131] \"decomposition.a9sa\"                              #> [132] \"decomposition.a9u\"                               #> [133] \"decomposition.a9ser\"                             #> [134] \"decomposition.b1\"                                #> [135] \"decomposition.b2\"                                #> [136] \"decomposition.b3\"                                #> [137] \"decomposition.b4\"                                #> [138] \"decomposition.b5\"                                #> [139] \"decomposition.b6\"                                #> [140] \"decomposition.b7\"                                #> [141] \"decomposition.b8\"                                #> [142] \"decomposition.b9\"                                #> [143] \"decomposition.b10\"                               #> [144] \"decomposition.b11\"                               #> [145] \"decomposition.b12\"                               #> [146] \"decomposition.b13\"                               #> [147] \"decomposition.b14\"                               #> [148] \"decomposition.b15\"                               #> [149] \"decomposition.b16\"                               #> [150] \"decomposition.b17\"                               #> [151] \"decomposition.b18\"                               #> [152] \"decomposition.b19\"                               #> [153] \"decomposition.b20\"                               #> [154] \"decomposition.c1\"                                #> [155] \"decomposition.c2\"                                #> [156] \"decomposition.c3\"                                #> [157] \"decomposition.c4\"                                #> [158] \"decomposition.c5\"                                #> [159] \"decomposition.c6\"                                #> [160] \"decomposition.c7\"                                #> [161] \"decomposition.c8\"                                #> [162] \"decomposition.c9\"                                #> [163] \"decomposition.c10\"                               #> [164] \"decomposition.c11\"                               #> [165] \"decomposition.c12\"                               #> [166] \"decomposition.c13\"                               #> [167] \"decomposition.c14\"                               #> [168] \"decomposition.c15\"                               #> [169] \"decomposition.c16\"                               #> [170] \"decomposition.c17\"                               #> [171] \"decomposition.c18\"                               #> [172] \"decomposition.c19\"                               #> [173] \"decomposition.c20\"                               #> [174] \"decomposition.d1\"                                #> [175] \"decomposition.d2\"                                #> [176] \"decomposition.d3\"                                #> [177] \"decomposition.d4\"                                #> [178] \"decomposition.d5\"                                #> [179] \"decomposition.d6\"                                #> [180] \"decomposition.d7\"                                #> [181] \"decomposition.d8\"                                #> [182] \"decomposition.d9\"                                #> [183] \"decomposition.d10\"                               #> [184] \"decomposition.d10a\"                              #> [185] \"decomposition.d10b\"                              #> [186] \"decomposition.d11\"                               #> [187] \"decomposition.d11a\"                              #> [188] \"decomposition.d12\"                               #> [189] \"decomposition.d12a\"                              #> [190] \"decomposition.d13\"                               #> [191] \"decomposition.d14\"                               #> [192] \"decomposition.d15\"                               #> [193] \"decomposition.d16\"                               #> [194] \"decomposition.d16a\"                              #> [195] \"decomposition.d16b\"                              #> [196] \"decomposition.d18\"                               #> [197] \"decomposition.d19\"                               #> [198] \"decomposition.d20\"                               #> [199] \"decomposition.e1\"                                #> [200] \"decomposition.e2\"                                #> [201] \"decomposition.e3\"                                #> [202] \"decomposition.e11\"                               #> [203] \"decomposition.y_cmp\"                             #> [204] \"decomposition.t_cmp\"                             #> [205] \"decomposition.i_cmp\"                             #> [206] \"decomposition.s_cmp\"                             #> [207] \"decomposition.sa_cmp\"                            #> [208] \"decomposition.y_cmp_f\"                           #> [209] \"decomposition.t_cmp_f\"                           #> [210] \"decomposition.i_cmp_f\"                           #> [211] \"decomposition.s_cmp_f\"                           #> [212] \"decomposition.sa_cmp_f\"                          #> [213] \"decomposition.d9filter\"                          #> [214] \"decomposition.slen\"                              #> [215] \"decomposition.d12filter\"                         #> [216] \"decomposition.tlen\"                              #> [217] \"diagnostics.qs\"                                  #> [218] \"diagnostics.ftest\"                               #> [219] \"diagnostics.qs.on.i\"                             #> [220] \"diagnostics.ftest.on.i\"                          #> [221] \"diagnostics.combined.all.kruskalwallis\"          #> [222] \"diagnostics.combined.all.stable\"                 #> [223] \"diagnostics.combined.all.evolutive\"              #> [224] \"diagnostics.combined.all.summary\"                #> [225] \"diagnostics.combined.all.stable.ssm\"             #> [226] \"diagnostics.combined.all.stable.ssr\"             #> [227] \"diagnostics.combined.all.stable.ssq\"             #> [228] \"diagnostics.combined.all.evolutive.ssm\"          #> [229] \"diagnostics.combined.all.evolutive.ssr\"          #> [230] \"diagnostics.combined.all.evolutive.ssq\"          #> [231] \"diagnostics.combined.end.kruskalwallis\"          #> [232] \"diagnostics.combined.end.stable\"                 #> [233] \"diagnostics.combined.end.evolutive\"              #> [234] \"diagnostics.combined.end.summary\"                #> [235] \"diagnostics.combined.end.stable.ssm\"             #> [236] \"diagnostics.combined.end.stable.ssr\"             #> [237] \"diagnostics.combined.end.stable.ssq\"             #> [238] \"diagnostics.combined.end.evolutive.ssm\"          #> [239] \"diagnostics.combined.end.evolutive.ssr\"          #> [240] \"diagnostics.combined.end.evolutive.ssq\"          #> [241] \"diagnostics.combined.residual.all.kruskalwallis\" #> [242] \"diagnostics.combined.residual.all.stable\"        #> [243] \"diagnostics.combined.residual.all.evolutive\"     #> [244] \"diagnostics.combined.residual.all.summary\"       #> [245] \"diagnostics.combined.residual.all.stable.ssm\"    #> [246] \"diagnostics.combined.residual.all.stable.ssr\"    #> [247] \"diagnostics.combined.residual.all.stable.ssq\"    #> [248] \"diagnostics.combined.residual.all.evolutive.ssm\" #> [249] \"diagnostics.combined.residual.all.evolutive.ssr\" #> [250] \"diagnostics.combined.residual.all.evolutive.ssq\" #> [251] \"diagnostics.combined.residual.end.kruskalwallis\" #> [252] \"diagnostics.combined.residual.end.stable\"        #> [253] \"diagnostics.combined.residual.end.evolutive\"     #> [254] \"diagnostics.combined.residual.end.summary\"       #> [255] \"diagnostics.combined.residual.end.stable.ssm\"    #> [256] \"diagnostics.combined.residual.end.stable.ssr\"    #> [257] \"diagnostics.combined.residual.end.stable.ssq\"    #> [258] \"diagnostics.combined.residual.end.evolutive.ssm\" #> [259] \"diagnostics.combined.residual.end.evolutive.ssr\" #> [260] \"diagnostics.combined.residual.end.evolutive.ssq\" #> [261] \"diagnostics.residual.all\"                        #> [262] \"diagnostics.residual.end\"                        #> [263] \"diagnostics.residualtd\"                          #> [264] \"diagnostics.residualtd.on.i\"                     #> [265] \"diagnostics.variancedecomposition\"               #> [266] \"diagnostics.logstat\"                             #> [267] \"diagnostics.levelstat\"                           #> [268] \"diagnostics.fcast-insample-mean\"                 #> [269] \"diagnostics.fcast-outsample-mean\"                #> [270] \"diagnostics.fcast-outsample-variance\"            #> [271] \"diagnostics.seas-lin-f\"                          #> [272] \"diagnostics.seas-lin-qs\"                         #> [273] \"diagnostics.seas-lin-kw\"                         #> [274] \"diagnostics.seas-lin-friedman\"                   #> [275] \"diagnostics.seas-lin-periodogram\"                #> [276] \"diagnostics.seas-lin-spectralpeaks\"              #> [277] \"diagnostics.seas-si-combined\"                    #> [278] \"diagnostics.seas-si-evolutive\"                   #> [279] \"diagnostics.seas-si-stable\"                      #> [280] \"diagnostics.seas-res-f\"                          #> [281] \"diagnostics.seas-res-qs\"                         #> [282] \"diagnostics.seas-res-kw\"                         #> [283] \"diagnostics.seas-res-friedman\"                   #> [284] \"diagnostics.seas-res-periodogram\"                #> [285] \"diagnostics.seas-res-spectralpeaks\"              #> [286] \"diagnostics.seas-res-combined\"                   #> [287] \"diagnostics.seas-res-combined3\"                  #> [288] \"diagnostics.seas-res-evolutive\"                  #> [289] \"diagnostics.seas-res-stable\"                     #> [290] \"diagnostics.seas-i-f\"                            #> [291] \"diagnostics.seas-i-qs\"                           #> [292] \"diagnostics.seas-i-kw\"                           #> [293] \"diagnostics.seas-i-periodogram\"                  #> [294] \"diagnostics.seas-i-spectralpeaks\"                #> [295] \"diagnostics.seas-i-combined\"                     #> [296] \"diagnostics.seas-i-combined3\"                    #> [297] \"diagnostics.seas-i-evolutive\"                    #> [298] \"diagnostics.seas-i-stable\"                       #> [299] \"diagnostics.seas-sa-f\"                           #> [300] \"diagnostics.seas-sa-qs\"                          #> [301] \"diagnostics.seas-sa-kw\"                          #> [302] \"diagnostics.seas-sa-friedman\"                    #> [303] \"diagnostics.seas-sa-periodogram\"                 #> [304] \"diagnostics.seas-sa-spectralpeaks\"               #> [305] \"diagnostics.seas-sa-combined\"                    #> [306] \"diagnostics.seas-sa-combined3\"                   #> [307] \"diagnostics.seas-sa-evolutive\"                   #> [308] \"diagnostics.seas-sa-stable\"                      #> [309] \"diagnostics.seas-sa-ac1\"                         #> [310] \"diagnostics.td-sa-all\"                           #> [311] \"diagnostics.td-sa-last\"                          #> [312] \"diagnostics.td-i-all\"                            #> [313] \"diagnostics.td-i-last\"                           #> [314] \"diagnostics.td-res-all\"                          #> [315] \"diagnostics.td-res-last\"                         #> [316] \"diagnostics.ic-ratio-henderson\"                  #> [317] \"diagnostics.ic-ratio\"                            #> [318] \"diagnostics.msr-global\"                          #> [319] \"diagnostics.msr(*)\"                              #> [320] \"coherence.annualtotals.value\"                    #> [321] \"coherence.annualtotals\"                          #> [322] \"coherence.definition.value\"                      #> [323] \"coherence.definition\"                            #> [324] \"residuals.normality.value\"                       #> [325] \"residuals.normality\"                             #> [326] \"residuals.independence.value\"                    #> [327] \"residuals.independence\"                          #> [328] \"residuals.tdpeaks.value\"                         #> [329] \"residuals.tdpeaks\"                               #> [330] \"residuals.seaspeaks.value\"                       #> [331] \"residuals.seaspeaks\"                             #> [332] \"benchmarking.original\"                           #> [333] \"benchmarking.target\"                             #> [334] \"benchmarking.result\"                             m <- x13(y,\"RSA5c\", userdefined=c(\"b20\",\"ycal\",\"residuals.kurtosis\" )) m$user_defined$b20 #> NULL m$user_defined$ycal #> NULL m$user_defined$residuals.kurtosis #> NULL user_defined_variables(\"TRAMO-SEATS\") #>   [1] \"y\"                                                #>   [2] \"y_f\"                                              #>   [3] \"t\"                                                #>   [4] \"t_f\"                                              #>   [5] \"sa\"                                               #>   [6] \"sa_f\"                                             #>   [7] \"s\"                                                #>   [8] \"s_f\"                                              #>   [9] \"i\"                                                #>  [10] \"i_f\"                                              #>  [11] \"mode\"                                             #>  [12] \"preprocessing.model.span.start\"                   #>  [13] \"preprocessing.model.span.end\"                     #>  [14] \"preprocessing.model.span.n\"                       #>  [15] \"preprocessing.model.espan.start\"                  #>  [16] \"preprocessing.model.espan.end\"                    #>  [17] \"preprocessing.model.espan.n\"                      #>  [18] \"preprocessing.model.log\"                          #>  [19] \"preprocessing.model.adjust\"                       #>  [20] \"preprocessing.model.y\"                            #>  [21] \"preprocessing.model.y_f\"                          #>  [22] \"preprocessing.model.y_ef\"                         #>  [23] \"preprocessing.model.yc\"                           #>  [24] \"preprocessing.model.yc_f\"                         #>  [25] \"preprocessing.model.yc_ef\"                        #>  [26] \"preprocessing.model.l\"                            #>  [27] \"preprocessing.model.y_lin\"                        #>  [28] \"preprocessing.model.y_lin_f\"                      #>  [29] \"preprocessing.model.ycal\"                         #>  [30] \"preprocessing.model.ycal_f\"                       #>  [31] \"preprocessing.model.det\"                          #>  [32] \"preprocessing.model.det_f\"                        #>  [33] \"preprocessing.model.l_f\"                          #>  [34] \"preprocessing.model.l_b\"                          #>  [35] \"preprocessing.model.cal\"                          #>  [36] \"preprocessing.model.cal_f\"                        #>  [37] \"preprocessing.model.tde\"                          #>  [38] \"preprocessing.model.tde_f\"                        #>  [39] \"preprocessing.model.mhe\"                          #>  [40] \"preprocessing.model.mhe_f\"                        #>  [41] \"preprocessing.model.ee\"                           #>  [42] \"preprocessing.model.ee_f\"                         #>  [43] \"preprocessing.model.omhe\"                         #>  [44] \"preprocessing.model.omhe_f\"                       #>  [45] \"preprocessing.model.out(*)\"                       #>  [46] \"preprocessing.model.out_f\"                        #>  [47] \"preprocessing.model.out_i\"                        #>  [48] \"preprocessing.model.out_i_f\"                      #>  [49] \"preprocessing.model.out_t\"                        #>  [50] \"preprocessing.model.out_t_f\"                      #>  [51] \"preprocessing.model.out_s\"                        #>  [52] \"preprocessing.model.out_s_f\"                      #>  [53] \"preprocessing.model.reg\"                          #>  [54] \"preprocessing.model.reg_f\"                        #>  [55] \"preprocessing.model.reg_t\"                        #>  [56] \"preprocessing.model.reg_t_f\"                      #>  [57] \"preprocessing.model.reg_s\"                        #>  [58] \"preprocessing.model.reg_s_f\"                      #>  [59] \"preprocessing.model.reg_i\"                        #>  [60] \"preprocessing.model.reg_i_f\"                      #>  [61] \"preprocessing.model.reg_sa\"                       #>  [62] \"preprocessing.model.reg_sa_f\"                     #>  [63] \"preprocessing.model.reg_y\"                        #>  [64] \"preprocessing.model.reg_y_f\"                      #>  [65] \"preprocessing.model.reg_u\"                        #>  [66] \"preprocessing.model.reg_u_f\"                      #>  [67] \"preprocessing.model.fullresiduals\"                #>  [68] \"preprocessing.model.lp\"                           #>  [69] \"preprocessing.model.ntd\"                          #>  [70] \"preprocessing.model.nmh\"                          #>  [71] \"preprocessing.model.td(*)\"                        #>  [72] \"preprocessing.model.easter\"                       #>  [73] \"preprocessing.model.nout\"                         #>  [74] \"preprocessing.model.noutao\"                       #>  [75] \"preprocessing.model.noutls\"                       #>  [76] \"preprocessing.model.nouttc\"                       #>  [77] \"preprocessing.model.noutso\"                       #>  [78] \"preprocessing.model.coefficients\"                 #>  [79] \"preprocessing.model.description\"                  #>  [80] \"preprocessing.model.covar\"                        #>  [81] \"preprocessing.model.pcovar\"                       #>  [82] \"preprocessing.model.fcasts(?)\"                    #>  [83] \"preprocessing.model.bcasts(?)\"                    #>  [84] \"preprocessing.model.lin_fcasts(?)\"                #>  [85] \"preprocessing.model.lin_bcasts(?)\"                #>  [86] \"preprocessing.model.efcasts(?)\"                   #>  [87] \"preprocessing.arima.parameters\"                   #>  [88] \"preprocessing.arima.p\"                            #>  [89] \"preprocessing.arima.d\"                            #>  [90] \"preprocessing.arima.q\"                            #>  [91] \"preprocessing.arima.bp\"                           #>  [92] \"preprocessing.arima.bd\"                           #>  [93] \"preprocessing.arima.bq\"                           #>  [94] \"preprocessing.likelihood.neffectiveobs\"           #>  [95] \"preprocessing.likelihood.np\"                      #>  [96] \"preprocessing.likelihood.logvalue\"                #>  [97] \"preprocessing.likelihood.adjustedlogvalue\"        #>  [98] \"preprocessing.likelihood.ssqerr\"                  #>  [99] \"preprocessing.likelihood.aic\"                     #> [100] \"preprocessing.likelihood.aicc\"                    #> [101] \"preprocessing.likelihood.bic\"                     #> [102] \"preprocessing.likelihood.bicc\"                    #> [103] \"preprocessing.likelihood.ser\"                     #> [104] \"preprocessing.likelihood.ser-ml\"                  #> [105] \"preprocessing.residuals.res\"                      #> [106] \"preprocessing.residuals.mean\"                     #> [107] \"preprocessing.residuals.skewness\"                 #> [108] \"preprocessing.residuals.kurtosis\"                 #> [109] \"preprocessing.residuals.dh\"                       #> [110] \"preprocessing.residuals.lb\"                       #> [111] \"preprocessing.residuals.lb2\"                      #> [112] \"preprocessing.residuals.seaslb\"                   #> [113] \"preprocessing.residuals.bp\"                       #> [114] \"preprocessing.residuals.bp2\"                      #> [115] \"preprocessing.residuals.seasbp\"                   #> [116] \"preprocessing.residuals.nruns\"                    #> [117] \"preprocessing.residuals.lruns\"                    #> [118] \"decomposition.y_lin\"                              #> [119] \"decomposition.y_lin_f\"                            #> [120] \"decomposition.y_lin_ef\"                           #> [121] \"decomposition.t_lin\"                              #> [122] \"decomposition.t_lin_f\"                            #> [123] \"decomposition.t_lin_e\"                            #> [124] \"decomposition.t_lin_ef\"                           #> [125] \"decomposition.sa_lin\"                             #> [126] \"decomposition.sa_lin_f\"                           #> [127] \"decomposition.sa_lin_e\"                           #> [128] \"decomposition.sa_lin_ef\"                          #> [129] \"decomposition.s_lin\"                              #> [130] \"decomposition.s_lin_f\"                            #> [131] \"decomposition.s_lin_e\"                            #> [132] \"decomposition.s_lin_ef\"                           #> [133] \"decomposition.i_lin\"                              #> [134] \"decomposition.i_lin_f\"                            #> [135] \"decomposition.i_lin_e\"                            #> [136] \"decomposition.i_lin_ef\"                           #> [137] \"decomposition.y_cmp\"                              #> [138] \"decomposition.y_cmp_f\"                            #> [139] \"decomposition.t_cmp\"                              #> [140] \"decomposition.t_cmp_f\"                            #> [141] \"decomposition.sa_cmp\"                             #> [142] \"decomposition.sa_cmp_f\"                           #> [143] \"decomposition.s_cmp\"                              #> [144] \"decomposition.s_cmp_f\"                            #> [145] \"decomposition.i_cmp\"                              #> [146] \"decomposition.i_cmp_f\"                            #> [147] \"decomposition.i_cmp_e\"                            #> [148] \"decomposition.t_cmp_e\"                            #> [149] \"decomposition.s_cmp_e\"                            #> [150] \"decomposition.sa_cmp_e\"                           #> [151] \"decomposition.i_cmp_ef\"                           #> [152] \"decomposition.t_cmp_ef\"                           #> [153] \"decomposition.s_cmp_ef\"                           #> [154] \"decomposition.sa_cmp_ef\"                          #> [155] \"decomposition.parameterscutoff\"                   #> [156] \"decomposition.modelchanged\"                       #> [157] \"decomposition.model.ar\"                           #> [158] \"decomposition.model.diff\"                         #> [159] \"decomposition.model.ma\"                           #> [160] \"decomposition.model.fullar\"                       #> [161] \"decomposition.model.innovationvariance\"           #> [162] \"decomposition.tmodel.ar\"                          #> [163] \"decomposition.tmodel.diff\"                        #> [164] \"decomposition.tmodel.ma\"                          #> [165] \"decomposition.tmodel.fullar\"                      #> [166] \"decomposition.tmodel.innovationvariance\"          #> [167] \"decomposition.smodel.ar\"                          #> [168] \"decomposition.smodel.diff\"                        #> [169] \"decomposition.smodel.ma\"                          #> [170] \"decomposition.smodel.fullar\"                      #> [171] \"decomposition.smodel.innovationvariance\"          #> [172] \"decomposition.samodel.ar\"                         #> [173] \"decomposition.samodel.diff\"                       #> [174] \"decomposition.samodel.ma\"                         #> [175] \"decomposition.samodel.fullar\"                     #> [176] \"decomposition.samodel.innovationvariance\"         #> [177] \"decomposition.transitorymodel.ar\"                 #> [178] \"decomposition.transitorymodel.diff\"               #> [179] \"decomposition.transitorymodel.ma\"                 #> [180] \"decomposition.transitorymodel.fullar\"             #> [181] \"decomposition.transitorymodel.innovationvariance\" #> [182] \"decomposition.imodel.ar\"                          #> [183] \"decomposition.imodel.diff\"                        #> [184] \"decomposition.imodel.ma\"                          #> [185] \"decomposition.imodel.fullar\"                      #> [186] \"decomposition.imodel.innovationvariance\"          #> [187] \"diagnostics.qs\"                                   #> [188] \"diagnostics.ftest\"                                #> [189] \"diagnostics.qs.on.i\"                              #> [190] \"diagnostics.ftest.on.i\"                           #> [191] \"diagnostics.combined.all.kruskalwallis\"           #> [192] \"diagnostics.combined.all.stable\"                  #> [193] \"diagnostics.combined.all.evolutive\"               #> [194] \"diagnostics.combined.all.summary\"                 #> [195] \"diagnostics.combined.all.stable.ssm\"              #> [196] \"diagnostics.combined.all.stable.ssr\"              #> [197] \"diagnostics.combined.all.stable.ssq\"              #> [198] \"diagnostics.combined.all.evolutive.ssm\"           #> [199] \"diagnostics.combined.all.evolutive.ssr\"           #> [200] \"diagnostics.combined.all.evolutive.ssq\"           #> [201] \"diagnostics.combined.end.kruskalwallis\"           #> [202] \"diagnostics.combined.end.stable\"                  #> [203] \"diagnostics.combined.end.evolutive\"               #> [204] \"diagnostics.combined.end.summary\"                 #> [205] \"diagnostics.combined.end.stable.ssm\"              #> [206] \"diagnostics.combined.end.stable.ssr\"              #> [207] \"diagnostics.combined.end.stable.ssq\"              #> [208] \"diagnostics.combined.end.evolutive.ssm\"           #> [209] \"diagnostics.combined.end.evolutive.ssr\"           #> [210] \"diagnostics.combined.end.evolutive.ssq\"           #> [211] \"diagnostics.combined.residual.all.kruskalwallis\"  #> [212] \"diagnostics.combined.residual.all.stable\"         #> [213] \"diagnostics.combined.residual.all.evolutive\"      #> [214] \"diagnostics.combined.residual.all.summary\"        #> [215] \"diagnostics.combined.residual.all.stable.ssm\"     #> [216] \"diagnostics.combined.residual.all.stable.ssr\"     #> [217] \"diagnostics.combined.residual.all.stable.ssq\"     #> [218] \"diagnostics.combined.residual.all.evolutive.ssm\"  #> [219] \"diagnostics.combined.residual.all.evolutive.ssr\"  #> [220] \"diagnostics.combined.residual.all.evolutive.ssq\"  #> [221] \"diagnostics.combined.residual.end.kruskalwallis\"  #> [222] \"diagnostics.combined.residual.end.stable\"         #> [223] \"diagnostics.combined.residual.end.evolutive\"      #> [224] \"diagnostics.combined.residual.end.summary\"        #> [225] \"diagnostics.combined.residual.end.stable.ssm\"     #> [226] \"diagnostics.combined.residual.end.stable.ssr\"     #> [227] \"diagnostics.combined.residual.end.stable.ssq\"     #> [228] \"diagnostics.combined.residual.end.evolutive.ssm\"  #> [229] \"diagnostics.combined.residual.end.evolutive.ssr\"  #> [230] \"diagnostics.combined.residual.end.evolutive.ssq\"  #> [231] \"diagnostics.residual.all\"                         #> [232] \"diagnostics.residual.end\"                         #> [233] \"diagnostics.residualtd\"                           #> [234] \"diagnostics.residualtd.on.i\"                      #> [235] \"diagnostics.variancedecomposition\"                #> [236] \"diagnostics.logstat\"                              #> [237] \"diagnostics.levelstat\"                            #> [238] \"diagnostics.fcast-insample-mean\"                  #> [239] \"diagnostics.fcast-outsample-mean\"                 #> [240] \"diagnostics.fcast-outsample-variance\"             #> [241] \"diagnostics.seas-lin-f\"                           #> [242] \"diagnostics.seas-lin-qs\"                          #> [243] \"diagnostics.seas-lin-kw\"                          #> [244] \"diagnostics.seas-lin-friedman\"                    #> [245] \"diagnostics.seas-lin-periodogram\"                 #> [246] \"diagnostics.seas-lin-spectralpeaks\"               #> [247] \"diagnostics.seas-si-combined\"                     #> [248] \"diagnostics.seas-si-evolutive\"                    #> [249] \"diagnostics.seas-si-stable\"                       #> [250] \"diagnostics.seas-res-f\"                           #> [251] \"diagnostics.seas-res-qs\"                          #> [252] \"diagnostics.seas-res-kw\"                          #> [253] \"diagnostics.seas-res-friedman\"                    #> [254] \"diagnostics.seas-res-periodogram\"                 #> [255] \"diagnostics.seas-res-spectralpeaks\"               #> [256] \"diagnostics.seas-res-combined\"                    #> [257] \"diagnostics.seas-res-combined3\"                   #> [258] \"diagnostics.seas-res-evolutive\"                   #> [259] \"diagnostics.seas-res-stable\"                      #> [260] \"diagnostics.seas-i-f\"                             #> [261] \"diagnostics.seas-i-qs\"                            #> [262] \"diagnostics.seas-i-kw\"                            #> [263] \"diagnostics.seas-i-periodogram\"                   #> [264] \"diagnostics.seas-i-spectralpeaks\"                 #> [265] \"diagnostics.seas-i-combined\"                      #> [266] \"diagnostics.seas-i-combined3\"                     #> [267] \"diagnostics.seas-i-evolutive\"                     #> [268] \"diagnostics.seas-i-stable\"                        #> [269] \"diagnostics.seas-sa-f\"                            #> [270] \"diagnostics.seas-sa-qs\"                           #> [271] \"diagnostics.seas-sa-kw\"                           #> [272] \"diagnostics.seas-sa-friedman\"                     #> [273] \"diagnostics.seas-sa-periodogram\"                  #> [274] \"diagnostics.seas-sa-spectralpeaks\"                #> [275] \"diagnostics.seas-sa-combined\"                     #> [276] \"diagnostics.seas-sa-combined3\"                    #> [277] \"diagnostics.seas-sa-evolutive\"                    #> [278] \"diagnostics.seas-sa-stable\"                       #> [279] \"diagnostics.seas-sa-ac1\"                          #> [280] \"diagnostics.td-sa-all\"                            #> [281] \"diagnostics.td-sa-last\"                           #> [282] \"diagnostics.td-i-all\"                             #> [283] \"diagnostics.td-i-last\"                            #> [284] \"diagnostics.td-res-all\"                           #> [285] \"diagnostics.td-res-last\"                          #> [286] \"diagnostics.ic-ratio-henderson\"                   #> [287] \"diagnostics.ic-ratio\"                             #> [288] \"diagnostics.msr-global\"                           #> [289] \"diagnostics.msr(*)\"                               #> [290] \"coherence.annualtotals.value\"                     #> [291] \"coherence.annualtotals\"                           #> [292] \"coherence.definition.value\"                       #> [293] \"coherence.definition\"                             #> [294] \"residuals.normality.value\"                        #> [295] \"residuals.normality\"                              #> [296] \"residuals.independence.value\"                     #> [297] \"residuals.independence\"                           #> [298] \"residuals.tdpeaks.value\"                          #> [299] \"residuals.tdpeaks\"                                #> [300] \"residuals.seaspeaks.value\"                        #> [301] \"residuals.seaspeaks\"                              #> [302] \"benchmarking.original\"                            #> [303] \"benchmarking.target\"                              #> [304] \"benchmarking.result\"                              m <- tramoseats(y,\"RSAfull\", userdefined=c(\"ycal\",\"variancedecomposition.seasonality\")) m$user_defined$ycal #> NULL m$user_defined$variancedecomposition.seasonality #> NULL"},{"path":"/reference/x13.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal Adjustment with X13-ARIMA — x13","title":"Seasonal Adjustment with X13-ARIMA — x13","text":"Functions estimate seasonally adjusted series (sa) X13-ARIMA method. achieved decomposing time series (y) trend-cycle (t), seasonal component (s) irregular component (). Calendar-related movements can corrected pre-treatment (regarima) step. x13 returns preformatted result jx13 returns Java objects resulting seasonal adjustment.","code":""},{"path":"/reference/x13.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal Adjustment with X13-ARIMA — x13","text":"","code":"jx13(   series,   spec = c(\"RSA5c\", \"RSA0\", \"RSA1\", \"RSA2c\", \"RSA3\", \"RSA4c\", \"X11\"),   userdefined = NULL )  x13(   series,   spec = c(\"RSA5c\", \"RSA0\", \"RSA1\", \"RSA2c\", \"RSA3\", \"RSA4c\", \"X11\"),   userdefined = NULL )"},{"path":"/reference/x13.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal Adjustment with X13-ARIMA — x13","text":"series univariate time series spec x13 model specification. can name (character) pre-defined X13 'JDemetra+' model specification (see Details) specification created x13_spec function. default value \"RSA5c\". userdefined character vector containing additional output variables (see user_defined_variables).","code":""},{"path":"/reference/x13.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal Adjustment with X13-ARIMA — x13","text":"jx13 returns result seasonal adjustment Java (jSA) object, without formatting. Therefore, computation faster x13 function. results seasonal adjustment can extracted function get_indicators. x13 returns object class c(\"SA\",\"X13\"), , list containing following components: regarima object class c(\"regarima\",\"X13\"). info Value section function regarima. decomposition object class \"decomposition_X11\", six-element list: specification list X11 algorithm specification. See also function x13_spec. mode decomposition mode mstats matrix M statistics si_ratio time series matrix (mts) d8 d10 series s_filter seasonal filters t_filter trend filter final object class c(\"final\",\"mts\",\"ts\",\"matrix\"). matrix contains final results seasonal adjustment: original time series (y)forecast (y_f), trend (t) forecast (t_f), seasonally adjusted series (sa) forecast (sa_f), seasonal component (s)forecast (s_f), irregular component () forecast (i_f). diagnostics object class \"diagnostics\", list containing three types tests results: variance_decomposition data.frame tests results relative contribution components stationary portion variance original series, removal long term trend; residuals_test data.frame tests results presence seasonality residuals (including statistic test values, corresponding p-values parameters description); combined_test combined tests stable seasonality entire series. format two elements list : tests_for_stable_seasonality, data.frame containing tests results (including statistic test value, p-value parameters description), combined_seasonality_test, summary. user_defined object class \"user_defined\": list containing additional userdefined  variables.","code":""},{"path":"/reference/x13.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Seasonal Adjustment with X13-ARIMA — x13","text":"first step seasonal adjustment consists pre-adjusting time series. done removing deterministic effects (calendar outliers), using regression model ARIMA noise (RegARIMA, see: regarima). second part, pre-adjusted series decomposed X11 algorithm following components: trend-cycle (t), seasonal component (s) irregular component (). decomposition can : additive  (\\(y = t + s + \\)) multiplicative (\\(y = t * s * \\)). information X11 algorithm https://jdemetra-new-documentation.netlify.app/m-x11-decomposition. available pre-defined 'JDemetra+' X13 model specifications described table :","code":""},{"path":"/reference/x13.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Seasonal Adjustment with X13-ARIMA — x13","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"/reference/x13.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seasonal Adjustment with X13-ARIMA — x13","text":"","code":"# \\donttest{ myseries <- ipi_c_eu[, \"FR\"] mysa <- x13(myseries, spec = \"RSA5c\")  myspec1 <- x13_spec(mysa, tradingdays.option = \"WorkingDays\",             usrdef.outliersEnabled = TRUE,             usrdef.outliersType = c(\"LS\",\"AO\"),             usrdef.outliersDate = c(\"2008-10-01\", \"2002-01-01\"),             usrdef.outliersCoef = c(36, 14),             transform.function = \"None\") mysa1 <- x13(myseries, myspec1) mysa1 #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.07097      0.113 #> Phi(2)     0.18458      0.076 #> Theta(1)  -0.49960      0.109 #> BTheta(1) -0.67159      0.042 #>  #>              Estimate Std. Error #> Week days      0.7006      0.032 #> Leap year      2.1304      0.706 #> Easter [1]    -2.5164      0.449 #> AO (9-2008)   31.9754      2.915 #> LS (9-2008)  -57.0469      2.643 #> TC (4-2020)  -35.7315      2.120 #> AO (3-2020)  -21.1268      2.143 #> AO (5-2011)   13.1096      1.831 #> TC (9-2008)   23.4429      3.992 #> TC (12-2001) -20.7847      2.923 #> AO (12-2001)  17.4012      2.965 #> TC (2-2002)   10.9354      1.947 #>  #> Fixed outliers:  #>              Coefficients #> LS (10-2008)           36 #> AO (1-2002)            14 #>  #>  #> Residual standard error: 2.203 on 342 degrees of freedom #> Log likelihood = -796.8, aic =  1628 aicc =  1629, bic(corrected for length) = 1.842 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.123 #> M(2)    0.077 #> M(3)    1.090 #> M(4)    0.462 #> M(5)    1.076 #> M(6)    0.012 #> M(7)    0.084 #> M(8)    0.239 #> M(9)    0.063 #> M(10)   0.261 #> M(11)   0.247 #> Q       0.343 #> Q-M2    0.376 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t           s           i #> Jan 2020 101.0 102.87962 103.0467  -1.8796156  -0.1670595 #> Feb 2020 100.1 103.69266 103.0695  -3.5926626   0.6231576 #> Mar 2020  91.8  82.71191 103.2806   9.0880860 -20.5686997 #> Apr 2020  66.7  66.50454 103.7148   0.1954637 -37.2102444 #> May 2020  73.7  79.26051 104.1579  -5.5605127 -24.8974169 #> Jun 2020  98.2  87.33656 104.4693  10.8634372 -17.1326924 #> Jul 2020  97.4  92.25854 104.5607   5.1414577 -12.3021598 #> Aug 2020  71.7  97.61259 104.3399 -25.9125935  -6.7273564 #> Sep 2020 104.7  97.72915 103.8344   6.9708497  -6.1052450 #> Oct 2020 106.7  97.88023 103.1893   8.8197721  -5.3090643 #> Nov 2020 101.6 100.02183 102.6450   1.5781686  -2.6231898 #> Dec 2020  96.6  99.57395 102.3812  -2.9739462  -2.8072744 #>  #> Forecasts: #>                y_f     sa_f      t_f        s_f        i_f #> Jan 2021  94.18436 101.0457 102.3450  -6.861337 -1.2993559 #> Feb 2021  97.79239 101.6105 102.3926  -3.818145 -0.7820417 #> Mar 2021 113.57431 102.0601 102.3848  11.514239 -0.3247224 #> Apr 2021 102.35339 102.1397 102.2602   0.213698 -0.1205157 #> May 2021  96.03579 101.5178 102.0894  -5.482029 -0.5715363 #> Jun 2021 112.11607 101.1530 101.9455  10.963039 -0.7924771 #> Jul 2021 104.27431 101.4573 101.8906   2.817029 -0.4332705 #> Aug 2021  78.93779 102.3316 101.9760 -23.393812  0.3556267 #> Sep 2021 109.38106 102.3208 102.1412   7.060299  0.1795151 #> Oct 2021 108.13045 101.7976 102.3181   6.332810 -0.5205026 #> Nov 2021 106.18847 102.3720 102.4888   3.816423 -0.1167707 #> Dec 2021  99.71043 102.9386 102.6489  -3.228124  0.2896785 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         1.672 #>  Seasonal     42.185 #>  Irregular     0.768 #>  TD & Hol.     1.828 #>  Others       55.698 #>  Total       102.151 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.022 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           0.835 #>  f-test on sa (seasonal dummies)        0.682 #>  f-test on i (seasonal dummies)         0.460 #>  Residual seasonality (entire series)   0.421 #>  Residual seasonality (last 3 years)    0.948 #>  f-test on sa (td)                      0.075 #>  f-test on i (td)                       0.329 #>  #>  #> Additional output variables summary(mysa1$regarima) #> y = regression model + arima (2, 1, 1, 0, 1, 1) #>  #> Model: RegARIMA - X13 #> Estimation span: from 1-1990 to 12-2020 #> Log-transformation: no #> Regression model: no mean, trading days effect(2), leap year effect, Easter effect, outliers(9) #>  #> Coefficients: #> ARIMA:  #>           Estimate Std. Error  T-stat Pr(>|t|)     #> Phi(1)     0.07097    0.11299   0.628   0.5303     #> Phi(2)     0.18458    0.07587   2.433   0.0155 *   #> Theta(1)  -0.49960    0.10887  -4.589 6.17e-06 *** #> BTheta(1) -0.67159    0.04206 -15.968  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Regression model:  #>               Estimate Std. Error  T-stat Pr(>|t|)     #> Week days      0.70061    0.03198  21.905  < 2e-16 *** #> Leap year      2.13040    0.70573   3.019  0.00272 **  #> Easter [1]    -2.51639    0.44884  -5.606 4.13e-08 *** #> AO (9-2008)   31.97543    2.91519  10.969  < 2e-16 *** #> LS (9-2008)  -57.04686    2.64339 -21.581  < 2e-16 *** #> TC (4-2020)  -35.73152    2.11967 -16.857  < 2e-16 *** #> AO (3-2020)  -21.12683    2.14309  -9.858  < 2e-16 *** #> AO (5-2011)   13.10957    1.83067   7.161 4.56e-12 *** #> TC (9-2008)   23.44294    3.99228   5.872 9.81e-09 *** #> TC (12-2001) -20.78475    2.92315  -7.110 6.30e-12 *** #> AO (12-2001)  17.40120    2.96520   5.868 1.00e-08 *** #> TC (2-2002)   10.93541    1.94738   5.615 3.93e-08 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>              Coefficients #> LS (10-2008)           36 #> AO (1-2002)            14 #>  #>  #> Residual standard error: 2.203 on 342 degrees of freedom #> Log likelihood = -796.8, aic =  1628, aicc =  1629, bic(corrected for length) = 1.842 #>   myspec2 <- x13_spec(mysa, automdl.enabled =FALSE,             arima.coefEnabled = TRUE,             arima.p = 1, arima.q = 1, arima.bp = 0, arima.bq = 1,             arima.coef = c(-0.8, -0.6, 0),             arima.coefType = c(rep(\"Fixed\", 2), \"Undefined\")) s_arimaCoef(myspec2) #>                Type Value #> Phi(1)        Fixed  -0.8 #> Theta(1)      Fixed  -0.6 #> BTheta(1) Undefined   0.0 mysa2 <- x13(myseries, myspec2,              userdefined = c(\"decomposition.d18\", \"decomposition.d19\")) mysa2 #> RegARIMA #> y = regression model + arima (1, 1, 1, 0, 1, 1) #> Log-transformation: yes #> Coefficients: #>           Estimate Std. Error #> Phi(1)     -0.8000       0.00 #> Theta(1)   -0.6000       0.00 #> BTheta(1)  -0.6977       0.04 #>  #>              Estimate Std. Error #> Monday       0.006317      0.002 #> Tuesday      0.007824      0.002 #> Wednesday    0.010528      0.002 #> Thursday     0.001857      0.002 #> Friday       0.010099      0.002 #> Saturday    -0.018439      0.002 #> Easter [1]  -0.020593      0.004 #> TC (4-2020) -0.475720      0.031 #> AO (3-2020) -0.213355      0.023 #> AO (5-2011)  0.143705      0.016 #>  #>  #> Residual standard error: 0.0256 on 347 degrees of freedom #> Log likelihood = 802.3, aic =  1733 aicc =  1734, bic(corrected for length) = -7.15 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.097 #> M(2)    0.052 #> M(3)    0.750 #> M(4)    0.749 #> M(5)    0.731 #> M(6)    0.126 #> M(7)    0.075 #> M(8)    0.220 #> M(9)    0.075 #> M(10)   0.293 #> M(11)   0.281 #> Q       0.300 #> Q-M2    0.331 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t         s         i #> Jan 2020 101.0 103.50059 103.4716 0.9758398 1.0002804 #> Feb 2020 100.1 103.70789 104.1959 0.9652110 0.9953168 #> Mar 2020  91.8  85.02419 105.2353 1.0796927 0.8079439 #> Apr 2020  66.7  66.06576 106.3700 1.0096002 0.6210940 #> May 2020  73.7  77.29646 107.2332 0.9534719 0.7208256 #> Jun 2020  98.2  88.21419 107.6348 1.1131996 0.8195693 #> Jul 2020  97.4  92.04371 107.5406 1.0581929 0.8558971 #> Aug 2020  71.7  95.53300 106.9592 0.7505260 0.8931720 #> Sep 2020 104.7  97.32774 105.9849 1.0757467 0.9183169 #> Oct 2020 106.7  98.74148 104.7928 1.0805996 0.9422542 #> Nov 2020 101.6 100.23569 103.5604 1.0136110 0.9678964 #> Dec 2020  96.6  99.45166 102.3889 0.9713262 0.9713127 #>  #> Forecasts: #>                y_f     sa_f       t_f       s_f       i_f #> Jan 2021  91.86627 99.03608 101.33234 0.9276040 0.9773393 #> Feb 2021  93.73814 98.76312 100.39814 0.9491209 0.9837146 #> Mar 2021 109.97904 99.04192  99.55589 1.1104292 0.9948373 #> Apr 2021  99.51314 98.51411  98.84092 1.0101410 0.9966935 #> May 2021  92.44138 97.26558  98.27297 0.9504018 0.9897491 #> Jun 2021 109.51917 97.80126  97.82297 1.1198135 0.9997780 #> Jul 2021  99.72232 96.85484  97.49522 1.0296059 0.9934317 #> Aug 2021  74.93973 97.28720  97.30419 0.7702938 0.9998254 #> Sep 2021 104.15955 97.30940  97.21500 1.0703955 1.0009711 #> Oct 2021 102.57254 96.84676  97.16553 1.0591221 0.9967193 #> Nov 2021 100.68100 96.97009  97.14932 1.0382686 0.9981552 #> Dec 2021  94.63045 97.42206  97.13060 0.9713452 1.0030007 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         5.183 #>  Seasonal     82.105 #>  Irregular     1.148 #>  TD & Hol.     3.365 #>  Others       10.592 #>  Total       102.393 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.406 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           0.939 #>  f-test on sa (seasonal dummies)        0.990 #>  f-test on i (seasonal dummies)         0.972 #>  Residual seasonality (entire series)   0.989 #>  Residual seasonality (last 3 years)    0.996 #>  f-test on sa (td)                      0.994 #>  f-test on i (td)                       0.959 #>  #>  #> Additional output variables #> Names of additional variables (2): #> decomposition.d18, decomposition.d19 plot(mysa2)   plot(mysa2$regarima)       plot(mysa2$decomposition)  # }"},{"path":"/reference/x13_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"X-13ARIMA model specification, SA/X13 — x13_spec","title":"X-13ARIMA model specification, SA/X13 — x13_spec","text":"Function create (/modify) c(\"SA_spec\", \"X13\") class object SA model specification X13 method. can done pre-defined 'JDemetra+' model specification (character), previous specification (c(\"SA_spec\", \"X13\") object) seasonal adjustment model (c(\"SA\", \"X13\") object).","code":""},{"path":"/reference/x13_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"X-13ARIMA model specification, SA/X13 — x13_spec","text":"","code":"x13_spec(   spec = c(\"RSA5c\", \"RSA0\", \"RSA1\", \"RSA2c\", \"RSA3\", \"RSA4c\", \"X11\"),   preliminary.check = NA,   estimate.from = NA_character_,   estimate.to = NA_character_,   estimate.first = NA_integer_,   estimate.last = NA_integer_,   estimate.exclFirst = NA_integer_,   estimate.exclLast = NA_integer_,   estimate.tol = NA_integer_,   transform.function = c(NA, \"Auto\", \"None\", \"Log\"),   transform.adjust = c(NA, \"None\", \"LeapYear\", \"LengthOfPeriod\"),   transform.aicdiff = NA_integer_,   usrdef.outliersEnabled = NA,   usrdef.outliersType = NA,   usrdef.outliersDate = NA,   usrdef.outliersCoef = NA,   usrdef.varEnabled = NA,   usrdef.var = NA,   usrdef.varType = NA,   usrdef.varCoef = NA,   tradingdays.option = c(NA, \"TradingDays\", \"WorkingDays\", \"UserDefined\", \"None\"),   tradingdays.autoadjust = NA,   tradingdays.leapyear = c(NA, \"LeapYear\", \"LengthOfPeriod\", \"None\"),   tradingdays.stocktd = NA_integer_,   tradingdays.test = c(NA, \"Remove\", \"Add\", \"None\"),   easter.enabled = NA,   easter.julian = NA,   easter.duration = NA_integer_,   easter.test = c(NA, \"Add\", \"Remove\", \"None\"),   outlier.enabled = NA,   outlier.from = NA_character_,   outlier.to = NA_character_,   outlier.first = NA_integer_,   outlier.last = NA_integer_,   outlier.exclFirst = NA_integer_,   outlier.exclLast = NA_integer_,   outlier.ao = NA,   outlier.tc = NA,   outlier.ls = NA,   outlier.so = NA,   outlier.usedefcv = NA,   outlier.cv = NA_integer_,   outlier.method = c(NA, \"AddOne\", \"AddAll\"),   outlier.tcrate = NA_integer_,   automdl.enabled = NA,   automdl.acceptdefault = NA,   automdl.cancel = NA_integer_,   automdl.ub1 = NA_integer_,   automdl.ub2 = NA_integer_,   automdl.mixed = NA,   automdl.balanced = NA,   automdl.armalimit = NA_integer_,   automdl.reducecv = NA_integer_,   automdl.ljungboxlimit = NA_integer_,   automdl.ubfinal = NA_integer_,   arima.mu = NA,   arima.p = NA_integer_,   arima.d = NA_integer_,   arima.q = NA_integer_,   arima.bp = NA_integer_,   arima.bd = NA_integer_,   arima.bq = NA_integer_,   arima.coefEnabled = NA,   arima.coef = NA,   arima.coefType = NA,   fcst.horizon = NA_integer_,   x11.mode = c(NA, \"Undefined\", \"Additive\", \"Multiplicative\", \"LogAdditive\",     \"PseudoAdditive\"),   x11.seasonalComp = NA,   x11.lsigma = NA_integer_,   x11.usigma = NA_integer_,   x11.trendAuto = NA,   x11.trendma = NA_integer_,   x11.seasonalma = NA_character_,   x11.fcasts = NA_integer_,   x11.bcasts = NA_integer_,   x11.calendarSigma = NA,   x11.sigmaVector = NA,   x11.excludeFcasts = NA,   benchmarking.enabled = NA,   benchmarking.target = c(NA, \"Original\", \"CalendarAdjusted\"),   benchmarking.useforecast = NA,   benchmarking.rho = NA_real_,   benchmarking.lambda = NA_real_ )"},{"path":"/reference/x13_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"X-13ARIMA model specification, SA/X13 — x13_spec","text":"spec x13 model specification. can 'JDemetra+' name (character) predefined X13 'JDemetra+' model specification (see Details), object class c(\"SA_spec\",\"X13\") object class c(\"SA\", \"X13\"). default \"RSA5c\". preliminary.check Boolean check quality input series exclude highly problematic ones (e.g. series number identical observations /missing values pre-specified threshold values). time span series, (sub)period used estimate regarima model, controlled following six variables: estimate., estimate., estimate.first, estimate.last, estimate.exclFirst estimate.exclLast; estimate.estimate.priority remaining span control variables, estimate.last estimate.first priority estimate.exclFirst estimate.exclLast, estimate.last priority estimate.first. Default= \"\". estimate.character format \"YYYY-MM-DD\" indicating start time span (e.g. \"1900-01-01\"). can combined parameter estimate.. estimate.character format \"YYYY-MM-DD\" indicating end time span (e.g. \"2020-12-31\"). can combined parameter estimate.. estimate.first numeric specifying number periods considered beginning series. estimate.last numeric specifying number periods considered end series. estimate.exclFirst numeric specifying number periods excluded beginning series. can combined parameter estimate.exclLast. estimate.exclLast numeric specifying number periods excluded end series. can combined parameter estimate.exclFirst. estimate.tol numeric, convergence tolerance. absolute changes log-likelihood function compared value check convergence estimation iterations. transform.function transformation input series: \"None\" = transformation series; \"Log\" = takes log series; \"Auto\" = program tests log-level specification. transform.adjust pre-adjustment input series length period leap year effects: \"None\" = adjustment; \"LeapYear\" = leap year effect; \"LengthOfPeriod\" = length period. Modifications variable taken account transform.function set \"Log\". transform.aicdiff numeric defining difference AICC needed accept transformation automatic transformation selection chosen (considered transform.function set \"Auto\"). Control variables pre-specified outliers. pre-specified outliers used model enabled (usrdef.outliersEnabled=TRUE) outlier type (usrdef.outliersType) date (usrdef.outliersDate) provided. usrdef.outliersEnabled logical. TRUE, program uses pre-specified outliers. usrdef.outliersType vector defining outlier type. Possible types : (\"AO\") = additive, (\"LS\") = level shift, (\"TC\") = transitory change, (\"\") = seasonal outlier. E.g.: usrdef.outliersType = c(\"AO\",\"AO\",\"LS\"). usrdef.outliersDate vector defining outlier dates. dates characters format \"YYYY-MM-DD\". E.g.: usrdef.outliersDate= c(\"2009-10-01\",\"2005-02-01\",\"2003-04-01\"). usrdef.outliersCoef vector providing fixed coefficients outliers. coefficients fixed transform.function set \"Auto\" .e. series transformation need pre-defined. E.g.:  usrdef.outliersCoef=c(200,170,20). Control variables user-defined variables: usrdef.varEnabled logical. TRUE, program uses user-defined variables. usrdef.var time series (ts) matrix time series (mts) user-defined variables. usrdef.varType vector character(s) defining user-defined variables component type. Possible types : \"Undefined\", \"Series\", \"Trend\", \"Seasonal\", \"SeasonallyAdjusted\", \"Irregular\", \"Calendar\". type \"Calendar\"must used tradingdays.option = \"UserDefined\" use user-defined calendar regressors. specified, program assign \"Undefined\" type. usrdef.varCoef vector providing fixed coefficients user-defined variables. coefficients fixed transform.function set \"Auto\" .e. series transformation need pre-defined. tradingdays.option specify set trading days regression variables: \"TradingDays\" = six day---week regression variables; \"WorkingDays\" = one working/non-working day contrast variable; \"None\" = correction trading days working days effects; \"UserDefined\" = user-defined trading days regressors (regressors must defined usrdef.var argument usrdef.varType set \"Calendar\" usrdef.varEnabled = TRUE). \"None\" must also specified \"day--week effects\" correction (tradingdays.stocktd modified accordingly). tradingdays.autoadjust logical. TRUE, program corrects automatically leap year effect. Modifications variable taken account transform.function set \"Auto\". tradingdays.leapyear character specify whether include leap-year effect model: \"LeapYear\" = leap year effect; \"LengthOfPeriod\" = length period, \"None\" = effect included. leap-year effect can pre-specified model input series pre-adjusted (transform.adjust set \"None\") automatic correction leap-year effect selected (tradingdays.autoadjust set FALSE). tradingdays.stocktd numeric indicating day month inventories stock reported (denote last day month, set variable 31). Modifications variable taken account tradingdays.option set \"None\". tradingdays.test defines pre-tests significance trading day regression variables based AICC statistics: \"Add\" = trading day variables included initial regression model can added RegARIMA model test; \"Remove\" = trading day variables belong initial regression model can removed RegARIMA model test; \"None\" = trading day variables pre-tested included model. easter.enabled logical. TRUE, program considers Easter effect model. easter.julian logical. TRUE, program uses Julian Easter (expressed Gregorian calendar). easter.duration numeric indicating duration Easter effect (length days, 1 20). easter.test defines pre-tests significance Easter effect based t-statistic (Easter effect considered significant t-statistic greater 1.96): \"Add\" = Easter effect variable included initial regression model can added RegARIMA model test; \"Remove\" = Easter effect variable belongs initial regression model can removed RegARIMA model test; \"None\" = Easter effect variable pre-tested included model. outlier.enabled logical. TRUE, automatic detection outliers enabled defined time span. time span outliers searched controlled following six variables: outlier., outlier., outlier.first, outlier.last, outlier.exclFirst outlier.exclLast; outlier.outlier.priority remaining span control variables, outlier.last outlier.first priority outlier.exclFirst outlier.exclLast, outlier.last priority outlier.first. outlier.character format \"YYYY-MM-DD\" indicating start time span (e.g. \"1900-01-01\"). can combined parameter outlier.. outlier.character format \"YYYY-MM-DD\" indicating end time span (e.g. \"2020-12-31\"). can combined parameter outlier.. outlier.first numeric specifying number periods considered beginning series. outlier.last numeric specifying number periods considered end series. outlier.exclFirst numeric specifying number periods excluded beginning series. can combined parameter outlier.exclLast. outlier.exclLast numeric specifying number periods excluded end series. can combined parameter outlier.exclFirst. outlier.ao logical. TRUE, automatic detection additive outliers enabled (outlier.enabled must also set TRUE). outlier.tc logical. TRUE, automatic detection transitory changes enabled (outlier.enabled must also set TRUE). outlier.ls logical. TRUE, automatic detection level shifts enabled (outlier.enabled must also set TRUE). outlier.logical. TRUE, automatic detection seasonal outliers enabled (outlier.enabled must also set TRUE). outlier.usedefcv logical. TRUE, critical value outlier detection procedure automatically determined number observations outlier detection time span. FALSE, procedure uses entered critical value (outlier.cv). outlier.cv numeric. entered critical value outlier detection procedure. modification variable taken account outlier.usedefcv set FALSE. outlier.method determines program successively adds detected outliers model. present, AddOne method supported. outlier.tcrate numeric. rate decay transitory change outlier. automdl.enabled logical. TRUE, automatic modelling ARIMA model enabled. FALSE, parameters ARIMA model can specified. Control variables automatic modelling ARIMA model (automdl.enabled set TRUE): automdl.acceptdefault logical. TRUE, default model (ARIMA(0,1,1)(0,1,1)) may chosen first step automatic model identification. Ljung-Box Q statistics residuals acceptable, default model accepted attempt made identify another model. automdl.cancel cancellation limit (numeric). difference moduli AR MA roots (estimating ARIMA(1,0,1)(1,0,1) models second step automatic identification differencing orders) smaller cancellation limit, two roots assumed equal cancel . automdl.ub1 first unit root limit (numeric). threshold value initial unit root test automatic differencing procedure. one roots estimation ARIMA(2,0,0)(1,0,0) plus mean model, performed first step automatic model identification procedure, larger first unit root limit modulus, set equal unity. automdl.ub2 second unit root limit (numeric). one roots estimation ARIMA(1,0,1)(1,0,1) plus mean model, performed second step automatic model identification procedure, larger second unit root limit modulus, checked common factor corresponding AR MA polynomials ARMA model can canceled (see automdl.cancel). cancellation, AR root set equal unity (.e. differencing order changes). automdl.mixed logical. variable controls whether ARIMA models non-seasonal AR MA terms seasonal AR MA terms considered automatic model identification procedure. FALSE, model AR MA terms seasonal non-seasonal parts model can acceptable, provided AR MA terms either seasonal non-seasonal terms. automdl.balanced logical. TRUE, automatic model identification procedure preference balanced models (.e. models order combined AR differencing operator equal order combined MA operator). automdl.armalimit ARMA limit (numeric). threshold value t-statistics ARMA coefficients constant term used final test model parsimony. highest order ARMA coefficient t-value smaller value magnitude, order model reduced. constant term t-value smaller ARMA limit magnitude, removed set regressors. automdl.reducecv numeric, ReduceCV. percentage outlier's critical value reduced identified model found Ljung-Box statistic unacceptable confidence coefficient. parameter 0 1, active automatic outlier identification enabled. reduced critical value set (1-ReduceCV)*CV, CV original critical value. automdl.ljungboxlimit Ljung Box limit (numeric). Acceptance criterion confidence intervals Ljung-Box Q statistic. LjungBox Q statistics residuals final model greater Ljung Box limit, model rejected, outlier critical value reduced model outlier identification (specified) redone reduced value. automdl.ubfinal numeric, final unit root limit. threshold value final unit root test. magnitude AR root final model smaller final unit root limit, unit root assumed, order AR polynomial reduced one appropriate order differencing (non-seasonal, seasonal) increased. parameter value greater one. Control variables non-automatic modelling ARIMA model (automdl.enabled set FALSE): arima.mu logical. TRUE, mean considered part ARIMA model. arima.p numeric. order non-seasonal autoregressive (AR) polynomial. arima.d numeric. regular differencing order. arima.q numeric. order non-seasonal moving average (MA) polynomial. arima.bp numeric. order seasonal autoregressive (AR) polynomial. arima.bd numeric. seasonal differencing order. arima.bq numeric. order seasonal moving average (MA) polynomial. Control variables user-defined ARMA coefficients. Coefficients can defined regular seasonal autoregressive (AR) polynomials moving average (MA) polynomials. model considers coefficients procedure estimation (arima.coefType) provided, number provided coefficients matches sum (regular seasonal) AR MA orders (p,q,bp,bq). arima.coefEnabled logical. TRUE, program uses user-defined ARMA coefficients. arima.coef vector providing coefficients regular seasonal AR MA polynomials. vector length must equal sum regular seasonal AR MA orders. coefficients shall provided following order: regular AR (Phi; p elements), regular MA  (Theta; q elements), seasonal AR (BPhi; bp elements) seasonal MA (BTheta; bq elements). E.g.: arima.coef=c(0.6,0.7) arima.p=1, arima.q=0,arima.bp=1 arima.bq=0. arima.coefType vector defining ARMA coefficients estimation procedure. Possible procedures : \"Undefined\" = use user-defined input (.e. coefficients estimated), \"Fixed\" = coefficients fixed value provided user, \"Initial\" = value defined user used initial condition. orders coefficients shall defined, arima.coef can set NA 0, arima.coefType can set \"Undefined\". E.g.: arima.coef = c(-0.8,-0.6,NA), arima.coefType = c(\"Fixed\",\"Fixed\",\"Undefined\"). fcst.horizon forecasting horizon (numeric). forecast length generated RegARIMA model periods (positive values) years (negative values). default, program generates two-year forecast (fcst.horizon set -2). x11.mode character: decomposition mode. Determines mode seasonal adjustment decomposition performed: \"Undefined\" - assumption concerning relationship time series components made; \"Additive\" - assumes additive relationship; \"Multiplicative\" - assumes multiplicative relationship; \"LogAdditive\" - performs additive decomposition logarithms series adjusted; \"PseudoAdditive\" - assumes pseudo-additive relationship. changed program, needed. x11.seasonalComp logical: TRUE, program computes seasonal component. Otherwise, seasonal component estimated values set 0 (additive decomposition) 1 (multiplicative decomposition). x11.lsigma numeric: lower sigma boundary detection extreme values, > 0.5, default=1.5. x11.usigma numeric: upper sigma boundary detection extreme values, > lsigma, default=2.5. x11.trendAuto logical: automatic Henderson filter. TRUE, automatic selection Henderson filter's length trend estimation enabled. x11.trendma numeric: length Henderson filter. user-defined length Henderson filter. option available automatic Henderson filter selection disabled (x11.trendAuto=FALSE). odd number range (1, 101]. x11.seasonalma vector character(s) specifying seasonal moving average (.e. seasonal filter) used estimate seasonal factors entire series. vector can length: 1 - seasonal filter used periods (e.g.: `seasonal.filter = \"Msr\"` `seasonal.filter = \"S3X3\"` ); different value quarter (length 4) month (length 12) - (e.g. quarterly series: `seasonal.filter = c(\"S3X3\", \"Msr\", \"S3X3\", \"Msr\")`). Possible filters : `\"Msr\"`, `\"Stable\"`, `\"X11Default\"`, `\"S3X1\"`, `\"S3X3\"`, `\"S3X5\"`, `\"S3X9\"`, `\"S3X15\"`. `\"Msr\"` - program chooses final seasonal filter automatically. x11.fcasts numeric: number forecasts generated RegARIMA model periods (positive values) years (negative values).Default value: fcasts=-1. x11.bcasts numeric: number backcasts used X11. Negative figures translated years backcasts. Default value: bcasts=0. x11.calendarSigma character specify standard errors used extreme values detection adjustment computed: 5 year spans irregulars (\"None\", default); separately calendar month/quarter (\"\"); separately period Cochran’s hypothesis test determines irregular component heteroskedastic calendar month/quarter (\"Signif\"); separately two complementary sets calendar months/quarters specified x11.sigmaVector parameter (\"Select\", see parameter x11.sigmaVector). x11.sigmaVector vector specify one two groups periods whose standard errors used extreme values detection adjustment computed. used x11.calendarSigma = \"Select\". Possible values : \"Group1\" \"Group2\". x11.excludeFcasts logical: exclude forecasts backcasts. TRUE, RegARIMA model forecasts backcasts used detection extreme values seasonal adjustment routines. benchmarking.enabled logical: enable benchmarking. TRUE, benchmarking enabled. benchmarking.target character: target benchmarking procedure, can raw series (\"Original\") series adjusted calendar effects (\"CalendarAdjusted\"). benchmarking.useforecast logical: TRUE, forecasts seasonally adjusted variable target variable used benchmarking computation benchmarking constrains also applied forecasting period. benchmarking.rho numeric: value AR(1) parameter (set 0 1) function used benchmarking. benchmarking.lambda numeric: parameter used benchmarking relatesto weights regression equation. typically equal 0, 1/2 1.","code":""},{"path":"/reference/x13_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"X-13ARIMA model specification, SA/X13 — x13_spec","text":"two-element list class c(\"SA_spec\", \"X13\"), containing: (1) object class c(\"regarima_spec\", \"X13\") RegARIMA model specification; (2) object class c(\"X11_spec\", \"data.frame\") X11 algorithm specification. component refers different parts SA model specification, mirroring arguments function (details, see function arguments description). lowest-level component (except span, pre-specified outliers, user-defined variables pre-specified ARMA coefficients) structured data frame columns denoting different variables model specification rows referring : first row: base specification, provided within argument spec; second row: user modifications specified remaining arguments function (e.g.: arima.d); third row: final model specification. final specification (third row) shall include user modifications (row two) unless wrongly specified. pre-specified outliers, user-defined variables pre-specified ARMA coefficients consist list Predefined (base model specification) Final values. regarima: object class c(\"regarima_spec\", \"x13\"). See Value function regarima_spec_x13. x11: data.frame class c(\"X11_spec\", \"data.frame\"), containing x11 variables line names arguments variables. final values can also accessed function s_x11.","code":""},{"path":"/reference/x13_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"X-13ARIMA model specification, SA/X13 — x13_spec","text":"available predefined 'JDemetra+' model specifications described table :","code":""},{"path":"/reference/x13_spec.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"X-13ARIMA model specification, SA/X13 — x13_spec","text":"information examples related 'JDemetra+' features online documentation: https://jdemetra-new-documentation.netlify.app/ BOX G.E.P. JENKINS G.M. (1970), \"Time Series Analysis: Forecasting Control\", Holden-Day, San Francisco. BOX G.E.P., JENKINS G.M., REINSEL G.C. LJUNG G.M. (2015), \"Time Series Analysis: Forecasting Control\", John Wiley & Sons, Hoboken, N. J., 5th edition.","code":""},{"path":[]},{"path":"/reference/x13_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"X-13ARIMA model specification, SA/X13 — x13_spec","text":"","code":"# \\donttest{ myseries <- ipi_c_eu[, \"FR\"] myspec1 <- x13_spec(spec = \"RSA5c\") myreg1 <- x13(myseries, spec = myspec1)  # To modify a pre-specified model specification myspec2 <- x13_spec(spec = \"RSA5c\", tradingdays.option = \"WorkingDays\") myreg2 <- x13(myseries, spec = myspec2)  # To modify the model specification of a \"X13\" object  myspec3 <- x13_spec(myreg1, tradingdays.option = \"WorkingDays\")  myreg3 <- x13(myseries, myspec3)  # To modify the model specification of a \"X13_spec\" object  myspec4 <- x13_spec(myspec1, tradingdays.option = \"WorkingDays\")  myreg4 <- x13(myseries, myspec4)  # Pre-specified outliers  myspec1 <- x13_spec(spec = \"RSA5c\", usrdef.outliersEnabled = TRUE,              usrdef.outliersType = c(\"LS\", \"AO\"),              usrdef.outliersDate = c(\"2008-10-01\", \"2002-01-01\"),              usrdef.outliersCoef = c(36, 14),              transform.function = \"None\")   myreg1 <- x13(myseries, myspec1)  myreg1 #> RegARIMA #> y = regression model + arima (2, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)     0.07859      0.114 #> Phi(2)     0.19792      0.076 #> Theta(1)  -0.48272      0.111 #> BTheta(1) -0.65916      0.043 #>  #>               Estimate Std. Error #> Monday         0.64094      0.228 #> Tuesday        0.81794      0.229 #> Wednesday      1.05374      0.229 #> Thursday       0.06981      0.228 #> Friday         0.93434      0.228 #> Saturday      -1.63686      0.226 #> Leap year      2.11550      0.697 #> Easter [1]    -2.38135      0.451 #> AO (9-2008)   31.95554      2.924 #> LS (9-2008)  -57.04093      2.657 #> TC (4-2020)  -35.62104      2.120 #> AO (3-2020)  -21.00931      2.145 #> AO (5-2011)   13.21877      1.832 #> TC (9-2008)   23.44654      4.001 #> TC (12-2001) -20.47521      2.922 #> AO (12-2001)  17.13461      2.962 #> TC (2-2002)   10.61731      1.937 #>  #> Fixed outliers:  #>              Coefficients #> LS (10-2008)           36 #> AO (1-2002)            14 #>  #>  #> Residual standard error: 2.178 on 337 degrees of freedom #> Log likelihood = -792.6, aic =  1629 aicc =  1632, bic(corrected for length) = 1.901 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.151 #> M(2)    0.097 #> M(3)    1.206 #> M(4)    0.558 #> M(5)    1.041 #> M(6)    0.037 #> M(7)    0.082 #> M(8)    0.242 #> M(9)    0.062 #> M(10)   0.267 #> M(11)   0.252 #> Q       0.366 #> Q-M2    0.399 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t            s           i #> Jan 2020 101.0 102.89447 102.9447  -1.89446776  -0.0502488 #> Feb 2020 100.1 103.56224 102.9860  -3.46224124   0.5762734 #> Mar 2020  91.8  82.81896 103.2071   8.98103618 -20.3881828 #> Apr 2020  66.7  66.62390 103.6164   0.07610348 -36.9925073 #> May 2020  73.7  78.88976 104.0255  -5.18976181 -25.1357871 #> Jun 2020  98.2  87.30845 104.3450  10.89154932 -17.0365408 #> Jul 2020  97.4  92.39390 104.4861   5.00609785 -12.0921816 #> Aug 2020  71.7  97.51560 104.3380 -25.81559971  -6.8224392 #> Sep 2020 104.7  97.40102 103.9044   7.29897634  -6.5033820 #> Oct 2020 106.7  98.39408 103.3109   8.30592464  -4.9168409 #> Nov 2020 101.6 100.23574 102.7824   1.36426365  -2.5467131 #> Dec 2020  96.6  99.67219 102.4984  -3.07218537  -2.8261840 #>  #> Forecasts: #>                y_f     sa_f      t_f          s_f         i_f #> Jan 2021  94.41766 101.0272 102.4220  -6.60952495 -1.39481900 #> Feb 2021  97.82331 101.6172 102.4196  -3.79385040 -0.80247216 #> Mar 2021 114.01485 102.1273 102.3712  11.88751670 -0.24388469 #> Apr 2021 102.04691 102.0672 102.2273  -0.02033583 -0.16002624 #> May 2021  95.95071 101.4262 102.0682  -5.47547024 -0.64200227 #> Jun 2021 112.61492 101.2166 101.9501  11.39833187 -0.73348910 #> Jul 2021 104.00289 101.5502 101.9316   2.45263829 -0.38137799 #> Aug 2021  79.03331 102.3155 102.0544 -23.28216183  0.26109558 #> Sep 2021 108.98851 102.3414 102.2480   6.64711680  0.09343944 #> Oct 2021 108.49736 102.1909 102.4372   6.30644391 -0.24626669 #> Nov 2021 106.32534 102.4451 102.6074   3.88025741 -0.16229864 #> Dec 2021  99.71313 102.9154 102.7518  -3.20223190  0.16356694 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         1.625 #>  Seasonal     41.918 #>  Irregular     0.727 #>  TD & Hol.     1.851 #>  Others       55.678 #>  Total       101.800 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.042 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          0.974 #>  qs test on i                           0.779 #>  f-test on sa (seasonal dummies)        0.921 #>  f-test on i (seasonal dummies)         0.826 #>  Residual seasonality (entire series)   0.770 #>  Residual seasonality (last 3 years)    0.894 #>  f-test on sa (td)                      0.974 #>  f-test on i (td)                       0.988 #>  #>  #> Additional output variables  s_preOut(myreg1) #>   type       date coeff #> 1   LS 2008-10-01    36 #> 2   AO 2002-01-01    14   # User-defined calendar regressors  var1 <- ts(rnorm(length(myseries))*10, start = start(myseries), frequency = 12)  var2 <- ts(rnorm(length(myseries))*100, start = start(myseries), frequency = 12)  var <- ts.union(var1, var2)  myspec1 <- x13_spec(spec = \"RSA5c\", tradingdays.option = \"UserDefined\",                      usrdef.varEnabled = TRUE,                      usrdef.var = var,                      usrdef.varType = c(\"Calendar\", \"Calendar\")) #> Warning: With tradingdays.option = \"UserDefined\", the parameters tradingdays.autoadjust, tradingdays.leapyear and tradingdays.stocktd are ignored.  myreg1 <- x13(myseries, myspec1)  myreg1 #> RegARIMA #> y = regression model + arima (3, 1, 1, 0, 1, 1) #> Log-transformation: no #> Coefficients: #>           Estimate Std. Error #> Phi(1)      0.3595      0.209 #> Phi(2)      0.1177      0.210 #> Phi(3)     -0.3259      0.155 #> Theta(1)   -0.6771      0.192 #> BTheta(1)  -0.7343      0.039 #>  #>              Estimate Std. Error #> Easter [8]     -2.891      0.686 #> TC (4-2020)   -36.231      2.021 #> AO (3-2020)   -22.969      2.463 #> LS (11-2008)  -12.368      1.610 #> AO (5-2011)     9.825      2.265 #> TC (2-2009)    -8.128      1.857 #>  #>  #> Residual standard error: 2.839 on 347 degrees of freedom #> Log likelihood = -889.4, aic =  1803 aicc =  1804, bic(corrected for length) = 2.267 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.376 #> M(2)    0.310 #> M(3)    3.000 #> M(4)    0.733 #> M(5)    2.377 #> M(6)    0.514 #> M(7)    0.116 #> M(8)    0.294 #> M(9)    0.074 #> M(10)   0.369 #> M(11)   0.334 #> Q       0.818 #> Q-M2    0.881 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  23-Henderson #>  #>  #> Final #> Last observed values #>              y        sa        t          s             i #> Jan 2020 101.0 103.76443 103.7718  -2.764432  -0.007371637 #> Feb 2020 100.1 104.34515 103.9252  -4.245147   0.419965250 #> Mar 2020  91.8  81.04300 104.1168  10.757002 -23.073821166 #> Apr 2020  66.7  68.07471 104.2936  -1.374714 -36.218923904 #> May 2020  73.7  77.34542 104.4050  -3.645424 -27.059534745 #> Jun 2020  98.2  88.68292 104.4313   9.517080 -15.748342655 #> Jul 2020  97.4  93.46921 104.3778   3.930791 -10.908580688 #> Aug 2020  71.7  95.43752 104.2570 -23.737519  -8.819459329 #> Sep 2020 104.7  99.17267 104.0850   5.527329  -4.912314376 #> Oct 2020 106.7  97.12864 103.8669   9.571357  -6.738282414 #> Nov 2020 101.6  99.69487 103.6276   1.905134  -3.932784061 #> Dec 2020  96.6 102.36060 103.4003  -5.760595  -1.039736263 #>  #> Forecasts: #>                y_f     sa_f      t_f         s_f         i_f #> Jan 2021  98.44952 101.2056 103.1901  -2.7560785 -1.98454698 #> Feb 2021  98.43821 102.5471 103.0165  -4.1088538 -0.46944312 #> Mar 2021 110.75460 101.9734 102.8973   8.7811716 -0.92383422 #> Apr 2021 103.71542 102.9016 102.8411   0.8138272  0.06051994 #> May 2021  99.53055 103.1863 102.8510  -3.6557369  0.33528360 #> Jun 2021 111.31381 101.6749 102.8754   9.6388933 -1.20051449 #> Jul 2021 105.69802 101.5389 102.9077   4.1591091 -1.36882965 #> Aug 2021  79.42133 103.3872 102.9666 -23.9658420  0.42058783 #> Sep 2021 108.59095 102.9687 103.0586   5.6222373 -0.08983556 #> Oct 2021 112.00799 102.4761 103.1532   9.5318659 -0.67704911 #> Nov 2021 105.36088 103.8747 103.2467   1.4862299  0.62793860 #> Dec 2021  98.66941 104.3502 103.4522  -5.6808324  0.89800432 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         1.963 #>  Seasonal     59.842 #>  Irregular     3.416 #>  TD & Hol.     0.172 #>  Others       34.046 #>  Total        99.439 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.269 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          0.000 #>  qs test on i                           0.002 #>  f-test on sa (seasonal dummies)        0.813 #>  f-test on i (seasonal dummies)         0.754 #>  Residual seasonality (entire series)   0.568 #>  Residual seasonality (last 3 years)    1.000 #>  f-test on sa (td)                      0.000 #>  f-test on i (td)                       0.000 #>  #>  #> Additional output variables   myspec2 <- x13_spec(spec = \"RSA5c\", usrdef.varEnabled = TRUE,              usrdef.var = var1, usrdef.varCoef = 2,              transform.function = \"None\")  myreg2 <- x13(myseries, myspec2)  s_preVar(myreg2) #> $series #>               Jan          Feb          Mar          Apr          May #> 1990  -4.93380941 -12.28615839  12.84563150  12.11780172   0.17867075 #> 1991  17.91430812  -8.01034578  -5.57933180   7.56117489  -0.65654280 #> 1992   6.99530402  -4.78932287 -13.14202741  -9.03645819  -6.82677769 #> 1993   6.85714751 -15.74190181 -10.39202637  10.62892692 -12.79380891 #> 1994   6.55348285   2.08748369   4.79304525  11.19721889   3.58970059 #> 1995 -16.27036866  10.95973351 -11.30615770   7.49407597   5.07040903 #> 1996 -16.41368825   1.85576753   8.08139505   4.62741902  -1.40862948 #> 1997  21.10958544   1.06319181   2.88638282  -8.28129022   2.59246188 #> 1998   7.49492399  13.68161796   8.09041925  10.52043916  15.76710173 #> 1999  14.61477127  -3.93734253   5.88577012 -10.59461309   7.02083603 #> 2000  -4.70589637  26.18843475  17.81970431   3.11227898   6.04652922 #> 2001   6.97447152   8.50194263  -2.82469962  10.56820511  -1.64563751 #> 2002   6.45915651   2.86538618 -19.55302496  -0.70122520 -19.93476957 #> 2003  -4.71600217  -3.86758443  -0.32921492 -15.89925204 -16.31630380 #> 2004 -15.66243530  -8.27262343  10.43432242  -5.61818713   4.58990225 #> 2005 -13.44497531  -0.07853537  -7.09360740  14.19910316  21.00753869 #> 2006  16.38748991   7.14250476   0.21730272  -7.10864161   0.67650247 #> 2007  19.42670865   4.54756408  -4.35878269  16.42250741  -1.19391302 #> 2008  -6.44304935  -3.17781887 -26.11142582  -4.04070180  19.63939389 #> 2009  -4.30394846  13.18921431   7.86662563   3.90908196   5.55016634 #> 2010  -3.55226178   9.79276002 -11.74070697  -3.96460863   0.28959344 #> 2011   3.71975670   7.52496103  -8.44102704 -14.74703765  -1.27286512 #> 2012   3.04153582  -1.56110528   6.66411599 -21.43024893  -7.85684050 #> 2013  15.28664770   2.85760869   9.66478863   0.41676859  -1.86568045 #> 2014   9.16852243  11.82521119   0.89920960 -14.23925932   1.85840157 #> 2015  18.72999491  -9.15749659  -0.12128002 -11.17237976   2.69965596 #> 2016 -15.34357208   0.26618737   3.62927093  -6.77324332  -3.86793166 #> 2017  -1.52302024  13.18666001  -7.75961869  11.48134828  11.40960766 #> 2018 -11.51931160  -8.74614335  -0.56005464  -6.48120780   2.67518834 #> 2019   1.30699486   8.77061311   5.57893934  11.50015537  -2.82304681 #> 2020  -1.61878192   5.52162660   3.48733451  -0.62679216  -4.82827570 #>               Jun          Jul          Aug          Sep          Oct #> 1990  17.00247776  13.44115353   2.47249503  -0.95850995  -1.05894771 #> 1991  14.03825101   8.06123109  -1.25334438  -5.64422544   9.40777992 #> 1992   3.74599658   8.09784422 -10.27311894   2.71204716   3.72163386 #> 1993 -17.65259960 -23.94684943   6.61851420   2.79202139 -19.75798133 #> 1994  11.98583489   5.63019465   3.60364311   8.25363990  -0.40392584 #> 1995   1.49227768   7.56914894  -4.27224530 -13.47831121   0.82595585 #> 1996 -18.30167300   4.04087877  -0.13750674  -1.02241238   2.02454445 #> 1997  -4.95230738  -2.89501667   6.40683953  -1.41462861  -8.79847386 #> 1998  11.52029911  -5.17742857  -6.35012824  -4.00123911   5.93241461 #> 1999  -2.54390092  -3.80451079   7.22051799  13.27842786  -1.25492499 #> 2000   8.02925361  -7.42182079 -10.86486271  15.85888347  -1.40704169 #> 2001  -5.05197318  -4.02419900  22.95251358  -0.58040167   1.22377660 #> 2002   1.21132684   4.35595856   1.38904324   9.82497501  -2.86391397 #> 2003  -6.19216932  -4.28563857  21.43623439  13.81055332  -9.81823126 #> 2004   4.61175487   5.88209678  13.65187644   2.37584966 -13.01932383 #> 2005   0.56429659   8.05545122  -1.92729984  -1.20578134  -2.41185306 #> 2006  18.67312976   7.39326267   9.65687441   4.69334931   7.32928056 #> 2007   0.03403357  -2.87662480  10.04914840 -15.19681487  10.80588866 #> 2008  -9.08038236   2.31002822  10.83031391 -10.23062790  19.75884923 #> 2009   4.95861493 -15.88836847  -3.21264477 -15.52052891   9.61515998 #> 2010 -14.70506429   9.65172228  -7.81441694  12.57319338 -20.46247314 #> 2011  -1.13083340  18.06296611  -9.16313634   3.26036046  17.29406356 #> 2012   8.56316142  -3.54721322   1.86108946   3.85897720   6.05504903 #> 2013 -13.51099737  -9.53225887 -12.82607152  13.48738780   0.87489524 #> 2014   6.47343621   1.23381550  -5.57040623  -4.24403791  14.21456362 #> 2015  15.11653990  -5.93155678 -16.14954366 -13.73896551  11.92737540 #> 2016  -2.10774079  -6.33652476   0.79569318   2.38637053  -5.11546412 #> 2017  -3.34901191   6.29659134   7.34016764  18.02049619 -11.48480057 #> 2018   3.49756194 -12.17302032   0.81927914  -7.95643416  -5.84737942 #> 2019 -17.42631121   4.01343311   6.49059795  10.87865196  11.59117507 #> 2020  19.95979803 -12.51509572   5.28487960 -12.47616265  -0.41651340 #>               Nov          Dec #> 1990 -12.61154714 -17.60210399 #> 1991  12.69808946  12.65038490 #> 1992 -14.73803514 -14.22799149 #> 1993   4.96506933  13.53031635 #> 1994  -6.05456736  -4.78648838 #> 1995  11.53728116  25.86841900 #> 1996   8.03320548  -5.87793245 #> 1997  -5.23639611  -6.13436596 #> 1998  -0.01094905 -18.90227763 #> 1999  11.39794704  -7.84406639 #> 2000  -9.75276634  -0.91846724 #> 2001  -2.00777681   4.60803569 #> 2002  16.94152064   5.21310799 #> 2003  13.12917276   3.72374042 #> 2004  17.37977175  14.64151538 #> 2005  -2.55729561  -2.08778684 #> 2006  13.33797734  13.30182641 #> 2007   4.35371426 -13.89147408 #> 2008   5.01748489   9.33783648 #> 2009 -10.86315269 -17.16257245 #> 2010  18.19078188 -13.67382107 #> 2011   6.18631030  -2.43510381 #> 2012   5.22120605  16.07831850 #> 2013  -5.66758222   5.73972934 #> 2014  -8.10897493  -6.78534611 #> 2015   1.16453951   1.97141988 #> 2016  -8.20642372 -14.97546434 #> 2017  12.16381354  -6.73465522 #> 2018   5.34806561  -5.30695812 #> 2019 -15.10504494   1.14206605 #> 2020 -10.54737293  -0.98173680 #>  #> $description #>              type coeff #> userdef Undefined     2 #>   # Pre-specified ARMA coefficients  myspec1 <- x13_spec(spec = \"RSA5c\", automdl.enabled = FALSE,              arima.p = 1, arima.q = 1, arima.bp = 0, arima.bq = 1,              arima.coefEnabled = TRUE,              arima.coef = c(-0.8, -0.6, 0),              arima.coefType = c(rep(\"Fixed\", 2), \"Undefined\"))   s_arimaCoef(myspec1) #>                Type Value #> Phi(1)        Fixed  -0.8 #> Theta(1)      Fixed  -0.6 #> BTheta(1) Undefined   0.0  myreg1 <- x13(myseries, myspec1)  myreg1 #> RegARIMA #> y = regression model + arima (1, 1, 1, 0, 1, 1) #> Log-transformation: yes #> Coefficients: #>           Estimate Std. Error #> Phi(1)     -0.8000       0.00 #> Theta(1)   -0.6000       0.00 #> BTheta(1)  -0.6977       0.04 #>  #>              Estimate Std. Error #> Monday       0.006317      0.002 #> Tuesday      0.007824      0.002 #> Wednesday    0.010528      0.002 #> Thursday     0.001857      0.002 #> Friday       0.010099      0.002 #> Saturday    -0.018439      0.002 #> Easter [1]  -0.020593      0.004 #> TC (4-2020) -0.475720      0.031 #> AO (3-2020) -0.213355      0.023 #> AO (5-2011)  0.143705      0.016 #>  #>  #> Residual standard error: 0.0256 on 347 degrees of freedom #> Log likelihood = 802.3, aic =  1733 aicc =  1734, bic(corrected for length) = -7.15 #>  #>  #>  #> Decomposition #> Monitoring and Quality Assessment Statistics: #>       M stats #> M(1)    0.097 #> M(2)    0.052 #> M(3)    0.750 #> M(4)    0.749 #> M(5)    0.731 #> M(6)    0.126 #> M(7)    0.075 #> M(8)    0.220 #> M(9)    0.075 #> M(10)   0.293 #> M(11)   0.281 #> Q       0.300 #> Q-M2    0.331 #>  #> Final filters:  #> Seasonal filter:  3x5 #> Trend filter:  13 terms Henderson moving average #>  #>  #> Final #> Last observed values #>              y        sa        t         s         i #> Jan 2020 101.0 103.50059 103.4716 0.9758398 1.0002804 #> Feb 2020 100.1 103.70789 104.1959 0.9652110 0.9953168 #> Mar 2020  91.8  85.02419 105.2353 1.0796927 0.8079439 #> Apr 2020  66.7  66.06576 106.3700 1.0096002 0.6210940 #> May 2020  73.7  77.29646 107.2332 0.9534719 0.7208256 #> Jun 2020  98.2  88.21419 107.6348 1.1131996 0.8195693 #> Jul 2020  97.4  92.04371 107.5406 1.0581929 0.8558971 #> Aug 2020  71.7  95.53300 106.9592 0.7505260 0.8931720 #> Sep 2020 104.7  97.32774 105.9849 1.0757467 0.9183169 #> Oct 2020 106.7  98.74148 104.7928 1.0805996 0.9422542 #> Nov 2020 101.6 100.23569 103.5604 1.0136110 0.9678964 #> Dec 2020  96.6  99.45166 102.3889 0.9713262 0.9713127 #>  #> Forecasts: #>                y_f     sa_f       t_f       s_f       i_f #> Jan 2021  91.86627 99.03608 101.33234 0.9276040 0.9773393 #> Feb 2021  93.73814 98.76312 100.39814 0.9491209 0.9837146 #> Mar 2021 109.97904 99.04192  99.55589 1.1104292 0.9948373 #> Apr 2021  99.51314 98.51411  98.84092 1.0101410 0.9966935 #> May 2021  92.44138 97.26558  98.27297 0.9504018 0.9897491 #> Jun 2021 109.51917 97.80126  97.82297 1.1198135 0.9997780 #> Jul 2021  99.72232 96.85484  97.49522 1.0296059 0.9934317 #> Aug 2021  74.93973 97.28720  97.30419 0.7702938 0.9998254 #> Sep 2021 104.15955 97.30940  97.21500 1.0703955 1.0009711 #> Oct 2021 102.57254 96.84676  97.16553 1.0591221 0.9967193 #> Nov 2021 100.68100 96.97009  97.14932 1.0382686 0.9981552 #> Dec 2021  94.63045 97.42206  97.13060 0.9713452 1.0030007 #>  #>  #> Diagnostics #> Relative contribution of the components to the stationary #> portion of the variance in the original series, #> after the removal of the long term trend #>  Trend computed by Hodrick-Prescott filter (cycle length = 8.0 years) #>            Component #>  Cycle         5.183 #>  Seasonal     82.105 #>  Irregular     1.148 #>  TD & Hol.     3.365 #>  Others       10.592 #>  Total       102.393 #>  #> Combined test in the entire series #>  Non parametric tests for stable seasonality #>                                                           P.value #>    Kruskall-Wallis test                                      0.000 #>    Test for the presence of seasonality assuming stability   0.000 #>    Evolutive seasonality test                                0.406 #>   #>  Identifiable seasonality present #>  #> Residual seasonality tests #>                                       P.value #>  qs test on sa                          1.000 #>  qs test on i                           0.939 #>  f-test on sa (seasonal dummies)        0.990 #>  f-test on i (seasonal dummies)         0.972 #>  Residual seasonality (entire series)   0.989 #>  Residual seasonality (last 3 years)    0.996 #>  f-test on sa (td)                      0.994 #>  f-test on i (td)                       0.959 #>  #>  #> Additional output variables  # To define a seasonal filter  myspec1 <- x13_spec(\"RSA5c\", x11.seasonalma = rep(\"S3X1\", 12))  mysa1 <- x13(myseries, myspec1) # }"},{"path":[]},{"path":"/news/index.html","id":"rjdemetra-028","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.2.8","title":"RJDemetra 0.2.8","text":"CRAN release: 2024-12-12 Improvement warning message importing model data SaItem (#61). get_model, get_jmodel get_jspec.sa_item now argument type define specification import (domain, estimation point). default domain specification extracted (). Correction bug add_sa_item() models created jtramoseats() external variables. Correction bug get_jmodel() model contains user-defined regressors (calendar regressors) fixed coefficients (#157). Correction bug annual data regarima() functions.","code":""},{"path":"/news/index.html","id":"rjdemetra-027","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.2.7","title":"RJDemetra 0.2.7","text":"CRAN release: 2024-10-01 URL github repository updated (github.com/jdemetra replaced github.com/rjdverse). results user_defined_variables() updated. README correction. benchmarking option added x13_spec() tramoseats_spec() output x13() tramoseats(). .jars updated.","code":""},{"path":"/news/index.html","id":"rjdemetra-026","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.2.6","title":"RJDemetra 0.2.6","text":"CRAN release: 2024-03-19 possibility export last msr monthly data (issue #122). possibility export X-11 components: y_cmp, y_cmp_f, t_cmp, t_cmp_f, sa_cmp, s_cmp, s_cmp_f, i_cmp. correction importing models containing ramp regressors frequency 12 (monthly). correction get_jmodel() empty multiprocessings.","code":""},{"path":"/news/index.html","id":"rjdemetra-025","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.2.5","title":"RJDemetra 0.2.5","text":"CRAN release: 2024-02-03 proc_data() update export data Java object. seasonality Kurskal-Wallis test corrected (issue #128). vcov() correction matrix NULL new parameter component. corrections print() methods.","code":""},{"path":"/news/index.html","id":"rjdemetra-024","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.2.4","title":"RJDemetra 0.2.4","text":"CRAN release: 2023-10-18 New function get_all_names() get_position(). correction save_workspace() load_workspace() using relative path.","code":""},{"path":"/news/index.html","id":"rjdemetra-023","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.2.3","title":"RJDemetra 0.2.3","text":"CRAN release: 2023-06-02 Typo printed arima coefficients : BPhi Theta inverted.","code":""},{"path":"/news/index.html","id":"rjdemetra-022","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.2.2","title":"RJDemetra 0.2.2","text":"CRAN release: 2023-04-27 update documentation. removes extra argument print tramo. SystemRequirements update CRAN policies.","code":""},{"path":"/news/index.html","id":"rjdemetra-021","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.2.1","title":"RJDemetra 0.2.1","text":"CRAN release: 2022-11-11 Fix complete_dictionary.SA() avoid warning.","code":""},{"path":"/news/index.html","id":"rjdemetra-020","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.2.0","title":"RJDemetra 0.2.0","text":"CRAN release: 2022-03-23 Bug x11 introduced RJDemetra 0.1.9 (issue #99). Java 17 compatibility. Change javanamespace avoid name clashes jd+ 3.0. easter.enabled working since RJDemetra 0.1.9. Default parameters span specification d0 d1 NA clarity (issue #102).","code":""},{"path":"/news/index.html","id":"rjdemetra-019","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.1.9","title":"RJDemetra 0.1.9","text":"CRAN release: 2021-11-11 Easter specification working. typos documentation. SystemRequirement update: Java JRE needed.","code":""},{"path":"/news/index.html","id":"rjdemetra-018","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.1.8","title":"RJDemetra 0.1.8","text":"Java version restriction: JDemetra+ RJDemetra compatible Java 16 higher. compatibility versions Java possible next release JDemetra+. java_ncore option added limit number cores used Java two sure respect CRAN policies (remove option, use options(java_ncore = NULL)). However, necessary since RJDemetra shouldn’t use multithread (issue #89).","code":""},{"path":"/news/index.html","id":"rjdemetra-017","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.1.7","title":"RJDemetra 0.1.7","text":"CRAN release: 2021-06-07 Data updated December 2020.","code":""},{"path":"/news/index.html","id":"bug-fixed-0-1-7","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"RJDemetra 0.1.7","text":"fixed coefficients user-defined calendar regressors can now correctly used (issue #87). bug add_sa_item (precisely complete_dictionary.SA) userdefined variable already workspace different suffix.","code":""},{"path":"/news/index.html","id":"rjdemetra-016","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.1.6","title":"RJDemetra 0.1.6","text":"CRAN release: 2020-08-10","code":""},{"path":"/news/index.html","id":"bug-fixed-0-1-6","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"RJDemetra 0.1.6","text":"x11.seasonalma argument wasn’t taken account (issue #78). ipi_c_eu updated: previous data calendar adjusted data, now unadjusted (neither seasonally adjusted calendar adjusted data). print result combined test incorrect.","code":""},{"path":"/news/index.html","id":"rjdemetra-015","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.1.5","title":"RJDemetra 0.1.5","text":"CRAN release: 2020-03-11","code":""},{"path":"/news/index.html","id":"bug-fixed-0-1-5","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"RJDemetra 0.1.5","text":"Henderson filter correctly selected (issue #73). Bug selection TD tramoseats (issue #71).","code":""},{"path":"/news/index.html","id":"new-functionalities-0-1-5","dir":"Changelog","previous_headings":"","what":"New functionalities","title":"RJDemetra 0.1.5","text":"Function get_jspec, get Java object contains specification, now exported.","code":""},{"path":"/news/index.html","id":"rjdemetra-014","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.1.4","title":"RJDemetra 0.1.4","text":"CRAN release: 2020-01-09","code":""},{"path":"/news/index.html","id":"bug-fixed-0-1-4","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"RJDemetra 0.1.4","text":"Error loading workspace metadata (issue #53). degree freedom wrong summary functions. jregarima function now exported. message complete error importing model get_model. trading-days specification correctly specified TRAMO-SEATS.","code":""},{"path":"/news/index.html","id":"new-functionalities-0-1-4","dir":"Changelog","previous_headings":"","what":"New functionalities","title":"RJDemetra 0.1.4","text":"Parameter seats.predictionLength added tramoseats_spec. Parameters x11.calendarSigma x11.sigmaVector added x13_spec. Parameter ylim added plot functions (issue #60). New generic functions: logLik, vcov, df.residual, nobs, residuals (linked issue #56). New pre-specified specification “X11” (pre-processing; linked issue #59). Ramp effects now imported. add_sa_item now compatible jSA object. model added workspace add_sa_item, external regressors renamed don’t already exist workspace. Warning added tradingdays.option = \"UserDefined\" tradingdays.autoadjust, tradingdays.leapyear tradingdays.stocktdtradingdays defined new specification (currently ignored). (issue #67)","code":""},{"path":"/news/index.html","id":"rjdemetra-013","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.1.3","title":"RJDemetra 0.1.3","text":"CRAN release: 2019-06-26","code":""},{"path":"/news/index.html","id":"bug-fixed-0-1-3","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"RJDemetra 0.1.3","text":"multiprocessing empty, get_model longer produces error. Correction option setOutliers TRAMO-SEATS. jaxb.jar files added: save_workspace now works Java 9 higher (jaxb longer provided default since Java 9). Deprecated functions removed.","code":""},{"path":"/news/index.html","id":"documentation-0-1-3","dir":"Changelog","previous_headings":"","what":"Documentation","title":"RJDemetra 0.1.3","text":"jSA documentation improved.","code":""},{"path":"/news/index.html","id":"other-0-1-3","dir":"Changelog","previous_headings":"","what":"Other","title":"RJDemetra 0.1.3","text":"Error added loading package don’t Java 8 higher.","code":""},{"path":"/news/index.html","id":"rjdemetra-012","dir":"Changelog","previous_headings":"","what":"RJDemetra 0.1.2","title":"RJDemetra 0.1.2","text":"CRAN release: 2019-04-16","code":""},{"path":"/news/index.html","id":"major-changes-0-1-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"RJDemetra 0.1.2","text":"_def functions now deprecated replaced functions name without _def. Use: x13_spec instead x13_spec_def, x13 instead x13_def, tramoseats_spec instead tramoseats_spec_def, tramoseats instead tramoseats_def, regarima_spec_tramoseats instead regarima_spec_def_tramoseats, regarima_tramoseats instead regarima_def_tramoseats, regarima_x13 instead regarima_def_x13 regarima_spec_x13 instead regarima_spec_def_x13. object argument renamed spec x13_spec, tramoseats_spec, regarima_spec_x13 regarima_spec_tramoseats.","code":""},{"path":"/news/index.html","id":"new-functionalities-0-1-2","dir":"Changelog","previous_headings":"","what":"New functionalities","title":"RJDemetra 0.1.2","text":"Parameter preliminary.check added specifications functions (regarima_spec_tramoseats, tramoseats_spec, regarima_spec_x13 x13_spec). default (preliminary.check = TRUE), JDemetra+ checks quality input series exclude highly problematic ones: e.g. number identical observations /missing values pre-specified threshold values. preliminary.check = FALSE, thresholds ignored process performed, possible. (issue #39) Error message returned seasonal adjustment fails due preliminary.check. Possibility use user-defined calendar regressors. use tradingdays.option = \"UserDefined add new regressors variables (usrdef.varEnabled = TRUE enable user-defined regressors usrdef.var define regressors) using usrdef.varType = \"Calendar\". usrdef.varType argument recycled number variables defined usrdef.var parameter. News functions get Java object seasonal adjustment pre-adjustment method: jx13, jtramoseats, jregarima, jregarima_x13, jregarima_tramoseats get_jmodel. Therefore, formatting computation faster non ‘j’ functions (x13, tramoseats, regarima, regarima_x13, regarima_tramoseats get_model). manipulate objects, three functions: get_dictionary get indicators can extracted, get_indicators extract indicators jSA2R get formatted R model.","code":""},{"path":"/news/index.html","id":"bug-fixed-0-1-2","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"RJDemetra 0.1.2","text":"x11.fcast can now set 0 1 (issue #42).","code":""}]
